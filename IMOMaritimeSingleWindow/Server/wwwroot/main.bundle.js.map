{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/error/error.component.css","./src/app/error/error.component.html","./src/app/error/error.component.ts","./src/app/error/error.module.ts","./src/app/guards/error.guard.ts","./src/app/guards/root.guard.ts","./src/app/main-content/content-container/basis-data/basis-data.module.ts","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.ts","./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.css","./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.html","./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.ts","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.ts","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.ts","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.ts","./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.css","./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.html","./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.ts","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.ts","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.ts","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.ts","./src/app/main-content/content-container/content-container.component.css","./src/app/main-content/content-container/content-container.component.html","./src/app/main-content/content-container/content-container.component.ts","./src/app/main-content/content-container/content-container.module.ts","./src/app/main-content/content-container/port-call/clearance/clearance.component.css","./src/app/main-content/content-container/port-call/clearance/clearance.component.html","./src/app/main-content/content-container/port-call/clearance/clearance.component.ts","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.ts","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.ts","./src/app/main-content/content-container/port-call/confirmation/confirmation.module.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.ts","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.ts","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html","./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.ts","./src/app/main-content/content-container/port-call/overview/overview.component.css","./src/app/main-content/content-container/port-call/overview/overview.component.html","./src/app/main-content/content-container/port-call/overview/overview.component.ts","./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.css","./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.html","./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.ts","./src/app/main-content/content-container/port-call/port-call.component.css","./src/app/main-content/content-container/port-call/port-call.component.html","./src/app/main-content/content-container/port-call/port-call.component.ts","./src/app/main-content/content-container/port-call/port-call.module.ts","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.css","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.html","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.ts","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.css","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.html","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.ts","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.css","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.html","./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.ts","./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.css","./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.html","./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.ts","./src/app/main-content/content-container/port-call/registration/forms/forms.component.css","./src/app/main-content/content-container/port-call/registration/forms/forms.component.html","./src/app/main-content/content-container/port-call/registration/forms/forms.component.ts","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component.css","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component.html","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component.ts","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.css","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.html","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.ts","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/search-passenger-port/search-passenger-port.component.css","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/search-passenger-port/search-passenger-port.component.html","./src/app/main-content/content-container/port-call/registration/forms/passenger-list/search-passenger-port/search-passenger-port.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.ts","./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/prev-and-next-poc.component.css","./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/prev-and-next-poc.component.html","./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/prev-and-next-poc.component.ts","./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component.css","./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component.html","./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component.ts","./src/app/main-content/content-container/port-call/registration/forms/shared/delete-button/delete-button.component.css","./src/app/main-content/content-container/port-call/registration/forms/shared/delete-button/delete-button.component.html","./src/app/main-content/content-container/port-call/registration/forms/shared/delete-button/delete-button.component.ts","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.css","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.html","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.ts","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.css","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.html","./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.ts","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.ts","./src/app/main-content/content-container/port-call/registration/registration.component.css","./src/app/main-content/content-container/port-call/registration/registration.component.html","./src/app/main-content/content-container/port-call/registration/registration.component.ts","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.ts","./src/app/main-content/footer/footer.component.css","./src/app/main-content/footer/footer.component.html","./src/app/main-content/footer/footer.component.ts","./src/app/main-content/header/header.component.css","./src/app/main-content/header/header.component.html","./src/app/main-content/header/header.component.ts","./src/app/main-content/main-content.component.css","./src/app/main-content/main-content.component.html","./src/app/main-content/main-content.component.ts","./src/app/shared/components/confirmation-modal/confirmation-modal.component.css","./src/app/shared/components/confirmation-modal/confirmation-modal.component.html","./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.css","./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.html","./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.ts","./src/app/shared/components/confirmation-view/clearances/clearances.component.css","./src/app/shared/components/confirmation-view/clearances/clearances.component.html","./src/app/shared/components/confirmation-view/clearances/clearances.component.ts","./src/app/shared/components/confirmation-view/confirmation-view.component.css","./src/app/shared/components/confirmation-view/confirmation-view.component.html","./src/app/shared/components/confirmation-view/confirmation-view.component.ts","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.ts","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.ts","./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.css","./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.html","./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.ts","./src/app/shared/components/contact-select/contact-select.component.css","./src/app/shared/components/contact-select/contact-select.component.html","./src/app/shared/components/contact-select/contact-select.component.ts","./src/app/shared/components/date-time-picker/date-time-picker.component.css","./src/app/shared/components/date-time-picker/date-time-picker.component.html","./src/app/shared/components/date-time-picker/date-time-picker.component.ts","./src/app/shared/components/feedback/feedback.component.css","./src/app/shared/components/feedback/feedback.component.html","./src/app/shared/components/feedback/feedback.component.ts","./src/app/shared/components/location-info-table/location-info-table.component.css","./src/app/shared/components/location-info-table/location-info-table.component.html","./src/app/shared/components/location-info-table/location-info-table.component.ts","./src/app/shared/components/location-time-info-table/location-time-info-table.component.css","./src/app/shared/components/location-time-info-table/location-time-info-table.component.html","./src/app/shared/components/location-time-info-table/location-time-info-table.component.ts","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html","./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.ts","./src/app/shared/components/organization-smart-table/organization-smart-table.component.css","./src/app/shared/components/organization-smart-table/organization-smart-table.component.html","./src/app/shared/components/organization-smart-table/organization-smart-table.component.ts","./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.css","./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.html","./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.ts","./src/app/shared/components/search-location/search-location.component.css","./src/app/shared/components/search-location/search-location.component.html","./src/app/shared/components/search-location/search-location.component.ts","./src/app/shared/components/search-location/search-location.service.ts","./src/app/shared/components/search-organization/search-organization.component.css","./src/app/shared/components/search-organization/search-organization.component.html","./src/app/shared/components/search-organization/search-organization.component.ts","./src/app/shared/components/search-organization/search-organization.service.ts","./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.css","./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.html","./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.ts","./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.service.ts","./src/app/shared/components/search-ship/search-ship.component.css","./src/app/shared/components/search-ship/search-ship.component.html","./src/app/shared/components/search-ship/search-ship.component.ts","./src/app/shared/components/search-ship/search-ship.service.ts","./src/app/shared/components/select-ship-contact/select-ship-contact.component.css","./src/app/shared/components/select-ship-contact/select-ship-contact.component.html","./src/app/shared/components/select-ship-contact/select-ship-contact.component.ts","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.ts","./src/app/shared/components/ship-info-table/ship-info-table.component.css","./src/app/shared/components/ship-info-table/ship-info-table.component.html","./src/app/shared/components/ship-info-table/ship-info-table.component.ts","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html","./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.ts","./src/app/shared/components/ship-smart-table/ship-smart-table.component.css","./src/app/shared/components/ship-smart-table/ship-smart-table.component.html","./src/app/shared/components/ship-smart-table/ship-smart-table.component.ts","./src/app/shared/components/ssn-bg/ssn-bg.component.css","./src/app/shared/components/ssn-bg/ssn-bg.component.html","./src/app/shared/components/ssn-bg/ssn-bg.component.ts","./src/app/shared/components/ssn-card/ssn-card.component.css","./src/app/shared/components/ssn-card/ssn-card.component.html","./src/app/shared/components/ssn-card/ssn-card.component.ts","./src/app/shared/components/ssn-table/ssn-table.component.css","./src/app/shared/components/ssn-table/ssn-table.component.html","./src/app/shared/components/ssn-table/ssn-table.component.ts","./src/app/shared/components/table-card/table-card.component.css","./src/app/shared/components/table-card/table-card.component.html","./src/app/shared/components/table-card/table-card.component.ts","./src/app/shared/constants/blacklisted-routes.ts","./src/app/shared/constants/content-names.ts","./src/app/shared/constants/form-names.ts","./src/app/shared/constants/location-properties.ts","./src/app/shared/constants/location-time-properties.ts","./src/app/shared/constants/menu-claims.ts","./src/app/shared/constants/next-location-time-properties.ts","./src/app/shared/constants/organization-properties.ts","./src/app/shared/constants/organization-types.ts","./src/app/shared/constants/port-call-claims.ts","./src/app/shared/constants/port-call-status-types.ts","./src/app/shared/constants/prev-location-time-properties.ts","./src/app/shared/constants/search-amounts.ts","./src/app/shared/constants/ship-flag-code-properties.ts","./src/app/shared/constants/ship-properties.ts","./src/app/shared/constants/user-properties.ts","./src/app/shared/interfaces/feedback-props.interface.ts","./src/app/shared/models/cargo-item-model.ts","./src/app/shared/models/certificate-of-registry-model.ts","./src/app/shared/models/clearance-model.ts","./src/app/shared/models/consignment-model.ts","./src/app/shared/models/contact-model.ts","./src/app/shared/models/location-model.ts","./src/app/shared/models/organization-model.ts","./src/app/shared/models/port-call-details-model.ts","./src/app/shared/models/port-call-model.ts","./src/app/shared/models/port-call-passenger-model.ts","./src/app/shared/models/ship-contact-model.ts","./src/app/shared/models/ship-model.ts","./src/app/shared/models/ship-stores-model.ts","./src/app/shared/models/token-query-model.ts","./src/app/shared/services/account.service.ts","./src/app/shared/services/auth-service.ts","./src/app/shared/services/auth.request.service.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/constants.service.ts","./src/app/shared/services/content.service.ts","./src/app/shared/services/country.service.ts","./src/app/shared/services/db-connection.service.ts","./src/app/shared/services/fal-cargo.service.ts","./src/app/shared/services/fal-ship-stores.service.ts","./src/app/shared/services/location.service.ts","./src/app/shared/services/login.service.ts","./src/app/shared/services/organization.service.ts","./src/app/shared/services/port-call-details.service.ts","./src/app/shared/services/port-call-overview.service.ts","./src/app/shared/services/port-call-passenger-list.service.ts","./src/app/shared/services/port-call.service.ts","./src/app/shared/services/prev-and-next-poc.service.ts","./src/app/shared/services/purpose.service.ts","./src/app/shared/services/search.service.ts","./src/app/shared/services/ship.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/utils/base.request.ts","./src/app/shared/utils/config.service.ts","./src/app/shared/utils/custom-validators/integer-validator.directive.ts","./src/app/shared/utils/custom-validators/number-validator.directive.ts","./src/app/shared/utils/custom-validators/positive-number-validator.directive.ts","./src/authenticate-xhr.backend.ts","./src/environments/environment.ts","./src/main.ts","./src/selective-preloading-strategy.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"app/auth/auth.module\": [\n\t\t\"./src/app/auth/auth.module.ts\",\n\t\t\"auth.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MainContentComponent } from './main-content/main-content.component';\r\n\r\nimport { SelectivePreloadingStrategy } from 'selective-preloading-strategy';\r\nimport { ErrorComponent } from './error/error.component';\r\nimport { ErrorGuard } from './guards/error.guard';\r\nimport { RootGuard } from './guards/root.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'auth',\r\n    loadChildren: 'app/auth/auth.module#AuthModule'\r\n  },\r\n  // {\r\n  //   path: 'login',\r\n  //   component: LoginComponent,\r\n  //   canActivate: [LoginAuthGuard]\r\n  // },\r\n  /* {\r\n    path: 'ConfirmEmail',\r\n    component: EmailConfirmationComponent,\r\n    canActivate: [EmailConfirmationGuard]\r\n  },\r\n  {\r\n    path: 'ResetPassword',\r\n    component: PasswordResetComponent,\r\n    canActivate: [PasswordResetGuard]\r\n  }, */\r\n  {\r\n    path: '',\r\n    component: MainContentComponent,\r\n    canActivate: [RootGuard]\r\n  },\r\n  {\r\n    path: 'error',\r\n    component: ErrorComponent\r\n  },\r\n  {\r\n    // TODO: Make ErrorComponent\r\n    path: '**',\r\n    component: ErrorComponent,\r\n    canActivate: [ErrorGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule.forRoot(routes, {\r\n      // enableTracing: true, // <-- debugging purposes only\r\n      preloadingStrategy: SelectivePreloadingStrategy\r\n    })\r\n  ],\r\n  exports: [RouterModule],\r\n  providers: [SelectivePreloadingStrategy]\r\n})\r\nexport class AppRoutingModule {}\r\nexport const routedComponents = [MainContentComponent];\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \".page-content {\\r\\n    margin-bottom: -100px;\\r\\n}\\r\\n\\r\\n.footer-gap {\\r\\n    height: 100px;\\r\\n}\\r\\n\\r\\n/* Loading screen */\\r\\n\\r\\n#overlay {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    z-index: 1010;\\r\\n    background-color: rgba(255, 255, 255, 0.5);\\r\\n}\\r\\n\\r\\n#loading-box {\\r\\n    position: fixed;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n    height: 200px;\\r\\n    width: 400px;\\r\\n    margin-left: -200px;\\r\\n    margin-top: -100px;\\r\\n    z-index: 1011;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div id=\\\"overlay\\\" *ngIf=\\\"loadingScreen && loadingScreen.isLoading\\\">\\r\\n    <div id=\\\"loading-box\\\" class=\\\"text-center\\\">\\r\\n        <img *ngIf=\\\"loadingScreen.loadingIcon\\\" src='{{loadingIconPath}}{{loadingScreen.loadingIcon}}' />\\r\\n        <img *ngIf=\\\"!loadingScreen.loadingIcon\\\" src='{{loadingIconPath}}portcall.gif' />\\r\\n        <h1>{{ loadingScreen.loadingText | uppercase }}</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"page-content\\\" [ngStyle]=\\\"{'min-height': clientHeight + 'px'}\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n    <div class=\\\"footer-gap\\\"></div>\\r\\n</div>\\r\\n\\r\\n<app-footer></app-footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContentService } from './shared/services/content.service';\r\nimport { LoadingScreen } from './shared/interfaces/loading-screen.interface';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  clientHeight: number;\r\n\r\n  loadingIconPath = 'assets/images/animations/';\r\n  loadingScreen: LoadingScreen;\r\n\r\n  constructor(public contentService: ContentService) {\r\n    this.clientHeight = window.innerHeight;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.contentService.loadingScreen$.subscribe(\r\n      loadingScreenData => {\r\n        if (loadingScreenData) {\r\n          this.loadingScreen = loadingScreenData;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { AccountService } from './shared/services/account.service';\r\nimport { AppComponent } from './app.component';\r\nimport { AppRoutingModule, routedComponents } from './app-routing.module';\r\nimport { AuthenticateXHRBackend } from '../authenticate-xhr.backend';\r\nimport { AuthRequest } from './shared/services/auth.request.service';\r\nimport { AuthService } from './shared/services/auth-service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ConfigService } from './shared/utils/config.service';\r\nimport { ConstantsService } from './shared/services/constants.service';\r\nimport { ContentContainerModule } from './main-content/content-container/content-container.module';\r\nimport { ContentService } from './shared/services/content.service';\r\nimport { FooterComponent } from './main-content/footer/footer.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HeaderComponent } from './main-content/header/header.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { HttpModule, XHRBackend } from '@angular/http';\r\nimport { JwtHelperService, JwtModule } from '@auth0/angular-jwt';\r\nimport { LoginService } from './shared/services/login.service';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgModule } from '@angular/core';\r\nimport { ErrorGuard } from './guards/error.guard';\r\nimport { ErrorModule } from './error/error.module';\r\nimport { RootGuard } from './guards/root.guard';\r\nimport { BLACKLISTED_ROUTES } from './shared/constants/blacklisted-routes';\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    AppRoutingModule,\r\n    BrowserModule,\r\n    ContentContainerModule,\r\n    ErrorModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    HttpModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains: ['localhost:4200'],\r\n        blacklistedRoutes: BLACKLISTED_ROUTES\r\n      }\r\n    }),\r\n    NgbModule.forRoot(),\r\n  ],\r\n  declarations: [\r\n    AppComponent,\r\n    FooterComponent,\r\n    HeaderComponent,\r\n    routedComponents,\r\n  ],\r\n  providers: [\r\n    { provide: XHRBackend, useClass: AuthenticateXHRBackend },\r\n    AccountService,\r\n    AuthRequest,\r\n    AuthService,\r\n    ConfigService,\r\n    ConstantsService,\r\n    ContentService,\r\n    ErrorGuard,\r\n    JwtHelperService,\r\n    LoginService,\r\n    RootGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n  // Diagnostic only: inspect router configuration\r\n  /* constructor(router: Router) {\r\n    console.log('Routes: ', JSON.stringify(router.config, undefined, 2));\r\n  } */\r\n }\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('auth_token');\r\n}\r\n\r\nexport function nameof(obj) {\r\n  return Object.keys(obj)[0];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/error/error.component.css\n// module id = ./src/app/error/error.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container pt-5\\\">\\r\\n  <app-ssn-bg header=\\\"ERROR PAGE\\\">\\r\\n    <!-- <app-ssn-card> -->\\r\\n      <div class=\\\"jumbotron bg-ssn-light text-ssn\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <img src=\\\"../../../assets/images/Validation/validation-error.png\\\"\\r\\n        height=\\\"64px\\\" width=\\\"64px\\\" alt=\\\"Error\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <p>Something went wrong...</p>\\r\\n      </div>\\r\\n    <!-- </app-ssn-card> -->\\r\\n    </div>\\r\\n  </app-ssn-bg>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/error/error.component.html\n// module id = ./src/app/error/error.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-error',\r\n  templateUrl: './error.component.html',\r\n  styleUrls: ['./error.component.css']\r\n})\r\nexport class ErrorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/error/error.component.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { ErrorComponent } from './error.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ErrorComponent\r\n  ]\r\n})\r\nexport class ErrorModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/error/error.module.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from 'app/shared/services/auth-service';\r\nimport { LoginService } from 'app/shared/services/login.service';\r\n\r\n@Injectable()\r\nexport class ErrorGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private loginService: LoginService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n      if (!this.authService.hasToken()) {\r\n        console.log('error guard');\r\n        this.router.navigate(['/auth/login']);\r\n        return false;\r\n      } else {\r\n        return this.authService.hasValidToken()\r\n        .map(tokenValid => {\r\n          if (!tokenValid) {\r\n            this.loginService.logout();\r\n            this.router.navigate(['/auth/login']);\r\n            return false;\r\n          } else {\r\n            // TODO: redirect to an error page\r\n            this.router.navigate(['']);\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/error.guard.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from 'app/shared/services/auth-service';\r\nimport { LoginService } from 'app/shared/services/login.service';\r\n\r\n@Injectable()\r\nexport class RootGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private loginService: LoginService\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n      if (!this.authService.hasToken()) {\r\n        this.router.navigate(['/auth/login']);\r\n        return false;\r\n      } else {\r\n        return this.authService.hasValidToken()\r\n        .map(tokenValid => {\r\n          if (!tokenValid) {\r\n            this.loginService.logout();\r\n            this.router.navigate(['/auth/login']);\r\n            return false;\r\n          } else {\r\n            return true;\r\n          }\r\n        });\r\n      }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/guards/root.guard.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { RegisterLocationComponent } from './location/register-location/register-location.component';\r\nimport { LocationButtonRowComponent } from './location/view-location-info/location-button-row/location-button-row.component';\r\nimport { ViewLocationInfoComponent } from './location/view-location-info/view-location-info.component';\r\nimport { RegisterOrganizationComponent } from './organization/register-organization/register-organization.component';\r\nimport { ViewOrganizationInfoComponent } from './organization/view-organization-info/view-organization-info.component';\r\nimport { CertificateOfRegistryComponent } from './ship/register-ship/certificate-of-registry/certificate-of-registry.component';\r\nimport { RegisterShipComponent } from './ship/register-ship/register-ship.component';\r\nimport { ViewShipInfoComponent } from './ship/view-ship-info/view-ship-info.component';\r\nimport { RegisterUserComponent } from './user/register-user/register-user.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    NgSelectModule,\r\n    SharedModule,\r\n    Ng2SmartTableModule\r\n  ],\r\n  declarations: [\r\n    RegisterUserComponent,\r\n    RegisterShipComponent,\r\n    ViewShipInfoComponent,\r\n    RegisterOrganizationComponent,\r\n    ViewOrganizationInfoComponent,\r\n    RegisterLocationComponent,\r\n    ViewLocationInfoComponent,\r\n    LocationButtonRowComponent,\r\n    CertificateOfRegistryComponent\r\n  ],\r\n  exports: [\r\n    RegisterUserComponent,\r\n    ViewShipInfoComponent,\r\n    RegisterShipComponent,\r\n    RegisterLocationComponent,\r\n    RegisterOrganizationComponent,\r\n    ViewOrganizationInfoComponent,\r\n    ViewLocationInfoComponent\r\n  ],\r\n  providers: [\r\n    LocationService,\r\n    OrganizationService,\r\n    ShipService\r\n  ],\r\n  entryComponents: [\r\n    LocationButtonRowComponent\r\n  ]\r\n})\r\nexport class BasisDataModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/basis-data.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ locationHeader }}\\\" icon=\\\"location.png\\\">\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Location Information\\\" icon=\\\"pax.png\\\">\\r\\n        <form>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"location_type_dropdown\\\">Location Type</label>\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"location_type_dropdown\\\" ngbDropdownToggle> {{ locationTypeDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"location_type_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let locationType of locationTypeList\\\" (click)=\\\"selectLocationType(locationType)\\\">{{ locationType.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"location_name\\\">Location Name</label>\\r\\n                  <input [(ngModel)]=\\\"locationModel.name\\\" name=\\\"locationName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_name\\\"\\r\\n                    placeholder=\\\"Enter location name\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"location_code\\\">Location Code</label>\\r\\n                  <input [(ngModel)]=\\\"locationModel.locationCode\\\" name=\\\"locationCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_code\\\"\\r\\n                    placeholder=\\\"Enter location code\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"!countrySelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"country_select\\\">Country</label>\\r\\n                  <ng-select id=\\\"country_select\\\" name=\\\"country_select\\\" [items]=\\\"countryList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\"\\r\\n                    placeholder=\\\"Select country\\\" [(ngModel)]=\\\"selectedCountry\\\" (change)=\\\"selectCountry($event)\\\"></ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"countrySelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"country\\\">Country</label>\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input id=\\\"country\\\" name=\\\"country\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"selectedCountry.name\\\" disabled=\\\"true\\\"\\r\\n                    />\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"deselectCountry()\\\">\\r\\n                        <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"location_post_code\\\">Post Code</label>\\r\\n                  <input [(ngModel)]=\\\"locationModel.postCode\\\" name=\\\"locationPostCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_post_code\\\"\\r\\n                    placeholder=\\\"Enter location post code\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <app-ssn-card header='{{ confirmHeader }}' icon=\\\"checkmark.png\\\">\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"!(locationTypeSelected && locationModel.name && countrySelected)\\\">\\r\\n            <p *ngIf=\\\"!locationTypeSelected\\\" class=\\\"no-wrap mb-0\\\">Location type not selected.</p>\\r\\n            <p *ngIf=\\\"!locationModel.name\\\" class=\\\"no-wrap mb-0\\\">Location name not set.</p>\\r\\n            <p *ngIf=\\\"!countrySelected\\\" class=\\\"no-wrap\\\">Country not selected.</p>\\r\\n            <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n              <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n          </div>\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"locationTypeSelected && locationModel.name && countrySelected\\\">\\r\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerLocation()\\\">\\r\\n              <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n          </div>\\r\\n        </app-ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nconst RESULT_SUCCESS = 'Location was successfully saved to the database.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to save the location to the database. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-register-location',\r\n  templateUrl: './register-location.component.html',\r\n  styleUrls: ['./register-location.component.css'],\r\n  providers: [LocationModel]\r\n})\r\nexport class RegisterLocationComponent implements OnInit, OnDestroy {\r\n\r\n  newLocation: boolean;\r\n  locationHeader: string;\r\n  confirmHeader: string;\r\n  confirmButtonTitle: string;\r\n  locationTypeList: any[];\r\n  locationTypeSelected: boolean;\r\n  selectedLocationType: any;\r\n  locationTypeDropdownString = 'Select location type';\r\n\r\n  countryList: any[];\r\n  countrySelected = false;\r\n  selectedCountry: any;\r\n  countrySearchFailed = false;\r\n\r\n  locationDataSubscription: Subscription;\r\n  locationTypesSubscription: Subscription;\r\n  countriesSubscription: Subscription;\r\n\r\n  constructor(\r\n    public locationModel: LocationModel,\r\n    private contentService: ContentService,\r\n    private locationService: LocationService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.locationDataSubscription = this.locationService.locationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.newLocation = false;\r\n          this.locationHeader = 'Edit Location';\r\n          this.confirmHeader = 'Confirm Location Changes';\r\n          this.confirmButtonTitle = 'Apply Changes';\r\n          this.locationModel = data;\r\n          this.selectedCountry = this.locationModel.country;\r\n          this.countrySelected = true;\r\n          this.selectedLocationType = this.locationModel.locationType;\r\n          this.locationTypeSelected = true;\r\n          this.locationTypeDropdownString = this.selectedLocationType.name;\r\n        } else {\r\n          this.newLocation = true;\r\n          this.locationHeader = 'Register New Location';\r\n          this.confirmHeader = 'Confirm Location Registration';\r\n          this.confirmButtonTitle = 'Register Location';\r\n        }\r\n      }\r\n    );\r\n    this.locationTypesSubscription = this.locationService.getLocationTypes().subscribe(\r\n      results => {\r\n        this.locationTypeList = results;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.countriesSubscription = this.locationService.getCountries().subscribe(\r\n      results => {\r\n        this.countryList = results;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.locationDataSubscription.unsubscribe();\r\n    this.locationTypesSubscription.unsubscribe();\r\n    this.countriesSubscription.unsubscribe();\r\n  }\r\n\r\n  selectCountry($event) {\r\n    this.selectedCountry = $event;\r\n    this.locationModel.countryId = $event.countryId;\r\n    this.countrySelected = true;\r\n  }\r\n\r\n  deselectCountry() {\r\n    this.selectedCountry = null;\r\n    this.locationModel.country = null;\r\n    this.locationModel.countryId = null;\r\n    this.selectedCountry = null;\r\n    this.countrySelected = false;\r\n  }\r\n\r\n  selectLocationType(locationType: any) {\r\n    this.locationModel.locationTypeId = locationType.locationTypeId;\r\n    this.selectedLocationType = locationType;\r\n    this.locationTypeDropdownString = locationType.name;\r\n    this.locationTypeSelected = true;\r\n  }\r\n\r\n  registerLocation() {\r\n    if (this.newLocation) {\r\n      this.locationService.registerLocation(this.locationModel).subscribe(\r\n        result => {\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n        }, error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n    } else {\r\n      this.locationService.updateLocation(this.locationModel).subscribe(\r\n        result => {\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n        }, error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.LOCATIONS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit location\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-location-button-row',\r\n  templateUrl: './location-button-row.component.html',\r\n  styleUrls: ['./location-button-row.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class LocationButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private contentService: ContentService,\r\n    private locationService: LocationService\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onEditClick() {\r\n    this.setContent(CONTENT_NAMES.REGISTER_LOCATION);\r\n  }\r\n\r\n  private setContent(content: string) {\r\n    this.setLocation(content);\r\n  }\r\n\r\n  setLocation(content) {\r\n    this.contentService.setLoadingScreen(true, 'location.gif', 'Loading');\r\n    this.locationService.setLocationData(this.rowData.locationModel);\r\n    this.contentService.setContent(content);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/location-button-row/location-button-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <app-ssn-card header='Register New Location' icon='location.png'>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewLocation()\\\">Register New Location</button>\\r\\n      </div>\\r\\n    </app-ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-ssn-card header=\\\"Location Search\\\" icon=\\\"pax.png\\\">\\r\\n  <app-search-location [showDropdown]=false (locationSearchResult)=\\\"onLocationSearchResult($event)\\\"></app-search-location>\\r\\n  <br>\\r\\n  <div>\\r\\n    <div class=\\\"mb-3\\\">\\r\\n      <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n          <tr>\\r\\n            <th class=\\\"py-1\\\">\\r\\n              <h5 class=\\\"mb-0\\\">Location search results</h5>\\r\\n            </th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n      </table>\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { LocalDataSource } from 'ng2-smart-table/lib/data-source/local/local.data-source';\r\nimport { LocationButtonRowComponent } from './location-button-row/location-button-row.component';\r\n\r\n@Component({\r\n  selector: 'app-view-location-info',\r\n  templateUrl: './view-location-info.component.html',\r\n  styleUrls: ['./view-location-info.component.css']\r\n})\r\nexport class ViewLocationInfoComponent implements OnInit {\r\n\r\n  tableData = [];\r\n  dataSource: LocalDataSource = new LocalDataSource();\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no locations in this list.',\r\n\r\n    columns: {\r\n      country: {\r\n        title: 'Country',\r\n        type: 'html'\r\n      },\r\n      name: {\r\n        title: 'Name',\r\n        type: 'html'\r\n      },\r\n      loCode: {\r\n        title: 'Location code',\r\n        type: 'html'\r\n      },\r\n      type: {\r\n        title: 'Type',\r\n        type: 'html'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: LocationButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private contentService: ContentService,\r\n    private locationService: LocationService\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onLocationSearchResult(locationSearchResult) {\r\n    if (locationSearchResult.length !== 0) {\r\n      const rowList = [];\r\n      locationSearchResult.forEach(location => {\r\n        const row = this.dataRow(location);\r\n        rowList.push(row);\r\n      });\r\n      this.tableData = rowList;\r\n    }\r\n    this.dataSource.load(this.tableData);\r\n  }\r\n\r\n  registerNewLocation() {\r\n    this.locationService.setLocationData(null);\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_LOCATION);\r\n  }\r\n\r\n  dataRow(location) {\r\n    const row = {\r\n      locationModel: location,\r\n      country:\r\n        `<div class=\"no-wrap\"><div hidden>` +\r\n        location.country.name + // ugly fix for alphabetical sorting but it works\r\n        `</div> <div> <img src='assets/images/flags/128x128/` +\r\n        location.country.twoCharCode.toLowerCase() +\r\n        `.png' height='20px'/> ` +\r\n        location.country.name +\r\n        `</div></div>`,\r\n      name: location.name,\r\n      loCode: location.locationCode || `<div class=\"font-italic\">Not provided.</div>`,\r\n      type: location.locationType.name || `<div class=\"font-italic\">Not provided.</div>`,\r\n      actions: 'btn'\r\n    };\r\n    return row;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css\n// module id = ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ organizationHeader }}\\\" icon=\\\"pax.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Organization Information\\\" icon=\\\"pax.png\\\">\\r\\n        <form>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"organization_name\\\">Organization Name</label>\\r\\n                  <input [(ngModel)]=\\\"organizationModel.name\\\" name=\\\"organizationName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"organization_name\\\"\\r\\n                    placeholder=\\\"Enter organization name\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"organization_no\\\">Organization Number</label>\\r\\n                  <input [(ngModel)]=\\\"organizationModel.organizationNo\\\" name=\\\"organizationNo\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"organization_no\\\" placeholder=\\\"Enter organization number\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"description\\\">Description</label>\\r\\n                  <input [(ngModel)]=\\\"organizationModel.description\\\" name=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"description\\\"\\r\\n                    placeholder=\\\"Enter description\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header='{{ confirmHeader }}' icon=\\\"checkmark.png\\\">\\r\\n        <div *ngIf=\\\"!organizationTypeSelected || !organizationModel.name || !organizationModel.organizationNo\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p *ngIf=\\\"!organizationTypeSelected\\\" class=\\\"no-wrap mb-0\\\">No organization type selected.</p>\\r\\n            <p *ngIf=\\\"!organizationModel.name\\\" class=\\\"no-wrap mb-0\\\">Organization name not set.</p>\\r\\n            <p *ngIf=\\\"!organizationModel.organizationNo\\\" class=\\\"no-wrap mb-0\\\">Organization number not set.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n            <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationTypeSelected && organizationModel.name && organizationModel.organizationNo\\\" class=\\\"text-center\\\">\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerOrganization()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html\n// module id = ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { OrganizationModel } from 'app/shared/models/organization-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nconst RESULT_SUCCESS = 'Organization was successfully saved to the database.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to save the organization to the database. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-register-organization',\r\n  templateUrl: './register-organization.component.html',\r\n  styleUrls: ['./register-organization.component.css'],\r\n  providers: [OrganizationModel]\r\n})\r\nexport class RegisterOrganizationComponent implements OnInit, OnDestroy {\r\n  newOrganization = false;\r\n  organizationHeader: string;\r\n  confirmHeader: string;\r\n  confirmButtonTitle: string;\r\n  organizationTypeList: any[];\r\n  organizationTypeSelected: boolean;\r\n  selectedOrganizationType: any;\r\n  organizationTypeDropdownString = 'Select organization type';\r\n\r\n  organizationDataSubscription: Subscription;\r\n  organizationTypesSubscription: Subscription;\r\n\r\n  constructor(\r\n    public organizationModel: OrganizationModel,\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.organizationDataSubscription = this.organizationService.organizationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.organizationHeader = 'Edit Organization';\r\n          this.confirmHeader = 'Confirm Organization Changes';\r\n          this.confirmButtonTitle = 'Apply Changes';\r\n          this.organizationModel = data;\r\n          this.selectedOrganizationType = this.organizationModel.organizationType;\r\n          this.organizationTypeSelected = true;\r\n        } else if (!this.newOrganization) {\r\n          this.newOrganization = true;\r\n          this.organizationHeader = 'Register New Organization';\r\n          this.confirmHeader = 'Confirm Organization Registration';\r\n          this.confirmButtonTitle = 'Register Organization';\r\n        }\r\n      }\r\n    );\r\n\r\n    this.organizationTypesSubscription = this.organizationService.getOrganizationTypes().subscribe(\r\n      organizationTypesData => {\r\n        this.organizationTypeList = organizationTypesData;\r\n        // Temporary until we add more organization types (certificate issuer)\r\n        if (this.newOrganization) {\r\n          this.selectedOrganizationType = this.organizationTypeList.find(\r\n            type => type.name === 'Authority'\r\n          );\r\n          this.organizationTypeSelected = true;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.organizationDataSubscription.unsubscribe();\r\n    this.organizationTypesSubscription.unsubscribe();\r\n  }\r\n\r\n  registerOrganization() {\r\n    if (this.newOrganization) {\r\n      this.organizationService\r\n        .registerOrganization(this.organizationModel)\r\n        .subscribe(\r\n          result => {\r\n            this.openConfirmationModal(\r\n              ConfirmationModalComponent.TYPE_SUCCESS,\r\n              RESULT_SUCCESS\r\n            );\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.openConfirmationModal(\r\n              ConfirmationModalComponent.TYPE_FAILURE,\r\n              RESULT_FAILURE\r\n            );\r\n          }\r\n        );\r\n    } else {\r\n      this.organizationService\r\n        .updateOrganization(this.organizationModel)\r\n        .subscribe(\r\n          result => {\r\n            this.openConfirmationModal(\r\n              ConfirmationModalComponent.TYPE_SUCCESS,\r\n              RESULT_SUCCESS\r\n            );\r\n          },\r\n          error => {\r\n            console.log(error);\r\n            this.openConfirmationModal(\r\n              ConfirmationModalComponent.TYPE_FAILURE,\r\n              RESULT_FAILURE\r\n            );\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  selectOrganizationType(organizationType: any) {\r\n    this.organizationModel.organizationTypeId =\r\n      organizationType.organizationTypeId;\r\n    this.organizationTypeDropdownString = organizationType.name;\r\n    this.selectedOrganizationType = organizationType;\r\n    this.organizationTypeSelected = true;\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_ORGANIZATIONS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goBack();\r\n        }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goBack();\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <app-ssn-card header='Register New Organization' icon='pax.png'>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewOrganization()\\\">Register New Organization</button>\\r\\n      </div>\\r\\n    </app-ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-ssn-card header=\\\"Organization Search\\\" icon=\\\"pax.png\\\">\\r\\n  <app-search-organization [showDropdown]=false (organizationSearchResult)=\\\"onOrganizationSearchResult($event)\\\"></app-search-organization>\\r\\n  <br>\\r\\n  <div>\\r\\n    <app-organization-smart-table></app-organization-smart-table>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-view-organization-info',\r\n  templateUrl: './view-organization-info.component.html',\r\n  styleUrls: ['./view-organization-info.component.css']\r\n})\r\nexport class ViewOrganizationInfoComponent implements OnInit {\r\n  constructor(\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService\r\n  ) {}\r\n\r\n  ngOnInit() { }\r\n\r\n  onOrganizationSearchResult(organizationSearchResult) {\r\n    this.organizationService.setOrganizationSearchData(organizationSearchResult);\r\n  }\r\n\r\n  registerNewOrganization() {\r\n    this.organizationService.setOrganizationData(null);\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_ORGANIZATION);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Certificate of Registry\\\" icon=\\\"pax.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Port of Registry\\\">\\r\\n        <div [hidden]=\\\"portLocationSelected\\\">\\r\\n          <app-search-location [restrictTypeHarbour]=true [showDropdown]=true (locationResult)=\\\"onLocationResult($event)\\\"></app-search-location>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"portLocationSelected\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <app-ssn-table [entryData]=\\\"locationProperties\\\"></app-ssn-table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectPortLocation()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"d-table mx-auto\\\">\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell p-1\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"eta_date_input\\\">Date of issue</label>\\r\\n              <div class=\\\"input-group\\\">\\r\\n                <div class=\\\"input-group-prepend\\\">\\r\\n                  <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"doi.toggle()\\\" type=\\\"button\\\">\\r\\n                    <img src=\\\"assets/images/icons/128x128/white/calendar.png\\\" height=\\\"24px\\\" />\\r\\n                  </button>\\r\\n                </div>\\r\\n                <input id=\\\"doi_date_input\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp-doi\\\" [showWeekNumbers]=\\\"true\\\"\\r\\n                  [(ngModel)]=\\\"dateOfIssueModel\\\" (ngModelChange)=\\\"certificateDateChanged($event)\\\" ngbDatepicker #doi=\\\"ngbDatepicker\\\">\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-table-row \\\">\\r\\n          <div *ngIf=\\\"!validCertificateDateFormat \\\" class=\\\"alert alert-danger \\\" role=\\\"alert \\\">\\r\\n            <span>Invalid date format.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"certificate_number\\\">Ship registry number</label>\\r\\n        <div class=\\\"col\\\">\\r\\n          <input [(ngModel)]=\\\"certificateModel.certificateNumber\\\" name=\\\"certificateNumber\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n            id=\\\"certificate_number\\\" placeholder=\\\"Enter ship registry number\\\" (ngModelChange)=\\\"persistData()\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\r\nimport { LocationProperties } from 'app/shared/constants/location-properties';\r\nimport { CertificateOfRegistryModel } from 'app/shared/models/certificate-of-registry-model';\r\n\r\n@Component({\r\n  selector: 'app-certificate-of-registry',\r\n  templateUrl: './certificate-of-registry.component.html',\r\n  styleUrls: ['./certificate-of-registry.component.css']\r\n})\r\nexport class CertificateOfRegistryComponent implements OnInit {\r\n\r\n  @Input() certificateModel: CertificateOfRegistryModel;\r\n\r\n  @Output() certificateResult = new EventEmitter<CertificateOfRegistryModel>();\r\n\r\n  dateOfIssueModel: NgbDate;\r\n  validCertificateDateFormat = true;\r\n\r\n  portLocationSelected = false;\r\n  locationProperties = new LocationProperties().getPropertyList();\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (this.certificateModel == null) {\r\n      this.certificateModel = new CertificateOfRegistryModel();\r\n    } else {\r\n      if (this.certificateModel.dateOfIssue) {\r\n        const date = new Date(this.certificateModel.dateOfIssue);\r\n        this.dateOfIssueModel = new NgbDate(date.getFullYear(), date.getMonth() + 1, date.getDate());\r\n      }\r\n      if (this.certificateModel.portLocation) {\r\n        this.portLocationSelected = true;\r\n        this.setLocationProperties(this.certificateModel.portLocation);\r\n      }\r\n    }\r\n  }\r\n\r\n  onLocationResult(locationResult) {\r\n    this.certificateModel.portLocation = locationResult;\r\n    this.certificateModel.portLocationId = locationResult.locationId;\r\n    this.portLocationSelected = true;\r\n    this.setLocationProperties(this.certificateModel.portLocation);\r\n\r\n    this.persistData();\r\n  }\r\n\r\n  deselectPortLocation() {\r\n    this.portLocationSelected = false;\r\n    this.certificateModel.portLocation = null;\r\n    this.certificateModel.portLocationId = null;\r\n    this.persistData();\r\n  }\r\n\r\n  private setLocationProperties(locationModel) {\r\n    LocationProperties.setLocationData(this.locationProperties, locationModel);\r\n    const twoCharCode = locationModel.country.twoCharCode.toLowerCase() || 'xx';\r\n    const countryFlag = twoCharCode + '.png';\r\n    LocationProperties.setCountry(this.locationProperties, locationModel.country.name, countryFlag);\r\n  }\r\n\r\n  private persistData() {\r\n    this.certificateResult.emit(this.certificateModel);\r\n  }\r\n\r\n  certificateDateChanged($event) {\r\n    this.validCertificateDateFormat = this.hasValidDateFormat($event);\r\n    if (this.validCertificateDateFormat && $event != null) {\r\n      this.certificateModel.dateOfIssue = new Date(this.dateOfIssueModel.year, this.dateOfIssueModel.month - 1, this.dateOfIssueModel.day);\r\n    } else {\r\n      this.certificateModel.dateOfIssue = null;\r\n    }\r\n    this.persistData();\r\n  }\r\n\r\n  private hasValidDateFormat(model): boolean {\r\n    return typeof model !== 'string';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/certificate-of-registry/certificate-of-registry.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"{{ shipHeader }}\\\" icon=\\\"ship.png\\\">\\r\\n  <form #form=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-ssn-card header=\\\"Ship Identification\\\" icon=\\\"ship.png\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_name\\\">Ship Name</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.name\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"shipName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"ship_name\\\" placeholder=\\\"Enter ship name\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"call_sign\\\">Call Sign</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.callSign\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"callSign\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"call_sign\\\" placeholder=\\\"Enter call sign\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"imo_no\\\">IMO Number</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.imoNo\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"imoNo\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"imo_no\\\" placeholder=\\\"Enter IMO number\\\" #imoNo=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!imoNo.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"imoNo.hasError('notNumberError')\\\">\\r\\n                  <small>IMO number must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"imoNo.hasError('notIntegerError')\\\">\\r\\n                  <small>IMO number must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"imoNo.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>IMO number must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"mmsi_no\\\">MMSI Number</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.mmsiNo\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"mmsiNo\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"mmsi_no\\\" placeholder=\\\"Enter MMSI number\\\" #mmsiNo=\\\"ngModel\\\" integerValidator positiveNumberValidator\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!mmsiNo.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"mmsiNo.hasError('notIntegerError')\\\">\\r\\n                  <small>MMSI number must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"mmsiNo.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>MMSI number must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </app-ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-ssn-card header=\\\"Ship Details\\\" icon=\\\"ship.png\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"!shipTypeSelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_type_select\\\">Ship Type</label>\\r\\n                  <ng-select id=\\\"ship_type_select\\\" name=\\\"ship_type_select\\\" [items]=\\\"shipTypeList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\"\\r\\n                    bindLabel=\\\"name\\\" placeholder=\\\"Select ship type\\\" [(ngModel)]=\\\"selectedShipType\\\" (change)=\\\"selectShipType($event)\\\"></ng-select>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\" *ngIf=\\\"shipTypeSelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_type\\\">Ship Type</label>\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input id=\\\"ship_type\\\" name=\\\"ship_type\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"selectedShipType.name\\\"\\r\\n                      disabled=\\\"true\\\" />\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"deselectShipType()\\\">\\r\\n                        <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"year_of_build\\\">Year of Build</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.yearOfBuild\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"yearOfBuild\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"year_of_build\\\" placeholder=\\\"Enter year of build\\\" #yearOfBuild=\\\"ngModel\\\" numberValidator integerValidator\\r\\n                    positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!yearOfBuild.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notNumberError')\\\">\\r\\n                  <small>Year of build must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notIntegerError')\\\">\\r\\n                  <small>Year of build must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Year of build must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_length\\\">Length</label>\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"lengthTypeDropdown\\\" ngbDropdownToggle> {{ lengthTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"lengthTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let lengthType of lengthTypeList\\\" (click)=\\\"selectLengthType(lengthType)\\\">{{ lengthType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.length\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"shipLength\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                      id=\\\"ship_length\\\" placeholder=\\\"Enter ship length\\\" [disabled]=\\\"!lengthTypeSelected\\\" #shipLength=\\\"ngModel\\\"\\r\\n                      numberValidator positiveNumberValidator />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipLength.valid && lengthTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipLength.hasError('notNumberError')\\\">\\r\\n                  <small>Ship length must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipLength.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship length must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_breadth\\\">Breadth</label>\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"breadthTypeDropdown\\\" ngbDropdownToggle> {{ breadthTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"breadthTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let breadthType of breadthTypeList\\\" (click)=\\\"selectBreadthType(breadthType)\\\">{{ breadthType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.breadth\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"breadth\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                      id=\\\"ship_breadth\\\" placeholder=\\\"Enter ship breadth\\\" [disabled]=\\\"!breadthTypeSelected\\\" #shipBreadth=\\\"ngModel\\\"\\r\\n                      numberValidator positiveNumberValidator />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipBreadth.valid && breadthTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipBreadth.hasError('notNumberError')\\\">\\r\\n                  <small>Ship breadth must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipBreadth.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship breadth must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_power\\\">Power</label>\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"powerTypeDropdown\\\" ngbDropdownToggle> {{ powerTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"powerTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let powerType of powerTypeList\\\" (click)=\\\"selectPowerType(powerType)\\\">{{ powerType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.power\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"power\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                      id=\\\"ship_power\\\" placeholder=\\\"Enter ship power\\\" [disabled]=\\\"!powerTypeSelected\\\" #shipPower=\\\"ngModel\\\" numberValidator\\r\\n                      integerValidator positiveNumberValidator />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipPower.valid && powerTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipPower.hasError('notNumberError')\\\">\\r\\n                  <small>Ship power must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipPower.hasError('notIntegerError')\\\">\\r\\n                  <small>Ship power must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipPower.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship power must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"hull_type_dropdown\\\">Hull Type</label>\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"hull_type_dropdown\\\" ngbDropdownToggle> {{ hullTypeDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"hull_type_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let hullType of hullTypeList\\\" (click)=\\\"selectHullType(hullType)\\\">{{ hullType.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_status_dropdown\\\">Ship Status</label>\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"ship_status_dropdown\\\" ngbDropdownToggle> {{ shipStatusDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"ship_status_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let shipStatus of shipStatusList\\\" (click)=\\\"selectShipStatus(shipStatus)\\\">{{ shipStatus.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_height\\\">Height</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.height\\\" (ngModelChange)=\\\"touchData()\\\" #shipHeight=\\\"ngModel\\\" numberValidator positiveNumberValidator\\r\\n                    name=\\\"height\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"height\\\" placeholder=\\\"Enter ship height\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipHeight.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipHeight.hasError('notNumberError')\\\">\\r\\n                  <small>Ship height must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipHeight.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship height must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"ship_draught\\\">Draught</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.draught\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"draught\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"ship_draught\\\" placeholder=\\\"Enter ship draught\\\" #shipDraught=\\\"ngModel\\\" numberValidator positiveNumberValidator\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipDraught.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipDraught.hasError('notNumberError')\\\">\\r\\n                  <small>Ship draught must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipDraught.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship draught must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">Gross Tonnage</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.grossTonnage\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"grossTonnage\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"gross_tonnage\\\" placeholder=\\\"Enter gross tonnage\\\" #grossTonnage=\\\"ngModel\\\" numberValidator integerValidator\\r\\n                    positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!grossTonnage.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notNumberError')\\\">\\r\\n                  <small>Gross tonnage must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notIntegerError')\\\">\\r\\n                  <small>Gross tonnage must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Gross tonnage must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">Deadweight Tonnage</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.deadweightTonnage\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"deadweightTonnage\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"deadweight_tonnage\\\" placeholder=\\\"Enter deadweight tonnage\\\" #dwt=\\\"ngModel\\\" numberValidator integerValidator\\r\\n                    positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!dwt.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"dwt.hasError('notNumberError')\\\">\\r\\n                  <small>Deadweight tonnage must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"dwt.hasError('notIntegerError')\\\">\\r\\n                  <small>Deadweight tonnage must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"dwt.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Deadweight tonnage must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">Net Tonnage</label>\\r\\n                  <input [(ngModel)]=\\\"shipModel.netTonnage\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"netTonnage\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"net_tonnage\\\" placeholder=\\\"Enter net tonnage\\\" #netTonnage=\\\"ngModel\\\" numberValidator integerValidator\\r\\n                    positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!netTonnage.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"netTonnage.hasError('notNumberError')\\\">\\r\\n                  <small>Net tonnage must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"netTonnage.hasError('notIntegerError')\\\">\\r\\n                  <small>Net tonnage must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"netTonnage.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Net tonnage must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"has_side_thrusters\\\">Side thrusters</label>\\r\\n            <div class=\\\"card pt-2\\\" id=\\\"has_side_thrusters\\\">\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrusters\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"hasSideThrusters\\\" type=\\\"checkbox\\\" value=\\\"\\\"> Side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrustersFront\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"hasSideThrustersFront\\\" type=\\\"checkbox\\\"\\r\\n                      value=\\\"\\\"> Front side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrustersBack\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"hasSideThrustersBack\\\" type=\\\"checkbox\\\"\\r\\n                      value=\\\"\\\"> Back side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"remark\\\">Remark</label>\\r\\n            <textarea [(ngModel)]=\\\"shipModel.remark\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"remark\\\" class=\\\"form-control form-control-sm\\\"\\r\\n              rows=\\\"4\\\" id=\\\"remark\\\"></textarea>\\r\\n          </div>\\r\\n        </app-ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Flag Code\\\" icon=\\\"flag.png\\\">\\r\\n        <div *ngIf=\\\"!shipFlagCodeSelected\\\">\\r\\n          <app-search-ship-flag-code (shipFlagCodeResult)=\\\"onShipFlagCodeResult($event)\\\"></app-search-ship-flag-code>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"shipFlagCodeSelected\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <app-ssn-table [entryData]=shipFlagCodeProperties></app-ssn-table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShipFlagCode()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-select-ship-contact [selectedContactModelList]=\\\"shipModel.shipContact\\\" (contactModelListResult)=\\\"onContactDataResult($event)\\\"></app-select-ship-contact>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Organization\\\" icon=\\\"pax.png\\\">\\r\\n        <div *ngIf=\\\"!organizationSelected\\\">\\r\\n          <app-search-organization (organizationResult)=\\\"onOrganizationResult($event)\\\"></app-search-organization>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <app-ssn-table [entryData]=organizationProperties></app-ssn-table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-certificate-of-registry [certificateModel]=\\\"shipModel.certificateOfRegistry\\\" (certificateResult)=\\\"onCertificateOfRegistryResult($event)\\\">\\r\\n      </app-certificate-of-registry>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"{{ confirmHeader }}\\\" icon=\\\"checkmark.png\\\">\\r\\n\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"!form.valid || !(shipModel.name && shipModel.callSign && shipModel.imoNo && shipTypeSelected\\r\\n                        && shipModel.yearOfBuild && shipModel.length && lengthTypeSelected && shipModel.breadth && breadthTypeSelected\\r\\n                        && shipModel.power && powerTypeSelected && hullTypeSelected && shipModel.height && shipModel.draught\\r\\n                        && shipModel.grossTonnage && shipModel.deadweightTonnage && shipFlagCodeSelected && contactSelected\\r\\n                        && organizationSelected && certificateSelected)\\\">\\r\\n          <div *ngIf=\\\"!form.valid\\\" class=\\\"text-center\\\">\\r\\n            <div class=\\\"alert alert-danger\\\">\\r\\n              There are errors in the form that needs to be resolved.\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.name\\\">Ship name not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.callSign\\\">Call sign not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.imoNo\\\">IMO number not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipTypeSelected\\\">Ship type not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.yearOfBuild\\\">Year of build not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.length || !lengthTypeSelected\\\">Ship length not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.breadth || !breadthTypeSelected\\\">Ship breadth not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.power || !powerTypeSelected\\\">Ship power not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!hullTypeSelected\\\">Hull type not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipStatusSelected\\\">Ship status not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.height\\\">Ship height not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.draught\\\">Ship draught not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.grossTonnage\\\">Gross tonnage not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.deadweightTonnage\\\">Deadweight tonnage not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipFlagCodeSelected\\\">Flag code not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!contactSelected\\\">At least one contact medium must be provided.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!organizationSelected\\\">Organization not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!certificateSelected\\\">Certificate of registry must be provided.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n            <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" />{{ confirmButtonTitle }}</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"form.valid && shipModel.name && shipModel.callSign && shipModel.imoNo && shipTypeSelected\\r\\n                        && shipModel.yearOfBuild && shipModel.length && lengthTypeSelected && shipModel.breadth && breadthTypeSelected\\r\\n                        && shipModel.power && powerTypeSelected && hullTypeSelected && shipModel.height && shipModel.draught\\r\\n                        && shipModel.grossTonnage && shipModel.deadweightTonnage && shipFlagCodeSelected && contactSelected\\r\\n                        && organizationSelected && certificateSelected\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Ship Name</th>\\r\\n                  <th>Call Sign</th>\\r\\n                  <th>IMO Number</th>\\r\\n                  <th *ngIf=\\\"shipModel.mmsiNo\\\">MMSI Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ shipModel.name }}</td>\\r\\n                  <td>{{ shipModel.callSign }}</td>\\r\\n                  <td>{{ shipModel.imoNo }}</td>\\r\\n                  <td *ngIf=\\\"shipModel.mmsiNo\\\">{{ shipModel.mmsiNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Ship Type</th>\\r\\n                  <th>Year of Build</th>\\r\\n                  <th>Length</th>\\r\\n                  <th>Breadth</th>\\r\\n                  <th>Power</th>\\r\\n                  <th>Hull Type</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Height</th>\\r\\n                  <th>Draught</th>\\r\\n                  <th>Gross Tonnage</th>\\r\\n                  <th>Deadweight Tonnage</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td *ngIf=\\\"shipTypeSelected\\\">{{ selectedShipType.name }}</td>\\r\\n                  <td>{{ shipModel.yearOfBuild }}</td>\\r\\n                  <td>{{ lengthTypeDropdownString }}\\r\\n                    <br>{{ shipModel.length }}</td>\\r\\n                  <td>{{ breadthTypeDropdownString }}\\r\\n                    <br>{{ shipModel.breadth }}</td>\\r\\n                  <td>{{ powerTypeDropdownString }}\\r\\n                    <br>{{ shipModel.power }}</td>\\r\\n                  <td>{{ hullTypeDropdownString }}</td>\\r\\n                  <td>{{ shipStatusDropdownString }}</td>\\r\\n                  <td>{{ shipModel.height }}</td>\\r\\n                  <td>{{ shipModel.draught }}</td>\\r\\n                  <td>{{ shipModel.grossTonnage }}</td>\\r\\n                  <td>{{ shipModel.deadweightTonnage }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrusters\\\">Ship has side thrusters.</p>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrustersFront\\\">Ship has front side thrusters.</p>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrustersBack\\\">Ship has back side thrusters.</p>\\r\\n\\r\\n          <div *ngIf=\\\"shipModel.remark\\\">\\r\\n            <span>Remark:</span>\\r\\n            <div class=\\\"card p-1 pt-3 text-left mb-3\\\">\\r\\n              <pre>{{ shipModel.remark }}</pre>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Country Flag</th>\\r\\n                  <th>Ship Flag Code</th>\\r\\n                  <th>Country</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <img src=\\\"assets/images/flags/{{ shipFlagCodeModel.country.twoCharCode | lowercase }}.png\\\" height=\\\"20px\\\" />\\r\\n                  </td>\\r\\n                  <td>{{ shipFlagCodeModel.name }}</td>\\r\\n                  <td>{{ shipFlagCodeModel.country.name }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <app-selected-contact-mediums [selectedContactModelList]=\\\"shipModel.shipContact\\\"></app-selected-contact-mediums>\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Port of Registry</th>\\r\\n                  <th>Ship Registry Number</th>\\r\\n                  <th>Date of issue</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ certificateModel.portLocation.name }}</td>\\r\\n                  <td>{{ certificateModel.certificateNumber }}</td>\\r\\n                  <td>{{ certificateDateString }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"dataIsPristine\\\">\\r\\n            <span>{{ dataIsPristineText }}</span>\\r\\n            <br>\\r\\n            <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n              <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n              <span>{{ confirmButtonTitle }}</span>\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"!(dataIsPristine)\\\">\\r\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerShip()\\\">\\r\\n              <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> {{ confirmButtonTitle }}</button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html\n// module chunks = main","import { Component, DoCheck, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { OrganizationProperties } from 'app/shared/constants/organization-properties';\r\nimport { ShipFlagCodeProperties } from 'app/shared/constants/ship-flag-code-properties';\r\nimport { CertificateOfRegistryModel } from 'app/shared/models/certificate-of-registry-model';\r\nimport { OrganizationModel } from 'app/shared/models/organization-model';\r\nimport { ShipContactModel } from 'app/shared/models/ship-contact-model';\r\nimport { ShipFlagCodeModel } from 'app/shared/models/ship-flag-code-model';\r\nimport { ShipModel } from 'app/shared/models/ship-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nconst RESULT_SUCCESS = 'Ship was successfully saved to the database.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to save the ship to the database. Please try again later.';\r\nconst RESULT_SAVED_WITHOUT_CONTACT = 'Ship was saved to the database, but there was an error when trying to save the ship\\'s contact information. Please provide this information later.';\r\nconst INITIAL_DATA_IS_PRISTINE_TEXT = 'There are no unsaved changes in this page.';\r\nconst UPDATED_DATA_IS_PRISTINE_TEXT = 'Your changes have been saved.';\r\n\r\n@Component({\r\n  selector: 'app-register-ship',\r\n  templateUrl: './register-ship.component.html',\r\n  styleUrls: ['./register-ship.component.css']\r\n})\r\nexport class RegisterShipComponent implements OnInit, OnDestroy {\r\n\r\n  shipModel = new ShipModel();\r\n\r\n  newShip = false;\r\n  shipHeader: string;\r\n  confirmHeader: string;\r\n  confirmButtonTitle: string;\r\n\r\n  hullTypeSelected = false;\r\n  lengthTypeSelected = false;\r\n  breadthTypeSelected = false;\r\n  powerTypeSelected = false;\r\n  shipStatusSelected = false;\r\n\r\n  shipTypeList: any[];\r\n  hullTypeList: any[];\r\n  lengthTypeList: any[];\r\n  breadthTypeList: any[];\r\n  powerTypeList: any[];\r\n  shipStatusList: any[];\r\n\r\n  selectedShipType: any;\r\n  shipTypeSelected = false;\r\n  shipTypeSearchFailed = false;\r\n\r\n  hullTypeDropdownString = 'Select hull type';\r\n  lengthTypeDropdownString = 'Select type';\r\n  breadthTypeDropdownString = 'Select type';\r\n  powerTypeDropdownString = 'Select type';\r\n  shipStatusDropdownString = 'Select status';\r\n\r\n  shipFlagCodeSelected: boolean;\r\n  shipFlagCodeModel: ShipFlagCodeModel;\r\n  shipFlagCodeProperties = new ShipFlagCodeProperties().getPropertyList();\r\n\r\n  contactSelected: boolean;\r\n  selectedContactModelList: ShipContactModel[];\r\n\r\n  organizationSelected: boolean;\r\n  organizationModel: OrganizationModel;\r\n  organizationProperties = new OrganizationProperties().getPropertyList();\r\n\r\n  certificateSelected = false;\r\n  certificateModel: CertificateOfRegistryModel;\r\n  certificateDateString: string;\r\n\r\n  dataIsPristine = true;\r\n  dataIsPristineText: string;\r\n\r\n  shipDataSubscription: Subscription;\r\n\r\n  shipTypesSubscription: Subscription;\r\n  hullTypesSubscription: Subscription;\r\n  lengthTypesSubscription: Subscription;\r\n  breadthTypesSubscription: Subscription;\r\n  powerTypesSubscription: Subscription;\r\n  shipStatusListSubscription: Subscription;\r\n\r\n  constructor(\r\n    private shipService: ShipService,\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  // for development purposes, remove before prod\r\n  setInfoShortcut() {\r\n    this.shipModel.name = 'TJOHEI';\r\n    this.shipModel.callSign = 'tjo123';\r\n    this.shipModel.imoNo = 1234567;\r\n    this.shipModel.mmsiNo = 7654321;\r\n    // this.selectShipType(this.shipTypeList[0]);\r\n    this.shipModel.yearOfBuild = 1234;\r\n    this.selectLengthType(this.lengthTypeList[0]);\r\n    this.shipModel.length = 100;\r\n    this.selectBreadthType(this.breadthTypeList[0]);\r\n    this.shipModel.breadth = 50;\r\n    this.selectPowerType(this.powerTypeList[0]);\r\n    this.shipModel.power = 1000;\r\n    this.selectHullType(this.hullTypeList[0]);\r\n    this.selectShipStatus(this.shipStatusList[0]);\r\n    this.shipModel.height = 20;\r\n    this.shipModel.draught = 10;\r\n    this.shipModel.grossTonnage = 500;\r\n    this.shipModel.deadweightTonnage = 600;\r\n    this.shipModel.hasSideThrusters = true;\r\n    this.shipModel.remark = 'Remark';\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataIsPristineText = INITIAL_DATA_IS_PRISTINE_TEXT;\r\n    this.certificateModel = new CertificateOfRegistryModel();\r\n    this.shipDataSubscription = this.shipService.shipData$.subscribe(data => {\r\n      if (data) {\r\n        this.setAllValues(data);\r\n      } else if (!this.newShip) {\r\n        this.newShip = true;\r\n        this.shipHeader = 'Register New Ship';\r\n        this.confirmHeader = 'Confirm Ship Registration';\r\n        this.confirmButtonTitle = 'Register Ship';\r\n      }\r\n    });\r\n    this.shipTypesSubscription = this.shipService.getShipTypes().subscribe(data => (this.shipTypeList = data));\r\n    this.hullTypesSubscription = this.shipService.getHullTypes().subscribe(data => (this.hullTypeList = data));\r\n    this.lengthTypesSubscription = this.shipService.getLengthTypes().subscribe(data => (this.lengthTypeList = data));\r\n    this.breadthTypesSubscription = this.shipService.getBreadthTypes().subscribe(data => (this.breadthTypeList = data));\r\n    this.powerTypesSubscription = this.shipService.getPowerTypes().subscribe(data => (this.powerTypeList = data));\r\n    this.shipStatusListSubscription = this.shipService.getShipStatusList().subscribe(data => (this.shipStatusList = data));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.shipDataSubscription.unsubscribe();\r\n    this.shipTypesSubscription.unsubscribe();\r\n    this.hullTypesSubscription.unsubscribe();\r\n    this.lengthTypesSubscription.unsubscribe();\r\n    this.breadthTypesSubscription.unsubscribe();\r\n    this.powerTypesSubscription.unsubscribe();\r\n    this.shipStatusListSubscription.unsubscribe();\r\n  }\r\n\r\n  setAllValues(ship: ShipModel) {\r\n    this.newShip = false;\r\n    this.shipHeader = 'Edit Ship';\r\n    this.confirmHeader = 'Confirm Ship Changes';\r\n    this.confirmButtonTitle = 'Apply Changes';\r\n    this.shipModel = ship;\r\n    this.selectedShipType = ship.shipType;\r\n    this.shipTypeSelected = ship.shipType != null;\r\n    this.organizationModel = ship.organization;\r\n    this.organizationSelected = ship.organization != null;\r\n    this.selectedContactModelList = ship.shipContact;\r\n\r\n    this.hullTypeSelected = ship.shipHullType != null;\r\n    if (this.hullTypeSelected) {\r\n      this.hullTypeDropdownString = ship.shipHullType.name;\r\n    }\r\n    this.lengthTypeSelected = ship.shipLengthType != null;\r\n    if (this.lengthTypeSelected) {\r\n      this.lengthTypeDropdownString = ship.shipLengthType.name;\r\n    }\r\n    this.hullTypeSelected = ship.shipHullType != null;\r\n    if (this.hullTypeSelected) {\r\n      this.hullTypeDropdownString = ship.shipHullType.name;\r\n    }\r\n    this.breadthTypeSelected = ship.shipBreadthType != null;\r\n    if (this.breadthTypeSelected) {\r\n      this.breadthTypeDropdownString = ship.shipBreadthType.name;\r\n    }\r\n    this.powerTypeSelected = ship.shipPowerType != null;\r\n    if (this.powerTypeSelected) {\r\n      this.powerTypeDropdownString = ship.shipPowerType.name;\r\n    }\r\n    this.shipStatusSelected = ship.shipStatus != null;\r\n    if (this.shipStatusSelected) {\r\n      this.shipStatusDropdownString = ship.shipStatus.name;\r\n    }\r\n    this.setShipFlagCode(ship.shipFlagCode);\r\n    this.setOrganization(ship.organization);\r\n    this.setCertificateOfRegistry(ship.certificateOfRegistry);\r\n    this.setContactData(ship.shipContact);\r\n\r\n  }\r\n\r\n  selectShipType($event: any) {\r\n    this.shipModel.shipTypeId = $event.shipTypeId;\r\n    this.shipTypeSelected = true;\r\n    this.touchData();\r\n  }\r\n\r\n  deselectShipType() {\r\n    this.shipModel.shipTypeId = null;\r\n    this.selectedShipType = null;\r\n    this.shipTypeSelected = false;\r\n  }\r\n\r\n  selectLengthType(lengthType: any) {\r\n    this.shipModel.shipLengthTypeId = lengthType.shipLengthTypeId;\r\n    this.lengthTypeDropdownString = lengthType.name;\r\n    this.lengthTypeSelected = true;\r\n    this.touchData();\r\n  }\r\n\r\n  selectBreadthType(breadthType: any) {\r\n    this.shipModel.shipBreadthTypeId = breadthType.shipBreadthTypeId;\r\n    this.breadthTypeDropdownString = breadthType.name;\r\n    this.breadthTypeSelected = true;\r\n    this.touchData();\r\n  }\r\n\r\n  selectPowerType(powerType: any) {\r\n    this.shipModel.shipPowerTypeId = powerType.shipPowerTypeId;\r\n    this.powerTypeDropdownString = powerType.name;\r\n    this.powerTypeSelected = true;\r\n    this.touchData();\r\n  }\r\n\r\n  selectHullType(hullType: any) {\r\n    this.shipModel.shipHullTypeId = hullType.shipHullTypeId;\r\n    this.hullTypeDropdownString = hullType.name;\r\n    this.hullTypeSelected = true;\r\n    this.touchData();\r\n  }\r\n\r\n  selectShipStatus(shipStatus: any) {\r\n    this.shipModel.shipStatusId = shipStatus.shipStatusId;\r\n    this.shipStatusDropdownString = shipStatus.name;\r\n    this.shipStatusSelected = true;\r\n    this.touchData();\r\n  }\r\n\r\n  onShipFlagCodeResult(shipFlagCodeResult) {\r\n    this.setShipFlagCode(shipFlagCodeResult);\r\n    this.touchData();\r\n  }\r\n\r\n  setShipFlagCode(shipFlagCodeData: ShipFlagCodeModel) {\r\n    this.shipFlagCodeModel = shipFlagCodeData;\r\n    if (shipFlagCodeData) {\r\n      this.shipModel.shipFlagCodeId = shipFlagCodeData.shipFlagCodeId;\r\n      this.shipFlagCodeSelected = true;\r\n      ShipFlagCodeProperties.setShipFlagCodeData(this.shipFlagCodeProperties, this.shipFlagCodeModel);\r\n      const twoCharCode = this.shipFlagCodeModel.country.twoCharCode.toLowerCase() || 'xx';\r\n      const countryFlag = twoCharCode + '.png';\r\n      ShipFlagCodeProperties.setCountry(this.shipFlagCodeProperties, this.shipFlagCodeModel.country.name, countryFlag);\r\n    }\r\n  }\r\n\r\n  deselectShipFlagCode() {\r\n    this.shipFlagCodeSelected = false;\r\n    this.shipFlagCodeModel = null;\r\n    this.shipModel.shipFlagCodeId = null;\r\n  }\r\n\r\n  onContactDataResult(contactData: ShipContactModel[]) {\r\n    this.setContactData(contactData);\r\n    this.touchData();\r\n  }\r\n\r\n  setContactData(contactData) {\r\n    this.selectedContactModelList = contactData;\r\n    this.shipModel.shipContact = this.selectedContactModelList;\r\n    this.contactSelected = contactData.length !== 0;\r\n  }\r\n\r\n  onOrganizationResult(organizationResult) {\r\n    this.setOrganization(organizationResult);\r\n    this.touchData();\r\n  }\r\n\r\n  setOrganization(organizationData: OrganizationModel) {\r\n    this.organizationModel = organizationData;\r\n    if (organizationData) {\r\n      this.shipModel.organizationId = organizationData.organizationId;\r\n      this.organizationSelected = true;\r\n      OrganizationProperties.setOrganizationData(\r\n        this.organizationProperties,\r\n        this.organizationModel\r\n      );\r\n    }\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.organizationSelected = false;\r\n    this.organizationModel = null;\r\n    this.shipModel.organizationId = null;\r\n  }\r\n\r\n  onCertificateOfRegistryResult(certificateResult) {\r\n    this.setCertificateOfRegistry(certificateResult);\r\n    this.touchData();\r\n  }\r\n\r\n  setCertificateOfRegistry(certificateData: CertificateOfRegistryModel) {\r\n    this.certificateModel = certificateData;\r\n    if (certificateData) {\r\n      if (this.certificateModel.dateOfIssue) {\r\n        this.certificateDateString = this.dateString(new Date(this.certificateModel.dateOfIssue));\r\n      }\r\n      if (this.certificateModel.dateOfIssue && this.certificateModel.portLocationId\r\n          && this.certificateModel.portLocation && this.certificateModel.certificateNumber) {\r\n        this.certificateSelected = true;\r\n      } else {\r\n        this.certificateSelected = false;\r\n      }\r\n    } else {\r\n      this.certificateSelected = false;\r\n    }\r\n  }\r\n\r\n  touchData() {\r\n    this.dataIsPristine = false;\r\n  }\r\n\r\n  private updateCertificate() {\r\n    // safeCertificate is used for removing unnecessary location objects within the certificate\r\n    const safeCertificate = new CertificateOfRegistryModel();\r\n    safeCertificate.certificateNumber = this.certificateModel.certificateNumber;\r\n    safeCertificate.dateOfIssue = this.certificateModel.dateOfIssue;\r\n    safeCertificate.portLocationId = this.certificateModel.portLocationId;\r\n    this.shipModel.certificateOfRegistry = safeCertificate;\r\n  }\r\n\r\n  registerShip() {\r\n    this.updateCertificate();\r\n    if (this.newShip) {\r\n      this.shipService.registerShip(this.shipModel).subscribe(\r\n        result => {\r\n          this.shipModel.shipId = result.shipId;\r\n          const shipContactList = this.selectedContactModelList.map(\r\n            contactModel => {\r\n              const shipContact = new ShipContactModel();\r\n              shipContact.shipId = this.shipModel.shipId;\r\n              shipContact.contactMediumId = contactModel.contactMedium.contactMediumId;\r\n              shipContact.contactValue = contactModel.contactValue;\r\n              shipContact.isPreferred = contactModel.isPreferred;\r\n              shipContact.comments = contactModel.comments;\r\n              return shipContact;\r\n            }\r\n          );\r\n          this.saveShipContactList(shipContactList);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(\r\n            ConfirmationModalComponent.TYPE_FAILURE,\r\n            RESULT_FAILURE\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      // remove child dependencies\r\n      this.shipModel.certificateOfRegistryId = this.certificateModel.certificateOfRegistryId;\r\n      this.shipModel.organization = null;\r\n      this.shipModel.shipStatus = null;\r\n      this.shipModel.shipPowerType = null;\r\n      this.shipModel.shipBreadthType = null;\r\n      this.shipModel.shipLengthType = null;\r\n      this.shipModel.shipSource = null;\r\n      this.shipModel.shipFlagCode = null;\r\n      this.shipModel.shipType = null;\r\n      this.shipModel.shipContact = null;\r\n      // update\r\n      this.shipService.updateShip(this.shipModel).subscribe(\r\n        result => {\r\n          const shipContactList = this.selectedContactModelList.map(\r\n            contactModel => {\r\n              const shipContact = new ShipContactModel();\r\n              shipContact.shipId = this.shipModel.shipId;\r\n              shipContact.contactMediumId = contactModel.contactMedium.contactMediumId;\r\n              shipContact.contactValue = contactModel.contactValue;\r\n              shipContact.isPreferred = contactModel.isPreferred;\r\n              shipContact.comments = contactModel.comments;\r\n              return shipContact;\r\n            }\r\n          );\r\n          this.saveShipContactList(shipContactList);\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(\r\n            ConfirmationModalComponent.TYPE_FAILURE,\r\n            RESULT_FAILURE\r\n          );\r\n        }\r\n      );\r\n    }\r\n    this.dataIsPristineText = UPDATED_DATA_IS_PRISTINE_TEXT;\r\n  }\r\n\r\n  saveShipContactList(shipContactList: ShipContactModel[]) {\r\n    this.shipService.saveShipContactList(shipContactList).subscribe(\r\n      result => {\r\n        if (result) {\r\n          this.openConfirmationModal(\r\n            ConfirmationModalComponent.TYPE_SUCCESS,\r\n            RESULT_SUCCESS\r\n          );\r\n        }\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(\r\n          ConfirmationModalComponent.TYPE_WARNING,\r\n          RESULT_SAVED_WITHOUT_CONTACT\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_SHIPS);\r\n  }\r\n\r\n  dateString(date: Date) {\r\n    return (\r\n      date.getFullYear() +\r\n      '-' +\r\n      this.dateTimeFormat(date.getMonth() + 1) +\r\n      '-' +\r\n      this.dateTimeFormat(date.getDate())\r\n    );\r\n  }\r\n\r\n  dateTimeFormat(number: number) {\r\n    if (number <= 9) {\r\n      return '0' + number;\r\n    } else {\r\n      return number;\r\n    }\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goBack();\r\n        }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goBack();\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <app-ssn-card header=\\\"Register New Ship\\\" icon=\\\"ship.png\\\">\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewShip()\\\">Register New Ship</button>\\r\\n      </div>\\r\\n    </app-ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<app-ssn-card header=\\\"Ship Search\\\" icon=\\\"ship.png\\\">\\r\\n  <app-search-ship [showDropdown]=false (shipSearchResult)=\\\"onShipSearchResult($event)\\\"></app-search-ship>\\r\\n  <br>\\r\\n  <div>\\r\\n    <app-ship-smart-table></app-ship-smart-table>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-view-ship-info',\r\n  templateUrl: './view-ship-info.component.html',\r\n  styleUrls: ['./view-ship-info.component.css']\r\n})\r\nexport class ViewShipInfoComponent implements OnInit {\r\n\r\n  constructor(\r\n    private shipService: ShipService,\r\n    private contentService: ContentService\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onShipSearchResult(shipSearchResult) {\r\n    this.shipService.setShipSearchData(shipSearchResult);\r\n  }\r\n\r\n  registerNewShip() {\r\n    this.shipService.setShipData(null);\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_SHIP);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css\n// module id = ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"REGISTER USER\\\" icon=\\\"user.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card *ngIf=\\\"!isDrafted\\\" header=\\\"Personalia\\\" icon=\\\"user-info.png\\\" id=\\\"personalia\\\">\\r\\n        <form #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"email\\\">Email</label>\\r\\n                  <input id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter email\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\"\\r\\n                    [email]=\\\"true\\\" (ngModelChange)=\\\"emailChecked = false\\\" (blur)=\\\"userExists(email.valid)\\\" autocomplete=\\\"username\\\"\\r\\n                    tmFocus validateEmail>\\r\\n                  <small *ngIf=\\\"!email.valid && !email.pristine\\\" class=\\\"text-danger\\\">Please enter a valid email address</small>\\r\\n                  <div *ngIf=\\\"emailChecked && !emailTaken\\\">\\r\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/green/checkmark.png\\\">\\r\\n                    <small class=\\\"text-success\\\">email available</small>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"emailChecked && emailTaken\\\">\\r\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/red/warning.png\\\">\\r\\n                    <small class=\\\"text-danger\\\">email is already in use</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"given_name\\\">Given name</label>\\r\\n                  <input id=\\\"given_name\\\" name=\\\"givenName\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.givenName\\\" placeholder=\\\"Enter Given name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"surname\\\">Surname</label>\\r\\n                  <input id=\\\"surname\\\" name=\\\"surname\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.surname\\\" placeholder=\\\"Enter surname\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"phone_number\\\">Phone number</label>\\r\\n                  <input id=\\\"phone_number\\\" name=\\\"phoneNumber\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.phoneNumber\\\" placeholder=\\\"Enter phone number\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"company_phone_number\\\">Company phone number</label>\\r\\n                  <input id=\\\"company_phone_number\\\" name=\\\"companyPhoneNumber\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.companyPhoneNumber\\\"\\r\\n                    placeholder=\\\"Enter your company phone number\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <div class=\\\"col\\\">\\r\\n                  <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"company_email\\\">Company email</label>\\r\\n                  <input id=\\\"company_email\\\" name=\\\"companyEmail\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.companyEmail\\\" #compEmail=\\\"ngModel\\\"\\r\\n                    [email]=\\\"true\\\" tmFocus validateEmail placeholder=\\\"Enter your company email address\\\">\\r\\n                </div>\\r\\n                <small *ngIf=\\\"!compEmail.valid && !compEmail.pristine\\\" class=\\\"text-danger\\\">Please enter a valid email address</small>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Select Organization\\\" icon=\\\"pax.png\\\">\\r\\n        <div *ngIf=\\\"!organizationSelected\\\">\\r\\n          <app-search-organization (organizationResult)=\\\"onOrganizationResult($event)\\\"></app-search-organization>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <app-ssn-table [entryData]=organizationProperties></app-ssn-table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"User rights\\\" icon=\\\"verification-clipboard.png\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <span class=\\\"no-wrap\\\">Select a role for this user</span>\\r\\n          </div>\\r\\n          <ng-select id=\\\"roleSelected\\\" [items]=\\\"roleList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select role\\\"\\r\\n            [(ngModel)]=\\\"user.roleName\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Confirm User Registration\\\">\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"!(user.email && emailChecked && !emailTaken && organizationSelected && user.roleName)\\\">\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.email\\\">Email not set.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"user.email && emailChecked && emailTaken\\\">Selected email is already in use.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!organizationSelected\\\">Organization not selected.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.roleName\\\">Role not assigned.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>Register User</button>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"user.email && emailChecked && !emailTaken && organizationSelected && user.roleName\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th *ngIf=\\\"user.givenName\\\">Given name</th>\\r\\n                  <th *ngIf=\\\"user.surname\\\">Surname</th>\\r\\n                  <th>Email</th>\\r\\n                  <th *ngIf=\\\"user.phoneNumber\\\">Phone number</th>\\r\\n                  <th>Organization</th>\\r\\n                  <th>Role</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td *ngIf=\\\"user.givenName\\\">{{ user.givenName }}</td>\\r\\n                  <td *ngIf=\\\"user.surname\\\">{{ user.surname }}</td>\\r\\n                  <td> {{ user.email }} </td>\\r\\n                  <td *ngIf=\\\"user.phoneNumber\\\">{{ user.phoneNumber }}</td>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ user.roleName }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerUser()\\\">Register User</button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\\r\\n\\r\\n\\r\\n\\r\\n<!-- <ng-template #template let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">User registration result</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div *ngIf=\\\"registrationSuccessful\\\">\\r\\n      <span>User registered successfully.</span>\\r\\n      <br>\\r\\n      <span>Please click the link below to set a new password for the user:</span>\\r\\n      <br>\\r\\n      <span><a href={{emailConfirmationLink}}>link</a></span>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!registrationSuccessful\\\">\\r\\n      <span>Something went wrong while attempting to register the user!</span>\\r\\n    </div>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n        <span>Close</span>\\r\\n      </button>\\r\\n  </div>\\r\\n</ng-template> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html\n// module id = ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\nimport { UserModel } from '../../../../../shared/models/user-model';\r\nimport { OrganizationProperties } from 'app/shared/constants/organization-properties';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nconst RESULT_SUCCESS = 'User was successfully registered.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to register the user. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-register-user',\r\n  templateUrl: './register-user.component.html',\r\n  styleUrls: ['./register-user.component.css'],\r\n  providers: [AccountService]\r\n})\r\nexport class RegisterUserComponent implements OnInit, OnDestroy {\r\n\r\n  user: UserModel = {\r\n    email: '',\r\n    phoneNumber: '',\r\n    givenName: '',\r\n    surname: '',\r\n    roleName: '',\r\n    organizationId: '',\r\n    companyEmail: '',\r\n    companyPhoneNumber: ''\r\n  };\r\n  emailTaken: boolean;\r\n  emailChecked: boolean;\r\n\r\n  organizationModel: any;\r\n  organizationSelected: boolean;\r\n  organizationProperties = new OrganizationProperties().getPropertyList();\r\n\r\n  roleList: any[];\r\n  selectedRole: any;\r\n\r\n  getAllRolesSubscription: Subscription;\r\n\r\n  registrationSuccessful: boolean;\r\n  emailConfirmationLink: string;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal,\r\n    private organizationService: OrganizationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.getAllRolesSubscription = this.accountService.getAllRoles()\r\n    .subscribe(\r\n      data => this.roleList = data\r\n    );\r\n\r\n    this.organizationService.setOrganizationData(null);\r\n    this.organizationService.organizationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.organizationModel = data;\r\n          this.user.organizationId = data.organizationId;\r\n          this.organizationSelected = true;\r\n        } else {\r\n          this.organizationSelected = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.getAllRolesSubscription.unsubscribe();\r\n  }\r\n  userExists(emailValid: boolean) {\r\n    if (emailValid) {\r\n      return this.accountService.emailTaken(this.user.email)\r\n        .subscribe(result => {\r\n          this.emailTaken = result;\r\n          this.emailChecked = true;\r\n        });\r\n    }\r\n  }\r\n\r\n  registerUser() {\r\n    this.accountService.registerUser(this.user)\r\n    .subscribe(\r\n      result => {\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n          // this.openCustomModal(template, true);  // SUCCESS\r\n      },\r\n      error => {\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        // this.openCustomModal(template, false);  // FAILURE\r\n      }\r\n    );\r\n  }\r\n\r\n  onOrganizationResult(organizationResult) {\r\n    this.setOrganization(organizationResult);\r\n  }\r\n\r\n  setOrganization(organizationData) {\r\n    this.organizationModel = organizationData;\r\n    this.user.organizationId = organizationData.organizationId;\r\n    this.organizationSelected = true;\r\n    OrganizationProperties.setOrganizationData(this.organizationProperties, this.organizationModel);\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.organizationModel = null;\r\n    this.user.organizationId = null;\r\n    this.organizationSelected = false;\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) { this.goBack(); }\r\n      }\r\n    );\r\n  }\r\n\r\n  private openCustomModal(template: any, success: boolean) {\r\n    this.registrationSuccessful = success;\r\n    this.modalService.open(template);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/content-container.component.css\n// module id = ./src/app/main-content/content-container/content-container.component.css\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"selectedComponent\\\">\\r\\n  <app-register-user *ngSwitchCase=\\\"cn.REGISTER_USER\\\"></app-register-user>\\r\\n  <app-view-ship-info *ngSwitchCase=\\\"cn.VIEW_SHIPS\\\"></app-view-ship-info>\\r\\n  <app-register-ship *ngSwitchCase=\\\"cn.REGISTER_SHIP\\\"></app-register-ship>\\r\\n  <app-view-location-info *ngSwitchCase=\\\"cn.LOCATIONS\\\"></app-view-location-info>\\r\\n  <app-register-location *ngSwitchCase=\\\"cn.REGISTER_LOCATION\\\"></app-register-location>\\r\\n  <app-view-organization-info *ngSwitchCase=\\\"cn.VIEW_ORGANIZATIONS\\\"></app-view-organization-info>\\r\\n  <app-register-organization *ngSwitchCase=\\\"cn.REGISTER_ORGANIZATION\\\"></app-register-organization>\\r\\n  <app-port-call *ngSwitchCase=\\\"cn.VIEW_PORT_CALLS\\\"></app-port-call>\\r\\n  <app-new-port-call-draft *ngSwitchCase=\\\"cn.REGISTER_PORT_CALL_DRAFT\\\"></app-new-port-call-draft>\\r\\n  <app-registration *ngSwitchCase=\\\"cn.REGISTER_PORT_CALL\\\"></app-registration>\\r\\n  <app-view-port-call *ngSwitchCase=\\\"cn.VIEW_PORT_CALL\\\"></app-view-port-call>\\r\\n  <app-clearance *ngSwitchCase=\\\"cn.PORT_CALL_CLEARANCE\\\"></app-clearance>\\r\\n  <div class=\\\"alert alert-danger\\\" *ngSwitchDefault>Oops, something went wrong. Please reload the page.</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/content-container.component.html\n// module id = ./src/app/main-content/content-container/content-container.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-content-container',\r\n  templateUrl: './content-container.component.html',\r\n  styleUrls: ['./content-container.component.css']\r\n})\r\nexport class ContentContainerComponent implements OnInit, OnDestroy {\r\n\r\n  cn = CONTENT_NAMES;\r\n  selectedComponent: string;\r\n\r\n  contentNameSubscription: Subscription;\r\n\r\n  constructor(private contentService: ContentService) {}\r\n\r\n  ngOnInit() {\r\n    this.contentNameSubscription = this.contentService.contentName$.subscribe((content) => {\r\n      this.selectedComponent = content;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.contentNameSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/content-container.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { BasisDataModule } from './basis-data/basis-data.module';\r\nimport { ContentContainerComponent } from './content-container.component';\r\nimport { PortCallModule } from './port-call/port-call.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    PortCallModule,\r\n    BasisDataModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [ContentContainerComponent],\r\n  exports: [ContentContainerComponent]\r\n})\r\nexport class ContentContainerModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/content-container.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.css\n// module id = ./src/app/main-content/content-container/port-call/clearance/clearance.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"PORT CALL CLEARANCE\\\" icon=\\\"stamp.png\\\">\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ssn-card header=\\\"Clearance\\\" icon=\\\"stamp.png\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"remark\\\">Remark</label>\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"remark\\\" [(ngModel)]=\\\"clearanceText\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"showWarningBox(content, true)\\\">\\r\\n            <div class=\\\"mx-auto\\\">\\r\\n              <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"32px\\\">\\r\\n            </div>\\r\\n            <small>Accept</small>\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"showWarningBox(content, false)\\\">\\r\\n            <div class=\\\"mx-auto\\\">\\r\\n              <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"32px\\\">\\r\\n            </div>\\r\\n            <small>Reject</small>\\r\\n          </button>\\r\\n        </div>\\r\\n      </app-ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-outline-light\\\" (click)=\\\"goBack()\\\" (mouseover)=\\\"backButtonIcon='left-arrow'\\\" (mouseout)=\\\"backButtonIcon='white/left-arrow'\\\">\\r\\n        <img src=\\\"assets/images/icons/128x128/{{backButtonIcon}}.png\\\" height=\\\"32px\\\">\\r\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\\r\\n\\r\\n<ng-template #content let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Confirm Clearance</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div *ngIf=\\\"clearanceModel.remark\\\">\\r\\n      <span>Are you sure you want to submit a clearance response with the following remark:</span>\\r\\n      <br>\\r\\n      <pre>{{ clearanceText }}</pre>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!clearanceModel.remark\\\">\\r\\n      <span>Are you sure you want to submit a clearance response with no remark?</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-success\\\" *ngIf=\\\"givingClearance\\\" (click)=\\\"saveClearance(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\">\\r\\n      <span>Give Clearance</span>\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"!givingClearance\\\" (click)=\\\"saveClearance(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Reject Clearance</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Cancel</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.html\n// module id = ./src/app/main-content/content-container/port-call/clearance/clearance.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ClearanceModel } from 'app/shared/models/clearance-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-clearance',\r\n  templateUrl: './clearance.component.html',\r\n  styleUrls: ['./clearance.component.css']\r\n})\r\nexport class ClearanceComponent implements OnInit, OnDestroy {\r\n  clearanceModel: ClearanceModel = new ClearanceModel();\r\n\r\n  backButtonIcon = 'white/left-arrow';\r\n\r\n  clearanceList: any[] = [];\r\n\r\n  givingClearance: boolean;\r\n  clearanceText;\r\n\r\n  clearanceListSubscription: Subscription;\r\n  shipDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal,\r\n    private portCallService: PortCallService,\r\n    private shipService: ShipService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.clearanceListSubscription = this.portCallService.clearanceListData$.subscribe(data => {\r\n      if (data) {\r\n        this.clearanceList = data;\r\n        this.portCallService.clearanceData$.subscribe(clearanceUser => {\r\n          if (clearanceUser) {\r\n            this.clearanceModel = this.clearanceList.find(\r\n              cl => cl.organizationId === clearanceUser.organizationId\r\n            );\r\n            this.clearanceText = this.clearanceModel.remark;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n    this.shipDataSubscription = this.portCallService.shipData$.subscribe(shipResult => {\r\n      this.shipService.setShipData(shipResult);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearanceListSubscription.unsubscribe();\r\n    this.shipDataSubscription.unsubscribe();\r\n  }\r\n\r\n  showWarningBox(content: any, clearance: boolean) {\r\n    this.givingClearance = clearance;\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  saveClearance() {\r\n    console.log(this.clearanceModel);\r\n    this.clearanceModel.remark = this.clearanceText;\r\n    this.clearanceModel.cleared = this.givingClearance;\r\n    this.portCallService.saveClearance(this.clearanceModel);\r\n\r\n    if (this.clearanceModel.cleared) {\r\n      this.portCallService.getClearanceListForPortCall(this.clearanceModel.portCallId).subscribe(\r\n        result => {\r\n          const clearances = result;\r\n          let allCleared = true;\r\n          clearances.forEach(clearance => {\r\n            if (!clearance.cleared && clearance.organizationPortCallId !== this.clearanceModel.organizationPortCallId) {\r\n              allCleared = false;\r\n            }\r\n          });\r\n          console.log('All cleared: ', allCleared);\r\n          if (allCleared) {\r\n            this.portCallService.updatePortCallStatusCleared(this.clearanceModel.portCallId).subscribe(\r\n              res => {\r\n                console.log(res);\r\n                console.log('Status set to cleared.');\r\n              },\r\n              err => console.log(err)\r\n            );\r\n          }\r\n        }\r\n      );\r\n    } else {\r\n      console.log('Setting status to AC...');\r\n      this.portCallService.updatePortCallStatusAwaitingClearance(this.clearanceModel.portCallId).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          console.log('Status set to awaiting clearance');\r\n        },\r\n        err => console.log(err)\r\n      );\r\n    }\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Activate Port Call\\\" icon=\\\"save.png\\\" class=\\\"text-center\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n\\r\\n    <div *ngIf=\\\"!prevAndNextPortCallDataIsPristine\\\" class=\\\"row\\\">\\r\\n\\r\\n      <div *ngIf=\\\"voyagesMeta.valid\\\" class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-warning\\\">\\r\\n          <span>Warning: Voyages are unsaved.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"savePrevAndNextPortCall()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Voyages</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!voyagesMeta.valid\\\" class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-danger\\\">\\r\\n          <span>Error: Voyages contains invalid data.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Voyages</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!detailsDataIsPristine\\\" class=\\\"row\\\">\\r\\n\\r\\n      <div *ngIf=\\\"detailsMeta.valid\\\" class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-warning\\\">\\r\\n          <span>Warning: Port Call Details are unsaved.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveDetails()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Details</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!detailsMeta.valid\\\" class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-danger\\\">\\r\\n          <span>Error: Port Call Details contains invalid data.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Details</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!cargoDataIsPristine && cargoIsChecked\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-warning\\\">\\r\\n          <span>Warning: Cargo data is unsaved.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveCargo()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Cargo\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"!shipStoresDataIsPristine && reportingShipStoresIsChecked\\\" class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-warning\\\">\\r\\n          <span>Warning: Ship Stores data is unsaved.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveShipStores()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Ship Stores\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"portCallIsDraft\\\">\\r\\n      <div *ngIf=\\\"(detailsDataIsPristine && detailsMeta.valid) && prevAndNextPortCallDataIsPristine\\\" class=\\\"col\\\">\\r\\n        <p class=\\\"mb-0\\\">After activating the port call, it will no longer be a draft, and will be visible for authorities to review.</p>\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"send()\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Activate</button>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!((detailsDataIsPristine && detailsMeta.valid) && prevAndNextPortCallDataIsPristine)\\\" class=\\\"col\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n          <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\"> Activate</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\r\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\r\nimport { FormMetaData } from 'app/shared/interfaces/form-meta-data.interface';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { PrevAndNextPocService } from 'app/shared/services/prev-and-next-poc.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\r\nimport { ShipStoresModel } from '../../../../../shared/models/ship-stores-model';\r\nimport { FalCargoService } from '../../../../../shared/services/fal-cargo.service';\r\nimport { ConsignmentModel } from 'app/shared/models/consignment-model';\r\n\r\nconst RESULT_SUCCES = 'This port call has been activated, and is now awaiting clearance.';\r\nconst RESULT_FAILURE = 'There was a problem when trying to activate this port call. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-activate-port-call',\r\n  templateUrl: './activate-port-call.component.html',\r\n  styleUrls: ['./activate-port-call.component.css']\r\n})\r\nexport class ActivatePortCallComponent implements OnInit, OnDestroy {\r\n\r\n  portCallId: number;\r\n\r\n  prevAndNextPortCallDataIsPristine = true;\r\n  detailsDataIsPristine = true;\r\n  shipStoresDataIsPristine = true;\r\n  cargoDataIsPristine = true;\r\n\r\n  reportingShipStoresIsChecked = false;\r\n  cargoIsChecked = false;\r\n\r\n  voyagesMeta: FormMetaData;\r\n\r\n  crewPassengersAndDimensionsModel: any;\r\n  purposeModel: any;\r\n  reportingModel: any;\r\n  otherPurposeName = '';\r\n  detailsMeta: FormMetaData;\r\n  detailsModel: PortCallDetailsModel = new PortCallDetailsModel();\r\n  cargoData: ConsignmentModel[];\r\n\r\n  prevLocationModel: LocationModel;\r\n  nextLocationModel: LocationModel;\r\n  etdModel: DateTime = null;\r\n  etaModel: DateTime = null;\r\n\r\n  shipStoresList: any[];\r\n\r\n  portCallStatus: string;\r\n  portCallIsDraft = false;\r\n  STATUS_DRAFT = 'Draft';\r\n\r\n  voyagesIsPristineSubscription: Subscription;\r\n  prevPortOfCallDataSubscription: Subscription;\r\n  nextPortOfCallDataSubscription: Subscription;\r\n  prevPortOfCallEtdSubscription: Subscription;\r\n  nextPortOfCallEtaSubscription: Subscription;\r\n  voyagesMetaSubscription: Subscription;\r\n  detailsPristineSubscription: Subscription;\r\n  portCallIdDataSubscription: Subscription;\r\n  crewPassengersAndDimensionsDataSubscription: Subscription;\r\n  cargoDescriptionSubscription: Subscription;\r\n  reportingForThisPortCallDataSubscription: Subscription;\r\n  portCallPurposeDataSubscription: Subscription;\r\n  otherPurposeNameSubscription: Subscription;\r\n  crewPassengersAndDimensionsMetaSubscription: Subscription;\r\n  portCallStatusDataSubscription: Subscription;\r\n  shipStoresDataSubscription: Subscription;\r\n  shipStoresIsPristineSubscription: Subscription;\r\n  shipStoresIsCheckedSubscription: Subscription;\r\n  cargoDataSubscription: Subscription;\r\n  cargoIsPristineSubscription: Subscription;\r\n\r\n  constructor(\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private portCallDetailsService: PortCallDetailsService,\r\n    private prevAndNextPocService: PrevAndNextPocService,\r\n    private shipStoresService: FalShipStoresService,\r\n    private cargoService: FalCargoService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    //\r\n    // Voyages\r\n    //\r\n    this.voyagesIsPristineSubscription = this.prevAndNextPocService.dataIsPristine$.subscribe(\r\n      pristineData => {\r\n        this.prevAndNextPortCallDataIsPristine = pristineData;\r\n      }\r\n    );\r\n    this.prevPortOfCallDataSubscription = this.prevAndNextPocService.prevPortOfCallData$.subscribe(\r\n      prevLocationData => {\r\n        this.prevLocationModel = prevLocationData;\r\n      }\r\n    );\r\n    this.nextPortOfCallDataSubscription = this.prevAndNextPocService.nextPortOfCallData$.subscribe(\r\n      nextLocationData => {\r\n        this.nextLocationModel = nextLocationData;\r\n      }\r\n    );\r\n    this.prevPortOfCallEtdSubscription = this.prevAndNextPocService.prevPortOfCallEtdData$.subscribe(\r\n      etdData => {\r\n        if (etdData) {\r\n          const dateTime = new Date(etdData);\r\n          this.etdModel = {\r\n            date: new NgbDate(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate()),\r\n            time: new NgbTime(dateTime.getHours(), dateTime.getMinutes(), 0)\r\n          };\r\n        } else {\r\n          this.etdModel = null;\r\n        }\r\n      }\r\n    );\r\n    this.nextPortOfCallEtaSubscription = this.prevAndNextPocService.nextPortOfCallEtaData$.subscribe(\r\n      etaData => {\r\n        if (etaData) {\r\n          const dateTime = new Date(etaData);\r\n          this.etaModel = {\r\n            date: new NgbDate(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate()),\r\n            time: new NgbTime(dateTime.getHours(), dateTime.getMinutes(), 0)\r\n          };\r\n        } else {\r\n          this.etaModel = null;\r\n        }\r\n      }\r\n    );\r\n    this.voyagesMetaSubscription = this.prevAndNextPocService.prevAndNextPortOfCallMeta$.subscribe(\r\n      metaData => {\r\n        if (metaData) {\r\n          this.voyagesMeta = metaData;\r\n        }\r\n      }\r\n    );\r\n    //\r\n    // Details\r\n    //\r\n    this.detailsPristineSubscription = this.portCallDetailsService.detailsPristine$.subscribe(detailsDataIsPristine => {\r\n      this.detailsDataIsPristine = detailsDataIsPristine;\r\n    });\r\n    this.portCallIdDataSubscription = this.portCallService.portCallIdData$.subscribe(\r\n      portCallIdData => {\r\n        if (portCallIdData) {\r\n          this.portCallId = portCallIdData;\r\n        }\r\n      }\r\n    );\r\n    this.crewPassengersAndDimensionsDataSubscription = this.portCallDetailsService.crewPassengersAndDimensionsData$.subscribe(\r\n      cpadData => {\r\n        if (cpadData) {\r\n          this.crewPassengersAndDimensionsModel = cpadData;\r\n        }\r\n      }\r\n    );\r\n    this.cargoDescriptionSubscription = this.portCallDetailsService.cargoBriefDescriptionData$.subscribe(\r\n      cargoDescriptionData => {\r\n        this.detailsModel.cargoBriefDescription = cargoDescriptionData;\r\n      }\r\n    );\r\n    this.reportingForThisPortCallDataSubscription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData) {\r\n          console.log(reportingData);\r\n          this.reportingModel = reportingData;\r\n          this.cargoIsChecked = this.reportingModel.reportingCargo || false;\r\n        }\r\n      }\r\n    );\r\n    this.portCallPurposeDataSubscription = this.portCallDetailsService.portCallPurposeData$.subscribe(purposeData => {\r\n      if (purposeData) {\r\n        this.purposeModel = purposeData;\r\n      }\r\n    });\r\n    this.otherPurposeNameSubscription = this.portCallDetailsService.otherPurposeName$.subscribe(otherPurposeNameData => {\r\n      if (otherPurposeNameData) {\r\n        this.otherPurposeName = otherPurposeNameData;\r\n      }\r\n    });\r\n    this.crewPassengersAndDimensionsMetaSubscription = this.portCallDetailsService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      metaData => {\r\n        this.detailsMeta = metaData;\r\n      }\r\n    );\r\n    //\r\n    // Ship Stores\r\n    //\r\n    this.shipStoresDataSubscription = this.shipStoresService.shipStoresList$.subscribe(\r\n      shipStoresData => {\r\n        if (shipStoresData) {\r\n          this.shipStoresList = shipStoresData;\r\n        }\r\n      }\r\n    );\r\n    this.shipStoresIsPristineSubscription = this.shipStoresService.dataIsPristine$.subscribe(\r\n      pristineData => {\r\n        this.shipStoresDataIsPristine = pristineData;\r\n      }\r\n    );\r\n    this.shipStoresIsCheckedSubscription = this.shipStoresService.reportingShipStoresIsChecked$.subscribe(\r\n      isCheckedData => {\r\n        this.reportingShipStoresIsChecked = isCheckedData;\r\n      }\r\n    );\r\n    //\r\n    // Cargo\r\n    //\r\n    this.cargoDataSubscription = this.cargoService.consignmentListData$.subscribe(\r\n      cargoData => {\r\n        this.cargoData = cargoData;\r\n      }\r\n    );\r\n    this.cargoIsPristineSubscription = this.cargoService.dataIsPristine$.subscribe(\r\n      pristineData => {\r\n        this.cargoDataIsPristine = pristineData;\r\n      }\r\n    );\r\n    //\r\n    // Status\r\n    //\r\n    this.portCallStatusDataSubscription = this.portCallService.portCallStatusData$.subscribe(statusData => {\r\n      if (statusData) {\r\n        if (statusData === this.STATUS_DRAFT) {\r\n          this.portCallIsDraft = true;\r\n        } else {\r\n          this.portCallIsDraft = false;\r\n        }\r\n        this.portCallStatus = statusData;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.voyagesIsPristineSubscription.unsubscribe();\r\n    this.prevPortOfCallDataSubscription.unsubscribe();\r\n    this.nextPortOfCallDataSubscription.unsubscribe();\r\n    this.prevPortOfCallEtdSubscription.unsubscribe();\r\n    this.nextPortOfCallEtaSubscription.unsubscribe();\r\n    this.detailsPristineSubscription.unsubscribe();\r\n    this.portCallIdDataSubscription.unsubscribe();\r\n    this.crewPassengersAndDimensionsDataSubscription.unsubscribe();\r\n    this.cargoDescriptionSubscription.unsubscribe();\r\n    this.reportingForThisPortCallDataSubscription.unsubscribe();\r\n    this.portCallPurposeDataSubscription.unsubscribe();\r\n    this.otherPurposeNameSubscription.unsubscribe();\r\n    this.crewPassengersAndDimensionsMetaSubscription.unsubscribe();\r\n    this.portCallStatusDataSubscription.unsubscribe();\r\n    this.shipStoresDataSubscription.unsubscribe();\r\n    this.shipStoresIsCheckedSubscription.unsubscribe();\r\n    this.shipStoresIsPristineSubscription.unsubscribe();\r\n    this.cargoDataSubscription.unsubscribe();\r\n    this.cargoIsPristineSubscription.unsubscribe();\r\n  }\r\n\r\n  savePrevAndNextPortCall() {\r\n    const prevDate = new Date(this.etdModel.date.year, this.etdModel.date.month - 1, this.etdModel.date.day, this.etdModel.time.hour, this.etdModel.time.minute);\r\n    const nextDate = new Date(this.etaModel.date.year, this.etaModel.date.month - 1, this.etaModel.date.day, this.etaModel.time.hour, this.etaModel.time.minute);\r\n    this.portCallService.savePrevAndNextPortCall(this.portCallId, this.prevLocationModel, this.nextLocationModel, prevDate, nextDate);\r\n  }\r\n\r\n  saveDetails() {\r\n    this.detailsModel.portCallDetailsId = this.portCallId;\r\n    this.detailsModel.portCallId = this.portCallId;\r\n    this.detailsModel.numberOfCrew = this.crewPassengersAndDimensionsModel.numberOfCrew;\r\n    this.detailsModel.numberOfPassengers = this.crewPassengersAndDimensionsModel.numberOfPassengers;\r\n    this.detailsModel.airDraught = this.crewPassengersAndDimensionsModel.airDraught;\r\n    this.detailsModel.actualDraught = this.crewPassengersAndDimensionsModel.actualDraught;\r\n    this.detailsModel.reportingCargo = this.reportingModel.reportingCargo;\r\n    this.detailsModel.reportingCrew = this.reportingModel.reportingCrew;\r\n    this.detailsModel.reportingDpg = this.reportingModel.reportingDpg;\r\n    this.detailsModel.reportingPax = this.reportingModel.reportingPax;\r\n    this.detailsModel.reportingShipStores = this.reportingModel.reportingShipStores;\r\n    this.portCallService.saveDetails(\r\n      this.detailsModel,\r\n      this.purposeModel,\r\n      this.otherPurposeName\r\n    );\r\n  }\r\n\r\n  saveShipStores() {\r\n    const formattedShipStoresList = this.shipStoresService.formatShipStores(this.shipStoresList);\r\n    this.shipStoresService.saveShipStores(formattedShipStoresList, this.portCallId).subscribe(\r\n      res => {\r\n        this.shipStoresService.setDataIsPristine(true);\r\n        console.log(res);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  saveCargo() {\r\n    const formattedCargoData = this.cargoService.formatConsignment(this.cargoData);\r\n    this.cargoService.saveConsignmentListForPortCall(formattedCargoData, this.portCallId).subscribe(\r\n      res => {\r\n        this.cargoService.setDataIsPristine(true);\r\n        console.log('Cargo successfully saved.\\n', res);\r\n      }, error => {\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  send() {\r\n    this.portCallService\r\n      .updatePortCallStatusAwaitingClearance(this.portCallId)\r\n      .subscribe(\r\n        updateStatusResponse => {\r\n          console.log('Status successfully updated.');\r\n          this.openConfirmationModal(\r\n            ConfirmationModalComponent.TYPE_SUCCESS,\r\n            RESULT_SUCCES\r\n          );\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(\r\n            ConfirmationModalComponent.TYPE_FAILURE,\r\n            RESULT_FAILURE\r\n          );\r\n        }\r\n      );\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goBack();\r\n        }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goBack();\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css\n// module id = ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css\n// module chunks = main","module.exports = \"<app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-activate-port-call></app-activate-port-call>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html\n// module id = ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.css']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.ts","import { ActivatePortCallComponent } from './activate-port-call/activate-port-call.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ConfirmationComponent } from './confirmation.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgModule } from '@angular/core';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    NgbModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ActivatePortCallComponent,\r\n    ConfirmationComponent,\r\n  ],\r\n  exports: [\r\n    ConfirmationComponent\r\n  ]\r\n})\r\nexport class ConfirmationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"NEW PORT CALL DRAFT\\\" icon=\\\"portcall.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-location-time></app-ship-location-time>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-port-call-draft',\r\n  templateUrl: './new-port-call-draft.component.html',\r\n  styleUrls: ['./new-port-call-draft.component.css']\r\n})\r\nexport class NewPortCallDraftComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Confirm Port Call Draft\\\" icon=\\\"checkmark.png\\\">\\r\\n  <div *ngIf=\\\"!shipFound || !locationFound || !dateTimeFound\\\" class=\\\"text-center\\\">\\r\\n    <p *ngIf=\\\"!shipFound\\\" class=\\\"no-wrap mb-0\\\">No ship selected.</p>\\r\\n    <p *ngIf=\\\"!locationFound\\\" class=\\\"no-wrap mb-0\\\">No location selected.</p>\\r\\n    <p *ngIf=\\\"!dateTimeFound\\\" class=\\\"no-wrap\\\">ETA and ETD not set.</p>\\r\\n    <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n      <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Create Port Call Draft</button>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"shipFound && locationFound && dateTimeFound\\\" class=\\\"text-center\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-bordered\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n            <th>Ship flag</th>\\r\\n            <th>Ship name</th>\\r\\n            <th>Location Name</th>\\r\\n            <th>Location Code</th>\\r\\n            <th>ETA</th>\\r\\n            <th>ETD</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <img src=\\\"assets/images/flags/128x128/{{shipModel.shipFlagCode.country.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\" />\\r\\n            </td>\\r\\n            <td>{{ shipModel.name }}</td>\\r\\n            <td>{{ locationModel.name }}</td>\\r\\n            <td>{{ locationModel.locationCode }}</td>\\r\\n            <td>{{ etaEtdModel.eta.date.year }}-{{ dateTimeFormat(etaEtdModel.eta.date.month) }}-{{ dateTimeFormat(etaEtdModel.eta.date.day)\\r\\n              }} {{ dateTimeFormat(etaEtdModel.eta.time.hour) }}:{{ dateTimeFormat(etaEtdModel.eta.time.minute) }}</td>\\r\\n            <td>{{ etaEtdModel.etd.date.year }}-{{ dateTimeFormat(etaEtdModel.etd.date.month) }}-{{ dateTimeFormat(etaEtdModel.etd.date.day)\\r\\n              }} {{ dateTimeFormat(etaEtdModel.etd.time.hour) }}:{{ dateTimeFormat(etaEtdModel.etd.time.minute) }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"startPortCallRegistration()\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Create Port Call Draft</button>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from 'app/shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { PortCallStatusTypes } from 'app/shared/constants/port-call-status-types';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { PortCallModel } from 'app/shared/models/port-call-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { EtaEtdDateTime } from 'app/shared/interfaces/eta-etd-date-time.interface';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\r\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\n\r\nconst RESULT_SUCCESS =\r\n  'The port call draft was successfully created. You will now be taken to the wizard for ' +\r\n  'registering the rest of the information and activating the port call.';\r\nconst RESULT_FAILURE =\r\n  'There was a problem when trying to create the new port call draft. Please try again later.';\r\n\r\n@Component({\r\n  selector: 'app-confirm-data',\r\n  templateUrl: './confirm-data.component.html',\r\n  styleUrls: ['./confirm-data.component.css']\r\n})\r\nexport class ConfirmDataComponent implements OnInit, OnDestroy {\r\n  shipModel: any;\r\n  locationModel: any;\r\n  etaEtdModel: EtaEtdDateTime;\r\n  portCallModel: PortCallModel = new PortCallModel();\r\n\r\n  shipFound: boolean;\r\n  locationFound: boolean;\r\n  dateTimeFound = false;\r\n\r\n  shipDataSubscription: Subscription;\r\n  locationDataSubscription: Subscription;\r\n  etaEtdDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private portCallService: PortCallService,\r\n    private portCallDetailsService: PortCallDetailsService,\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.shipDataSubscription = this.portCallService.shipData$.subscribe(shipData => {\r\n      if (shipData) {\r\n        this.shipFound = true;\r\n        this.shipModel = shipData;\r\n      } else {\r\n        this.shipFound = false;\r\n      }\r\n    });\r\n    this.locationDataSubscription = this.portCallService.locationData$.subscribe(locationData => {\r\n      if (locationData) {\r\n        this.locationFound = true;\r\n        this.locationModel = locationData;\r\n      } else {\r\n        this.locationFound = false;\r\n      }\r\n    });\r\n    this.etaEtdDataSubscription = this.portCallService.etaEtdData$.subscribe(etaEtdData => {\r\n      if (etaEtdData && etaEtdData.eta !== null && etaEtdData.etd !== null) {\r\n        this.dateTimeFound = true;\r\n        if (etaEtdData != null) {\r\n          this.etaEtdModel = {\r\n            eta: {\r\n              date: new NgbDate(etaEtdData.eta.year, etaEtdData.eta.month, etaEtdData.eta.day),\r\n              time: new NgbTime(etaEtdData.eta.hour, etaEtdData.eta.minute, 0)\r\n            },\r\n            etd: {\r\n              date: new NgbDate(etaEtdData.etd.year, etaEtdData.etd.month, etaEtdData.etd.day),\r\n              time: new NgbTime(etaEtdData.etd.hour, etaEtdData.etd.minute, 0)\r\n            }\r\n          };\r\n        }\r\n      } else {\r\n        this.dateTimeFound = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.shipDataSubscription.unsubscribe();\r\n    this.locationDataSubscription.unsubscribe();\r\n    this.etaEtdDataSubscription.unsubscribe();\r\n  }\r\n\r\n  dateTimeFormat(number: number) {\r\n    if (number <= 9) {\r\n      return '0' + number;\r\n    } else {\r\n      return number;\r\n    }\r\n  }\r\n\r\n  startPortCallRegistration() {\r\n    this.portCallModel.shipId = this.shipModel.shipId;\r\n    this.portCallModel.portCallStatusId = PortCallStatusTypes.DRAFT_ID;\r\n    this.portCallModel.locationId = this.locationModel.locationId;\r\n    const eta = new Date(\r\n      this.etaEtdModel.eta.date.year,\r\n      this.etaEtdModel.eta.date.month - 1,\r\n      this.etaEtdModel.eta.date.day,\r\n      this.etaEtdModel.eta.time.hour,\r\n      this.etaEtdModel.eta.time.minute\r\n    );\r\n    const etd = new Date(\r\n      this.etaEtdModel.etd.date.year,\r\n      this.etaEtdModel.etd.date.month - 1,\r\n      this.etaEtdModel.etd.date.day,\r\n      this.etaEtdModel.etd.time.hour,\r\n      this.etaEtdModel.etd.time.minute\r\n    );\r\n    this.portCallModel.locationEta = eta;\r\n    this.portCallModel.locationEtd = etd;\r\n    this.portCallService.registerNewPortCall(this.portCallModel).subscribe(\r\n      result => {\r\n        console.log('New port call successfully registered.');\r\n        // add list of authorities for clearance\r\n        console.log('Registering authority clearance agencies to port call...');\r\n        this.portCallService.registerClearanceAgenciesForPortCall(result);\r\n        // Set details\r\n        const portCallDetails = new PortCallDetailsModel();\r\n        portCallDetails.portCallId = result.portCallId;\r\n        this.portCallService.setPortCallIdData(result.portCallId);\r\n        this.portCallDetailsService.setDetails(portCallDetails);\r\n        this.openConfirmationModal(\r\n          ConfirmationModalComponent.TYPE_SUCCESS,\r\n          RESULT_SUCCESS\r\n        );\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(\r\n          ConfirmationModalComponent.TYPE_FAILURE,\r\n          RESULT_FAILURE\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goToPortCallWizard();\r\n        }\r\n      },\r\n      reason => {\r\n        if (modalType !== ConfirmationModalComponent.TYPE_FAILURE) {\r\n          this.goToPortCallWizard();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  private goToPortCallWizard() {\r\n    this.contentService.setPortCallForm('Port Call Details');\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_PORT_CALL);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Select Arrival and Departure Time\\\" icon=\\\"time.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <app-date-time-picker header=\\\"ETA\\\" (dateTimeResult)=\\\"onEtaResult($event)\\\"></app-date-time-picker>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-lg-6\\\">\\r\\n      <app-date-time-picker header=\\\"ETD\\\" (dateTimeResult)=\\\"onEtdResult($event)\\\"></app-date-time-picker>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n  \\r\\n  <div class=\\\"row\\\" *ngIf=\\\"dateSequenceError\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8 alert alert-danger\\\" role=\\\"alert\\\">\\r\\n      <span>Departure date can not be before arrival date.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"timeSequenceError\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8 alert alert-danger\\\" role=\\\"alert\\\">\\r\\n      <span>Departure time must be after arrival time.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\r\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\r\nimport { EtaEtdDateTime } from 'app/shared/interfaces/eta-etd-date-time.interface';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-eta-etd',\r\n  templateUrl: './eta-etd.component.html',\r\n  styleUrls: ['./eta-etd.component.css']\r\n})\r\nexport class EtaEtdComponent implements OnInit, OnDestroy {\r\n\r\n  etaEtdModel: EtaEtdDateTime = {\r\n    eta: null,\r\n    etd: null\r\n  };\r\n\r\n  dateSequenceError = false;\r\n  timeSequenceError = false;\r\n\r\n  etaEtdDataSubscription: Subscription;\r\n\r\n  constructor(private portCallService: PortCallService) {}\r\n\r\n  ngOnInit() {\r\n    this.etaEtdDataSubscription = this.portCallService.etaEtdData$.subscribe(etaEtdData => {\r\n      if (etaEtdData != null) {\r\n        this.etaEtdModel = {\r\n          eta: {\r\n            date: new NgbDate(etaEtdData.eta.year, etaEtdData.eta.month, etaEtdData.eta.day),\r\n            time: new NgbTime(etaEtdData.eta.hour, etaEtdData.eta.minute, 0)\r\n          },\r\n          etd: {\r\n            date: new NgbDate(etaEtdData.etd.year, etaEtdData.etd.month, etaEtdData.etd.day),\r\n            time: new NgbTime(etaEtdData.etd.hour, etaEtdData.etd.minute, 0)\r\n          }\r\n        };\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.etaEtdDataSubscription.unsubscribe();\r\n  }\r\n\r\n  onEtaResult(etaResult) {\r\n    this.etaEtdModel.eta = etaResult;\r\n    this.validateData();\r\n  }\r\n\r\n  onEtdResult(etdResult) {\r\n    this.etaEtdModel.etd = etdResult;\r\n    this.validateData();\r\n  }\r\n\r\n  private validateData() {\r\n    if (this.etaEtdModel.eta && this.etaEtdModel.etd) {\r\n      const etaDate = new NgbDate(this.etaEtdModel.eta.date.year, this.etaEtdModel.eta.date.month, this.etaEtdModel.eta.date.day);\r\n      const etdDate = new NgbDate(this.etaEtdModel.etd.date.year, this.etaEtdModel.etd.date.month, this.etaEtdModel.etd.date.day);\r\n\r\n      this.dateSequenceError = etdDate.before(etaDate);\r\n\r\n      if (etdDate.equals(etaDate)) {\r\n        this.timeSequenceError = this.etaEtdModel.eta.time.hour > this.etaEtdModel.etd.time.hour\r\n          || (this.etaEtdModel.eta.time.hour === this.etaEtdModel.etd.time.hour\r\n          && this.etaEtdModel.eta.time.minute >= this.etaEtdModel.etd.time.minute);\r\n      } else {\r\n        this.timeSequenceError = false;\r\n      }\r\n    } else {\r\n      this.dateSequenceError = false;\r\n      this.timeSequenceError = false;\r\n    }\r\n    this.persistData();\r\n  }\r\n\r\n  private persistData() {\r\n\r\n    if (!this.dateSequenceError && !this.timeSequenceError && this.etaEtdModel && this.etaEtdModel.eta && this.etaEtdModel.etd) {\r\n      const etaEtdData = {\r\n        eta: Object.assign(this.etaEtdModel.eta.date, this.etaEtdModel.eta.time),\r\n        etd: Object.assign(this.etaEtdModel.etd.date, this.etaEtdModel.etd.time)\r\n      };\r\n\r\n      // const formattedDate = this.portCallService.etaEtdDataFormat()\r\n      this.portCallService.setEtaEtdData(etaEtdData);\r\n    } else {\r\n      this.portCallService.setEtaEtdData(null);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Select Location\\\" icon=\\\"location.png\\\">\\r\\n\\r\\n    <div *ngIf=\\\"!locationFound\\\" class=\\\"text-center\\\">\\r\\n        <app-search-location [restrictTypeHarbour]=true [showDropdown]=true (locationResult)=\\\"onLocationResult($event)\\\"></app-search-location>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"locationFound\\\" class=\\\"text-center\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <app-ssn-table [entryData]=\\\"locationProperties\\\"></app-ssn-table>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectLocation()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n    </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LocationProperties } from 'app/shared/constants/location-properties';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\n\r\n@Component({\r\n    selector: 'app-find-location',\r\n    templateUrl: './find-location.component.html',\r\n    styleUrls: ['./find-location.component.css']\r\n})\r\nexport class FindLocationComponent implements OnInit {\r\n\r\n    locationFound = false;\r\n\r\n    locationFlag: string;\r\n    locationProperties = new LocationProperties().getPropertyList();\r\n\r\n    constructor(private portCallService: PortCallService) { }\r\n\r\n    ngOnInit() { }\r\n\r\n    onLocationResult(locationResult) {\r\n        if (locationResult) {\r\n            this.locationFound = true;\r\n            this.portCallService.setLocationData(locationResult);\r\n            LocationProperties.setLocationData(this.locationProperties, locationResult);\r\n            const twoCharCode = locationResult.country.twoCharCode.toLowerCase() || 'xx';\r\n            const countryFlag = twoCharCode + '.png';\r\n            LocationProperties.setCountry(this.locationProperties, locationResult.country.name, countryFlag);\r\n        } else {\r\n            this.locationFound = false;\r\n            this.portCallService.setLocationData(null);\r\n        }\r\n    }\r\n\r\n    deselectLocation() {\r\n        this.locationFound = false;\r\n        this.portCallService.setLocationData(null);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Select Ship\\\" icon=\\\"ship.png\\\">\\r\\n\\r\\n  <div *ngIf=\\\"!shipFound\\\">\\r\\n    <app-search-ship (shipResult)=\\\"onShipResult($event)\\\"></app-search-ship>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"shipFound\\\" class=\\\"text-center\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <app-ssn-table [entryData]=shipProperties></app-ssn-table>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShip()\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ShipProperties } from 'app/shared/constants/ship-properties';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-find-ship',\r\n  templateUrl: './find-ship.component.html',\r\n  styleUrls: ['./find-ship.component.css']\r\n})\r\nexport class FindShipComponent implements OnInit {\r\n\r\n  shipFound = false;\r\n  shipProperties = new ShipProperties().getPropertyList();\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() { }\r\n\r\n\r\n  onShipResult(shipResult) {\r\n    if (shipResult) {\r\n      const twoCharCode = shipResult.shipFlagCode.country.twoCharCode.toLowerCase() || 'xx';\r\n      const countryFlag = twoCharCode + '.png';\r\n      ShipProperties.setCountry(this.shipProperties, null, countryFlag);\r\n      ShipProperties.setShipName(this.shipProperties, shipResult.name);\r\n      ShipProperties.setCallSign(this.shipProperties, shipResult.callSign);\r\n      ShipProperties.setImoNo(this.shipProperties, shipResult.imoNo);\r\n      ShipProperties.setMmsiNo(this.shipProperties, shipResult.mmsiNo);\r\n      ShipProperties.setGrossTonnage(this.shipProperties, shipResult.grossTonnage);\r\n      ShipProperties.setNetTonnage(this.shipProperties, shipResult.netTonnage);\r\n      ShipProperties.setLength(this.shipProperties, shipResult.length);\r\n      ShipProperties.setShipType(this.shipProperties, shipResult.shipType.name);\r\n      ShipProperties.setShipStatus(this.shipProperties, shipResult.shipStatus.name);\r\n\r\n      this.shipFound = true;\r\n      this.portCallService.setShipData(shipResult);\r\n    } else {\r\n      this.shipFound = false;\r\n      this.portCallService.setShipData(null);\r\n    }\r\n  }\r\n\r\n  deselectShip() {\r\n    this.shipFound = false;\r\n    this.portCallService.setShipData(null);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-find-ship></app-find-ship>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-find-location></app-find-location>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-eta-etd></app-eta-etd>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-confirm-data></app-confirm-data>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ship-location-time',\r\n  templateUrl: './ship-location-time.component.html',\r\n  styleUrls: ['./ship-location-time.component.css']\r\n})\r\nexport class ShipLocationTimeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"View port call information\\\" *ngIf=\\\"permissions.view\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onViewClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/eye.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.edit\\\">\\r\\n      <div ngbTooltip=\\\"You cannot edit a {{rowData.overviewModel.status}} port call\\\" *ngIf=\\\"portCallIsCancelled || portCallIsCompleted\\\">\\r\\n        <button class=\\\"btn btn-sm btn-ssn\\\" disabled>\\r\\n          <div class=\\\"mx-auto\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n          </div>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Edit port call\\\" (click)=\\\"openModal(editModal)\\\" *ngIf=\\\"portCallIsAwaitingClearance || portCallIsCleared\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Edit port call\\\" (click)=\\\"onEditClick()\\\" *ngIf=\\\"portCallIsDraft\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.edit && !portCallIsDraft\\\">\\r\\n      <div ngbTooltip=\\\"{{ portCallIsCancelled ? 'You cannot set actual times for Cancelled port calls' : 'All clearances must be cleared before you can set actual times'}}\\\" *ngIf=\\\"portCallIsCancelled || portCallIsAwaitingClearance\\\">\\r\\n        <button class=\\\"btn btn-sm btn-ssn\\\" disabled>\\r\\n          <div class=\\\"mx-auto\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/time.png\\\" height=\\\"20px\\\" />\\r\\n          </div>\\r\\n        </button>\\r\\n      </div>\\r\\n      <app-set-actual-time [portCallModel]=\\\"rowData.overviewModel.portCall\\\" (portCallModelChange)=\\\"onPortCallModelChange($event)\\\" *ngIf=\\\"portCallIsCleared || portCallIsCompleted\\\"></app-set-actual-time>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.clearance\\\">\\r\\n      <div ngbTooltip=\\\"You cannot clear a {{rowData.overviewModel.status}} port call\\\" *ngIf=\\\"portCallIsCancelled || portCallIsCompleted\\\">\\r\\n        <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"portCallIsCancelled || portCallIsCompleted\\\" disabled>\\r\\n          <div class=\\\"mx-auto\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/stamp.png\\\" height=\\\"16px\\\" />\\r\\n          </div>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Review port call clearance\\\" (click)=\\\"onClearanceClick()\\\" *ngIf=\\\"!portCallIsCancelled && !portCallIsCompleted\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/stamp.png\\\" height=\\\"16px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.cancel && !portCallIsDraft\\\">\\r\\n      <div ngbTooltip=\\\"{{ portCallIsCancelled ? 'Port Call is already Cancelled' : 'You cannot cancel a Completed port call'}}\\\" *ngIf=\\\"portCallIsCancelled || portCallIsCompleted\\\">\\r\\n        <button class=\\\"btn btn-sm btn-ssn\\\" disabled>\\r\\n          <div class=\\\"mx-auto\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\" />\\r\\n          </div>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Cancel port call\\\" (click)=\\\"openModal(cancelModal)\\\" *ngIf=\\\"portCallIsAwaitingClearance || portCallIsCleared\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"16px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.delete && portCallIsDraft\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete port call\\\" (click)=\\\"openModal(deleteModal)\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/trash.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #editModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">WARNING</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      <span>To edit this port call, you must revert it back to a draft.</span>\\r\\n      <br>\\r\\n      <span>Any active clearances for the port call will be reset.</span>\\r\\n      <br>\\r\\n      <span>The port call must be reactivated to receive new clearances.</span>\\r\\n      <br>\\r\\n      <br>\\r\\n      <span>Are you sure you wish to edit this port call?</span>\\r\\n      <br>\\r\\n      <span>This action cannot be undone.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"editAwaitingClearancePortCall(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/warning.png\\\" height=\\\"20px\\\">\\r\\n      <span>Reset Clearance & Edit Port Call as Draft</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #cancelModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Cancel Port Call</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      <span>Are you sure you wish to cancel this port call?</span>\\r\\n      <br>\\r\\n      <span>This action cannot be undone.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"cancelPortCall(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"20px\\\">\\r\\n      <span>Cancel Port Call</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #deleteModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Delete Port Call</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      <span>Are you sure you wish to delete this port call?</span>\\r\\n      <br>\\r\\n      <span>This action cannot be undone.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"deletePortCall(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"20px\\\">\\r\\n      <span>Delete Port Call</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\r\nimport { PortCallStatusTypes } from 'app/shared/constants/port-call-status-types';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallOverviewService } from 'app/shared/services/port-call-overview.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { PrevAndNextPocService } from 'app/shared/services/prev-and-next-poc.service';\r\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\r\nimport { PortCallModel } from 'app/shared/models/port-call-model';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\r\n\r\n@Component({\r\n  selector: 'app-button-row',\r\n  templateUrl: './button-row.component.html',\r\n  styleUrls: ['./button-row.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class ButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  overviewData: any[];\r\n  draftOverviewData: any[];\r\n  clearedOverviewData: any[];\r\n\r\n  permissions = PortCallClaims.buttonRowPermissions;\r\n  portCallIsDraft = false;\r\n  portCallIsCancelled = false;\r\n  portCallIsAwaitingClearance = false;\r\n  portCallIsCleared = false;\r\n  portCallIsCompleted = false;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private overviewService: PortCallOverviewService,\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private portCallDetailsService: PortCallDetailsService,\r\n    private prevAndNextService: PrevAndNextPocService,\r\n    private cargoService: FalCargoService,\r\n    private shipStoresService: FalShipStoresService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallIsDraft = (this.rowData.overviewModel.status === PortCallStatusTypes.DRAFT);\r\n    this.portCallIsCancelled = (this.rowData.overviewModel.status === PortCallStatusTypes.CANCELLED);\r\n    this.portCallIsAwaitingClearance = (this.rowData.overviewModel.status === PortCallStatusTypes.AWAITING_CLEARANCE);\r\n    this.portCallIsCleared = (this.rowData.overviewModel.status === PortCallStatusTypes.CLEARED);\r\n    this.portCallIsCompleted = (this.rowData.overviewModel.status === PortCallStatusTypes.COMPLETED);\r\n    this.accountService.userClaimsData$.subscribe(\r\n      userClaims => {\r\n        if (userClaims) {\r\n          // Find user claims where claim type is Port Call\r\n          const userClaimsTypePortCall = userClaims.filter(claim => claim.type === PortCallClaims.TYPE);\r\n          const keys = Object.keys(this.permissions);\r\n          keys.forEach(key => {\r\n            this.permissions[key] = (userClaimsTypePortCall.some(claim => claim.value.toUpperCase() === key.toString().toUpperCase()));\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    this.overviewService.overviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.overviewData = results;\r\n        }\r\n      }\r\n    );\r\n    this.overviewService.draftOverviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.draftOverviewData = results;\r\n        }\r\n      }\r\n    );\r\n    this.overviewService.clearedByUserAgencyOverviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.clearedOverviewData = results;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onViewClick() {\r\n    this.setContent(CONTENT_NAMES.VIEW_PORT_CALL);\r\n  }\r\n\r\n  onEditClick() {\r\n    this.contentService.setPortCallForm(CONTENT_NAMES.VOYAGES);\r\n    this.setContent(CONTENT_NAMES.REGISTER_PORT_CALL);\r\n  }\r\n\r\n  onClearanceClick() {\r\n    this.setContent(CONTENT_NAMES.PORT_CALL_CLEARANCE);\r\n  }\r\n\r\n  openModal(content: any) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  onPortCallModelChange(portCallModel: PortCallModel) {\r\n    console.log(portCallModel);\r\n    const pcId = this.rowData.overviewModel.portCall.portCallId;\r\n    this.rowData.overviewModel.status = portCallModel.portCallStatus.name;\r\n    this.portCallIsCleared = (this.rowData.overviewModel.status === PortCallStatusTypes.CLEARED);\r\n    this.portCallIsCompleted = (this.rowData.overviewModel.status === PortCallStatusTypes.COMPLETED);\r\n    this.overviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = portCallModel.portCallStatus.name;\r\n    this.overviewService.setOverviewData(this.overviewData);\r\n  }\r\n\r\n  onCompletePortCall() {\r\n    const pcId = this.rowData.overviewModel.portCall.portCallId;\r\n    this.rowData.overviewModel.status = PortCallStatusTypes.COMPLETED;\r\n    this.portCallIsCleared = false;\r\n    this.portCallIsCompleted = true;\r\n    this.overviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = PortCallStatusTypes.COMPLETED;\r\n    this.overviewService.setOverviewData(this.overviewData);\r\n  }\r\n\r\n  onUncompletePortCall() {\r\n    const pcId = this.rowData.overviewModel.portCall.portCallId;\r\n    this.rowData.overviewModel.status = PortCallStatusTypes.CLEARED;\r\n    this.portCallIsCleared = true;\r\n    this.portCallIsCompleted = false;\r\n    this.overviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = PortCallStatusTypes.CLEARED;\r\n    this.overviewService.setOverviewData(this.overviewData);\r\n  }\r\n\r\n  cancelPortCall() {\r\n    const pcId = this.rowData.overviewModel.portCall.portCallId;\r\n    this.rowData.overviewModel.status = PortCallStatusTypes.CANCELLED;\r\n    const htmlStatus = `<div class=\"text-danger\">` + this.rowData.overviewModel.status + `</div>`;\r\n    if (this.overviewData.find(r => r.overviewModel.portCall.portCallId === pcId)) {\r\n      this.overviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = htmlStatus;\r\n      this.overviewService.setOverviewData(this.overviewData);\r\n    }\r\n    if (this.draftOverviewData.find(r => r.overviewModel.portCall.portCallId === pcId)) {\r\n      this.draftOverviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = htmlStatus;\r\n      this.overviewService.setDraftData(this.draftOverviewData);\r\n    }\r\n    if (this.clearedOverviewData.find(r => r.overviewModel.portCall.portCallId === pcId)) {\r\n      this.clearedOverviewData.find(r => r.overviewModel.portCall.portCallId === pcId).status = htmlStatus;\r\n      this.overviewService.setClearedData(this.clearedOverviewData);\r\n    }\r\n    this.portCallService.updatePortCallStatusCancelled(this.rowData.overviewModel.portCall.portCallId);\r\n\r\n  }\r\n\r\n  deletePortCall() {\r\n    this.portCallService.deletePortCallDraft(this.rowData.overviewModel.portCall).subscribe(\r\n      deleteResponse => {\r\n        if (deleteResponse) {\r\n          const newOverviewData = this.overviewData.filter(row => row !== this.rowData);\r\n          const newDraftData = this.draftOverviewData.filter(row => row !== this.rowData);\r\n          const newClearedData = this.clearedOverviewData.filter(row => row !== this.rowData);\r\n          this.overviewService.setOverviewData(newOverviewData);\r\n          this.overviewService.setDraftData(newDraftData);\r\n          this.overviewService.setClearedData(newClearedData);\r\n          console.log(deleteResponse);\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  editAwaitingClearancePortCall() {\r\n    this.portCallService.updatePortCallStatusDraft(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      draftResponse => {\r\n        if (draftResponse) {\r\n          const newAwaitingClearanceData = this.overviewData.filter(row => row !== this.rowData);\r\n          const newClearedData = this.clearedOverviewData.filter(row => row !== this.rowData);\r\n          const newDraftData = this.draftOverviewData.filter(row => row !== this.rowData);\r\n          this.rowData.overviewModel.status = PortCallStatusTypes.DRAFT;\r\n          newDraftData.push(this.rowData);\r\n          this.overviewService.setOverviewData(newAwaitingClearanceData);\r\n          this.overviewService.setClearedData(newClearedData);\r\n          this.overviewService.setDraftData(newDraftData);\r\n          this.onEditClick();\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  private setContent(content: string) {\r\n    this.setPortCall(content);\r\n  }\r\n\r\n  setPortCall(content) {\r\n    this.overviewService.setLoadingPortCall(true);\r\n    this.contentService.setLoadingScreen(true, 'portcall.gif', 'Loading');\r\n    this.overviewService.getOverview(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      data => {\r\n        if (data) {\r\n          console.log(data);\r\n          this.portCallService.setPortCall(data);\r\n          this.prevAndNextService.setPrevPortOfCall(data.portCall.previousLocation);\r\n          this.prevAndNextService.setPrevPortOfCallEtd(data.portCall.previousLocationEtd);\r\n          this.prevAndNextService.setNextPortOfCall(data.portCall.nextLocation);\r\n          this.prevAndNextService.setNextPortOfCallEta(data.portCall.nextLocationEta);\r\n          this.prevAndNextService.setDataPristine(true);\r\n          this.cargoService.setDataIsPristine(true);\r\n          this.shipStoresService.setShipStoresList(data.portCall.falShipStores);\r\n          this.shipStoresService.setDataIsPristine(true);\r\n          this.setPurpose(content);\r\n        }\r\n      }\r\n    );\r\n  }\r\n  setPurpose(content) {\r\n    this.portCallDetailsService.getPurposeByPortCallId(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      purposeData => {\r\n        if (purposeData) {\r\n          if (purposeData.find(p => p.name === 'Other')) {\r\n            this.portCallDetailsService.getOtherName(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n              otherNameData => {\r\n                this.portCallDetailsService.setOtherPurposeName(otherNameData);\r\n                this.portCallDetailsService.setPortCallPurposeData(purposeData);\r\n                this.setDetails(content);\r\n              }\r\n            );\r\n          } else {\r\n            this.portCallDetailsService.setPortCallPurposeData(purposeData);\r\n            this.setDetails(content);\r\n          }\r\n        } else {\r\n          console.log('No purpose information has been registered for this port call.');\r\n        }\r\n      },\r\n      error => {\r\n        console.log('Get Purpose Error: ', error);\r\n      }\r\n    );\r\n  }\r\n  setDetails(content) {\r\n    this.portCallDetailsService.getDetailsByPortCallId(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      detailsData => {\r\n        if (detailsData) {\r\n          this.portCallDetailsService.setDetails(detailsData);\r\n        } else {\r\n          console.log('No details information has been registered for this port call.');\r\n          const portCallDetails = new PortCallDetailsModel();\r\n          portCallDetails.portCallDetailsId = this.rowData.overviewModel.portCall.portCallId;\r\n          portCallDetails.portCallId = this.rowData.overviewModel.portCall.portCallId;\r\n          this.portCallDetailsService.setDetails(portCallDetails);\r\n        }\r\n        this.contentService.setContent(content);\r\n\r\n      },\r\n      error => {\r\n        console.log('Get Details Error: ', error);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"no-wrap\\\">\\r\\n  <span *ngFor=\\\"let clearance of clearanceList\\\">\\r\\n    <span class=\\\"badge badge-warning\\\" ngbTooltip=\\\"{{ clearance.organization.name }}: {{ clearance.organization.clearanceIsNullString }}\\\"\\r\\n      *ngIf=\\\"clearance.cleared === null\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/stamp.png\\\" height=\\\"16px\\\">\\r\\n    </span>\\r\\n    <span class=\\\"badge badge-success\\\" ngbTooltip=\\\"{{ clearance.organization.name }}: {{ clearance.organization.clearanceIsTrueString }}\\\"\\r\\n      *ngIf=\\\"clearance.cleared === true\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/checkmark.png\\\" height=\\\"16px\\\">\\r\\n    </span>\\r\\n    <span class=\\\"badge badge-danger\\\" ngbTooltip=\\\"{{ clearance.organization.name }}: {{ clearance.organization.clearanceIsFalseString }}\\\"\\r\\n      *ngIf=\\\"clearance.cleared === false\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/rejected.png\\\" height=\\\"16px\\\">\\r\\n    </span>\\r\\n  </span>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\n\r\n@Component({\r\n  selector: 'app-clearance-row',\r\n  templateUrl: './clearance-row.component.html',\r\n  styleUrls: ['./clearance-row.component.css']\r\n})\r\nexport class ClearanceRowComponent implements OnInit, ViewCell {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  clearanceList: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    this.clearanceList = this.rowData.overviewModel.clearanceList;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/clearance-row/clearance-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/overview.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/overview.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\r\\n        <app-ssn-card header=\\\"Options\\\" icon=\\\"cogs.png\\\" collapsible=\\\"true\\\" collapsed=\\\"true\\\">\\r\\n            <div>\\r\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"!showCancelledPortCalls\\\" (click)=\\\"toggleCancelledPortCalls(true)\\\">Show cancelled port calls</button>\\r\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"showCancelledPortCalls\\\" (click)=\\\"toggleCancelledPortCalls(false)\\\">Hide cancelled port calls</button>\\r\\n            </div>\\r\\n            <div>\\r\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"!showCompletedPortCalls\\\" (click)=\\\"toggleCompletedPortCalls(true)\\\">Show completed port calls</button>\\r\\n                <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"showCompletedPortCalls\\\" (click)=\\\"toggleCompletedPortCalls(false)\\\">Hide completed port calls</button>\\r\\n            </div>\\r\\n        </app-ssn-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th class=\\\"py-1\\\">\\r\\n                    <h5 class=\\\"mb-0\\\">Port Calls</h5>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"overviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\" *ngIf=\\\"permissions.edit\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th class=\\\"py-1\\\">\\r\\n                    <h5 class=\\\"mb-0\\\">Port Call Drafts</h5>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <ng2-smart-table [settings]=\\\"draftTableSettings\\\" [source]=\\\"draftOverviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\" *ngIf=\\\"userIsGovernmentAgency\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th class=\\\"py-1\\\">\\r\\n                    <h5 class=\\\"mb-0\\\">Cleared Port Calls</h5>\\r\\n                </th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"clearedByUserAgencyOverviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/overview.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/overview.component.html\n// module chunks = main","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { OrganizationTypes } from 'app/shared/constants/organization-types';\r\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\r\nimport { PortCallStatusTypes } from 'app/shared/constants/port-call-status-types';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\nimport { PortCallOverviewService } from 'app/shared/services/port-call-overview.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ButtonRowComponent } from './button-row/button-row.component';\r\nimport { ClearanceRowComponent } from './clearance-row/clearance-row.component';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.css'],\r\n  providers: [PortCallOverviewService, OrganizationService, DatePipe]\r\n})\r\nexport class OverviewComponent implements OnInit, OnDestroy {\r\n  permissions = PortCallClaims.portCallPermissions;\r\n  overviewList = [];\r\n  draftOverviewList = [];\r\n  cancelledOverviewList = [];\r\n  completedOverviewList = [];\r\n  clearedByUserAgencyOverviewList = [];\r\n  userOrganization: any;\r\n  userIsGovernmentAgency = false;\r\n  overviewSource: LocalDataSource = new LocalDataSource();\r\n  draftOverviewSource: LocalDataSource = new LocalDataSource();\r\n  clearedByUserAgencyOverviewSource: LocalDataSource = new LocalDataSource();\r\n\r\n  showCancelledPortCalls = false;\r\n  showCompletedPortCalls = false;\r\n\r\n  // Smart table\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no port calls in this list.',\r\n\r\n    columns: {\r\n      shipName: {\r\n        title: 'Ship Name',\r\n        type: 'html'\r\n      },\r\n      callSign: {\r\n        title: 'Call Sign',\r\n        type: 'html'\r\n      },\r\n      locationName: {\r\n        title: 'Location Name',\r\n        type: 'html'\r\n      },\r\n      eta: {\r\n        title: 'ETA',\r\n        type: 'html'\r\n      },\r\n      etd: {\r\n        title: 'ETD',\r\n        type: 'html'\r\n      },\r\n      status: {\r\n        title: 'Status',\r\n        type: 'html'\r\n      },\r\n      clearances: {\r\n        title: 'Clearances',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: ClearanceRowComponent\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: ButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  draftTableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no port calls in this list.',\r\n\r\n    columns: {\r\n      shipName: {\r\n        title: 'Ship Name',\r\n        type: 'html'\r\n      },\r\n      callSign: {\r\n        title: 'Call Sign',\r\n        type: 'html'\r\n      },\r\n      locationName: {\r\n        title: 'Location Name',\r\n        type: 'html'\r\n      },\r\n      eta: {\r\n        title: 'ETA',\r\n        type: 'html'\r\n      },\r\n      etd: {\r\n        title: 'ETD',\r\n        type: 'html'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: ButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  userClaimsDataSubscription: Subscription;\r\n  getOrganizationForUserSubscription: Subscription;\r\n\r\n  constructor(\r\n    private datePipe: DatePipe,\r\n    private accountService: AccountService,\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private overviewService: PortCallOverviewService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.userClaimsDataSubscription = this.accountService.userClaimsData$.subscribe(userClaims => {\r\n      if (userClaims) {\r\n        const userClaimsTypePortCall = userClaims.filter(claim => claim.type === PortCallClaims.TYPE);\r\n        // Find user claims where claim type is Port Call\r\n        const keys = Object.keys(this.permissions);\r\n        keys.forEach(key => {\r\n          this.permissions[key] = userClaimsTypePortCall.some(\r\n            claim => claim.value.toUpperCase() === key.toString().toUpperCase()\r\n          );\r\n        });\r\n      }\r\n    });\r\n    this.getOrganizationForUserSubscription = this.organizationService.getOrganizationForUser().subscribe(organizationResult => {\r\n      if (organizationResult) {\r\n        this.userIsGovernmentAgency =\r\n          organizationResult.organizationType &&\r\n          organizationResult.organizationType.name ===\r\n          OrganizationTypes.GOVERNMENT_AGENCY_STRING;\r\n        if (this.userIsGovernmentAgency) {\r\n          this.portCallService.setClearance(organizationResult);\r\n        }\r\n      }\r\n      this.userOrganization = organizationResult;\r\n      this.loadOverview();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userClaimsDataSubscription.unsubscribe();\r\n    this.getOrganizationForUserSubscription.unsubscribe();\r\n  }\r\n\r\n  overviewRow(ov) {\r\n    const row = {\r\n      overviewModel: ov,\r\n      shipName:\r\n        `<div class=\"no-wrap\"><div hidden>` +\r\n        ov.ship.name + // ugly fix for alphabetical sorting but it works\r\n        `</div> <div> <img src='assets/images/flags/128x128/` +\r\n        ov.ship.shipFlagCode.country.twoCharCode.toLowerCase() +\r\n        `.png' height='20px'/> ` +\r\n        ov.ship.name +\r\n        `</div></div>`,\r\n      callSign:\r\n        ov.ship.callSign ||\r\n        `<span class=\"font-italic no-wrap\">Not provided.</span>`,\r\n      locationName:\r\n        `<div hidden>` +\r\n        ov.location.name + // same ugly fix as ship name\r\n        `</div> <div> <img src='assets/images/flags/128x128/` +\r\n        ov.location.country.twoCharCode.toLowerCase() +\r\n        `.png' height='20px'/> ` +\r\n        ov.location.name +\r\n        `</div>`,\r\n      eta:\r\n        `<span class=\"no-wrap\">` +\r\n        this.datePipe.transform(ov.portCall.locationEta, 'yyyy-MM-dd') +\r\n        `</span> <span class=\"no-wrap\">` +\r\n        this.datePipe.transform(ov.portCall.locationEta, 'HH:mm') +\r\n        `</span>`,\r\n      etd:\r\n        `<span class=\"no-wrap\">` +\r\n        this.datePipe.transform(ov.portCall.locationEtd, 'yyyy-MM-dd') +\r\n        `</span> <span class=\"no-wrap\">` +\r\n        this.datePipe.transform(ov.portCall.locationEtd, 'HH:mm') +\r\n        `</span>`,\r\n      status:\r\n        ov.status === PortCallStatusTypes.CANCELLED\r\n          ? `<div class=\"text-danger\">` + ov.status + `</div>`\r\n          : `<div class=\"no-wrap\">` + ov.status + `</div>`,\r\n      clearances:\r\n        'clearances',\r\n      actions: 'btn'\r\n    };\r\n    return row;\r\n  }\r\n\r\n  loadOverview() {\r\n    this.overviewService.showCancelledPortCalls$.subscribe(showCancelledPortCalls => {\r\n      this.showCancelledPortCalls = showCancelledPortCalls;\r\n      this.rerenderList();\r\n    });\r\n    this.overviewService.showCompletedPortCalls$.subscribe(showCompletedPortCalls => {\r\n      this.showCompletedPortCalls = showCompletedPortCalls;\r\n      this.rerenderList();\r\n    });\r\n    this.overviewService.overviewData$.subscribe(results => {\r\n      if (results) {\r\n        this.overviewSource.load(results);\r\n      }\r\n    });\r\n    if (!this.userIsGovernmentAgency) {\r\n      this.overviewService.draftOverviewData$.subscribe(results => {\r\n        if (results) {\r\n          this.draftOverviewSource.load(results);\r\n        }\r\n      });\r\n    } else {\r\n      this.overviewService.clearedByUserAgencyOverviewData$.subscribe(results => {\r\n        if (results) {\r\n          this.clearedByUserAgencyOverviewSource.load(results);\r\n        }\r\n      });\r\n    }\r\n\r\n    this.overviewService.getPortCalls().subscribe(\r\n      pcData => {\r\n        if (pcData) {\r\n          this.contentService.setLoadingScreen(true, 'portcall.gif', 'LOADING PORT CALLS');\r\n          if (pcData.length === 0) {\r\n            this.contentService.setLoadingScreen(false, null, null);\r\n          } else {\r\n            let index = 0;\r\n            const finalIndex = pcData.length - 1;\r\n            pcData.forEach(pc => {\r\n              this.overviewService.getPartialOverview(pc.portCallId).subscribe(\r\n                ov => {\r\n                  if (ov) {\r\n                    const row = this.overviewRow(ov);\r\n                    // Case: port call is incomplete (status: draft)\r\n                    if (ov.status === PortCallStatusTypes.DRAFT) {\r\n                      this.draftOverviewList.push(row);\r\n                    } else if (\r\n                      this.userIsGovernmentAgency &&\r\n                      ov.clearanceList &&\r\n                      ov.clearanceList.some(\r\n                        clearance => clearance.organizationId === this.userOrganization.organizationId && clearance.cleared != null\r\n                      )\r\n                    ) {\r\n                      this.clearedByUserAgencyOverviewList.push(row);\r\n                    } else if (ov.status === PortCallStatusTypes.CANCELLED) {\r\n                      this.cancelledOverviewList.push(row);\r\n                    } else if (ov.status === PortCallStatusTypes.COMPLETED) {\r\n                      this.completedOverviewList.push(row);\r\n                    } else {\r\n                      this.overviewList.push(row);\r\n                    }\r\n                    this.overviewService.setOverviewData(this.overviewList.sort(\r\n                      (row1, row2) => row2.overviewModel.portCall.portCallId - row1.overviewModel.portCall.portCallId\r\n                    ));\r\n                    this.overviewService.setDraftData(this.draftOverviewList);\r\n                    this.overviewService.setClearedData(this.clearedByUserAgencyOverviewList);\r\n                  }\r\n                },\r\n                error => console.log(error),\r\n                () => {\r\n                  if (index++ >= finalIndex) {\r\n                    this.contentService.setLoadingScreen(false, null, null);\r\n                  }\r\n                }\r\n              );\r\n            });\r\n          }\r\n        }\r\n      },\r\n      error => console.log(error)\r\n    );\r\n  }\r\n\r\n  private rerenderList() {\r\n    let portCallList = this.overviewList;\r\n    if (this.showCancelledPortCalls) {\r\n      portCallList = portCallList.concat(this.cancelledOverviewList);\r\n    }\r\n    if (this.showCompletedPortCalls) {\r\n      portCallList = portCallList.concat(this.completedOverviewList);\r\n    }\r\n    this.overviewService.setOverviewData(portCallList.sort(\r\n      (row1, row2) => row2.overviewModel.portCall.portCallId - row1.overviewModel.portCall.portCallId\r\n    ));\r\n  }\r\n\r\n  toggleCancelledPortCalls(showCancelled) {\r\n    this.overviewService.setShowCancelledPortCalls(showCancelled);\r\n  }\r\n\r\n  toggleCompletedPortCalls(showCompleted) {\r\n    this.overviewService.setShowCompletedPortCalls(showCompleted);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/overview.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.css\n// module chunks = main","module.exports = \"<button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Set actual time of arrival and departure\\\" (click)=\\\"openModal(actualTimeModal)\\\">\\r\\n  <div class=\\\"mx-auto\\\">\\r\\n    <img src=\\\"assets/images/icons/128x128/white/time.png\\\" height=\\\"20px\\\" />\\r\\n  </div>\\r\\n</button>\\r\\n\\r\\n<ng-template #actualTimeModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Set actual time of arrival and departure</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <app-date-time-picker [header]=\\\"'ATA'\\\" [dateTimeModel]=\\\"portCallAta\\\" (dateTimeResult)=\\\"onAtaResult($event)\\\" (dateFormatError)=\\\"onAtaDateFormatError($event)\\\"></app-date-time-picker>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"ataAfterTodayError\\\">Actual arrival time cannot be set to the future.</div>\\r\\n    <app-date-time-picker [header]=\\\"'ATD'\\\" [dateTimeModel]=\\\"portCallAtd\\\" (dateTimeResult)=\\\"onAtdResult($event)\\\" (dateFormatError)=\\\"onAtdDateFormatError($event)\\\"></app-date-time-picker>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"atdAfterTodayError\\\">Actual departure time cannot be set to the future.</div>\\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"dateSequenceError\\\">Departure time must be after arrival time.</div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-success\\\" disabled *ngIf=\\\"ataAfterTodayError || atdAfterTodayError || dateSequenceError || ataDateFormatError || atdDateFormatError\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save</span>\\r\\n    </button>\\r\\n    <span *ngIf=\\\"saving\\\">Saving...</span>\\r\\n    <span class=\\\"badge badge-success\\\" *ngIf=\\\"saved\\\">Your changes have been saved.</span>\\r\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"saveError\\\">An error occured when trying to save.</span>\\r\\n    <button class=\\\"btn btn-success\\\" (click)=\\\"save()\\\" [disabled]=\\\"saving\\\" *ngIf=\\\"!(ataAfterTodayError || atdAfterTodayError || dateSequenceError || ataDateFormatError || atdDateFormatError)\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"20px\\\">\\r\\n      <span>Save</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { NgbModal, NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\r\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\r\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\r\nimport { PortCallModel } from 'app/shared/models/port-call-model';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-set-actual-time',\r\n  templateUrl: './set-actual-time.component.html',\r\n  styleUrls: ['./set-actual-time.component.css']\r\n})\r\nexport class SetActualTimeComponent implements OnInit {\r\n\r\n  @Input() portCallModel: PortCallModel;\r\n\r\n  @Output() portCallModelChange = new EventEmitter<PortCallModel>();\r\n\r\n  modalRef: NgbModalRef;\r\n\r\n  portCallAta: DateTime = {\r\n    date: null,\r\n    time: new NgbTime(0, 0, 0)\r\n  };\r\n  portCallAtd: DateTime = {\r\n    date: null,\r\n    time: new NgbTime(0, 0, 0)\r\n  };\r\n\r\n  currentDate: NgbDate;\r\n  ataModel: DateTime;\r\n  atdModel: DateTime;\r\n\r\n  ataAfterTodayError = false;\r\n  atdAfterTodayError = false;\r\n  dateSequenceError = false;\r\n  ataDateFormatError = false;\r\n  atdDateFormatError = false;\r\n\r\n  saving = false;\r\n  saved = false;\r\n  saveError = false;\r\n\r\n  constructor(private portCallService: PortCallService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    if (this.portCallModel.locationAta != null) {\r\n      const ata = new Date(this.portCallModel.locationAta);\r\n      this.portCallAta = {\r\n        date: new NgbDate(ata.getFullYear(), ata.getMonth() + 1, ata.getDate()),\r\n        time: new NgbTime(ata.getHours(), ata.getMinutes(), 0)\r\n      };\r\n      this.ataModel = this.portCallAta;\r\n    }\r\n\r\n    if (this.portCallModel.locationAtd != null) {\r\n      const atd = new Date(this.portCallModel.locationAtd);\r\n      this.portCallAtd = {\r\n        date: new NgbDate(atd.getFullYear(), atd.getMonth() + 1, atd.getDate()),\r\n        time: new NgbTime(atd.getHours(), atd.getMinutes(), 0)\r\n      };\r\n      this.atdModel = this.portCallAtd;\r\n    }\r\n\r\n    const today = new Date();\r\n    this.currentDate = new NgbDate(today.getFullYear(), today.getMonth() + 1, today.getDate());\r\n    this.validateDateTime();\r\n  }\r\n\r\n  onAtaResult(ataResult: DateTime) {\r\n    this.ataModel = ataResult;\r\n    this.validateDateTime();\r\n  }\r\n\r\n  onAtdResult(atdResult) {\r\n    this.atdModel = atdResult;\r\n    this.validateDateTime();\r\n  }\r\n\r\n  onAtaDateFormatError(ataDateFormatErrorResult) {\r\n    this.ataDateFormatError = ataDateFormatErrorResult;\r\n  }\r\n\r\n  onAtdDateFormatError(atdDateFormatErrorResult) {\r\n    this.atdDateFormatError = atdDateFormatErrorResult;\r\n  }\r\n\r\n  validateDateTime() {\r\n    let arrival: DateTime = null;\r\n    let departure: DateTime = null;\r\n\r\n    if (this.ataModel && this.ataModel.date) {\r\n      arrival = {\r\n        date: new NgbDate(this.ataModel.date.year, this.ataModel.date.month, this.ataModel.date.day),\r\n        time: new NgbTime(this.ataModel.time.hour, this.ataModel.time.minute, 0)\r\n      };\r\n      this.portCallModel.locationAta = new Date(arrival.date.year, arrival.date.month - 1, arrival.date.day,\r\n        arrival.time.hour, arrival.time.minute, 0);\r\n    } else {\r\n      this.portCallModel.locationAta = null;\r\n    }\r\n\r\n    if (this.atdModel && this.atdModel.date) {\r\n      departure = {\r\n        date: new NgbDate(this.atdModel.date.year, this.atdModel.date.month, this.atdModel.date.day),\r\n        time: new NgbTime(this.atdModel.time.hour, this.atdModel.time.minute, 0)\r\n      };\r\n      this.portCallModel.locationAtd = new Date(departure.date.year, departure.date.month - 1, departure.date.day,\r\n        departure.time.hour, departure.time.minute, 0);\r\n    } else {\r\n      this.portCallModel.locationAtd = null;\r\n    }\r\n\r\n    this.ataAfterTodayError = arrival != null ? this.currentDate.before(arrival.date) : false;\r\n    this.atdAfterTodayError = departure != null ? this.currentDate.before(departure.date) : false;\r\n\r\n    if (arrival != null && departure != null) {\r\n      this.dateSequenceError = arrival.date.after(departure.date);\r\n      if (arrival.date.equals(departure.date)) {\r\n        this.dateSequenceError = arrival.time.hour > departure.time.hour\r\n          || (arrival.time.hour === departure.time.hour && arrival.time.minute >= departure.time.minute);\r\n      }\r\n    } else {\r\n      this.dateSequenceError = false;\r\n    }\r\n  }\r\n\r\n  save() {\r\n    this.saving = true;\r\n    this.saved = false;\r\n    this.saveError = false;\r\n\r\n    this.portCallService.updatePortCall(this.portCallModel).subscribe(\r\n      result => {\r\n        this.saved = true;\r\n        console.log(result);\r\n        if (null != result.locationAtd) {\r\n          this.portCallService.updatePortCallStatusCompleted(result.portCallId).subscribe(\r\n            res => {\r\n              this.portCallModel = res;\r\n              console.log('Status set to completed.');\r\n            },\r\n            err => console.log(err)\r\n          );\r\n        } else {\r\n          this.portCallService.updatePortCallStatusCleared(result.portCallId).subscribe(\r\n            res => {\r\n              this.portCallModel = res;\r\n              console.log('Status set to cleared.');\r\n            },\r\n            err => console.log(err)\r\n          );\r\n        }\r\n      },\r\n      error => {\r\n        this.saveError = true;\r\n        console.log(error);\r\n      },\r\n      () => {\r\n        this.saving = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  openModal(content) {\r\n    this.saving = false;\r\n    this.saved = false;\r\n    this.saveError = false;\r\n    this.modalService.open(content, {size: 'lg'}).result.then(\r\n      (result) => {\r\n        this.modalClosed();\r\n      },\r\n      (reason) => {\r\n        this.modalClosed();\r\n      });\r\n  }\r\n\r\n  modalClosed() {\r\n    if (this.saved) {\r\n      this.portCallModelChange.emit(this.portCallModel);\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/set-actual-time/set-actual-time.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/port-call.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"permissions.register\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-6 col-lg-4\\\">\\r\\n        <app-ssn-card header=\\\"New Port Call\\\" icon=\\\"portcall.png\\\">\\r\\n            <div class=\\\"text-center\\\">\\r\\n                <p>To register a new port call, you have to create a port call draft, and then activate it.</p>\\r\\n                <button class=\\\"btn btn-ssn\\\" (click)=\\\"selectRegister()\\\">New Port Call Draft</button>\\r\\n            </div>\\r\\n        </app-ssn-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-overview></app-overview>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/port-call.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { PortCallClaims } from 'app/shared/constants/port-call-claims';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-port-call',\r\n  templateUrl: './port-call.component.html',\r\n  styleUrls: ['./port-call.component.css']\r\n})\r\nexport class PortCallComponent implements OnInit, OnDestroy {\r\n  selectedComponent: 'Passenger List';\r\n  permissions = PortCallClaims.portCallPermissions;\r\n\r\n  userClaimsDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private accountService: AccountService,\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.userClaimsDataSubscription = this.accountService.userClaimsData$.subscribe(userClaims => {\r\n      if (userClaims) {\r\n        const userClaimsTypePortCall = userClaims.filter(\r\n          claim => claim.type === PortCallClaims.TYPE\r\n        );\r\n        const keys = Object.keys(this.permissions);\r\n        keys.forEach(key => {\r\n          this.permissions[key] = userClaimsTypePortCall.some(\r\n            claim => claim.value.toUpperCase() === key.toString().toUpperCase()\r\n          );\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userClaimsDataSubscription.unsubscribe();\r\n  }\r\n\r\n  selectRegister() {\r\n    this.portCallService.wipeServiceData();\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_PORT_CALL_DRAFT);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/port-call.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { CargoItemFormComponent } from 'app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component';\r\nimport { CargoTableComponent } from 'app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component';\r\nimport { ShipStoresComponent } from 'app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component';\r\nimport { CountryService } from 'app/shared/services/country.service';\r\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { PortCallPassengerListService } from 'app/shared/services/port-call-passenger-list.service';\r\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { PrevAndNextPocService } from 'app/shared/services/prev-and-next-poc.service';\r\nimport { SharedModule } from 'app/shared/shared.module';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ClearanceComponent } from './clearance/clearance.component';\r\nimport { ConfirmationModule } from './confirmation/confirmation.module';\r\nimport { NewPortCallDraftComponent } from './new-port-call-draft/new-port-call-draft.component';\r\nimport { ConfirmDataComponent } from './new-port-call-draft/ship-location-time/confirm-data/confirm-data.component';\r\nimport { EtaEtdComponent } from './new-port-call-draft/ship-location-time/eta-etd/eta-etd.component';\r\nimport { FindLocationComponent } from './new-port-call-draft/ship-location-time/find-location/find-location.component';\r\nimport { FindShipComponent } from './new-port-call-draft/ship-location-time/find-ship/find-ship.component';\r\nimport { ShipLocationTimeComponent } from './new-port-call-draft/ship-location-time/ship-location-time.component';\r\nimport { ButtonRowComponent } from './overview/button-row/button-row.component';\r\nimport { ClearanceRowComponent } from './overview/clearance-row/clearance-row.component';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { SetActualTimeComponent } from './overview/set-actual-time/set-actual-time.component';\r\nimport { PortCallComponent } from './port-call.component';\r\nimport { CargoComponent } from './registration/forms/cargo/cargo.component';\r\nimport { ConsignmentFormComponent } from './registration/forms/cargo/consignment-form/consignment-form.component';\r\nimport { FormsComponent } from './registration/forms/forms.component';\r\nimport { FindPortOfEmbarkationComponent } from './registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component';\r\nimport { PassengerListComponent } from './registration/forms/passenger-list/passenger-list.component';\r\nimport { SearchPassengerPortComponent } from './registration/forms/passenger-list/search-passenger-port/search-passenger-port.component';\r\nimport { CargoDescriptionComponent } from './registration/forms/port-call-details/cargo-description/cargo-description.component';\r\nimport { CrewPassengersDimensionsComponent } from './registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component';\r\nimport { PortCallDetailsComponent } from './registration/forms/port-call-details/port-call-details.component';\r\nimport { PurposeComponent } from './registration/forms/port-call-details/purpose/purpose.component';\r\nimport { ReportingComponent } from './registration/forms/port-call-details/reporting/reporting.component';\r\nimport { SaveDetailsComponent } from './registration/forms/port-call-details/save-details/save-details.component';\r\nimport { PrevAndNextPocComponent } from './registration/forms/prev-and-next-poc/prev-and-next-poc.component';\r\nimport { SavePrevAndNextPocComponent } from './registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component';\r\nimport { DeleteButtonComponent } from './registration/forms/shared/delete-button/delete-button.component';\r\nimport { SaveShipStoresComponent } from './registration/forms/ship-stores/save-ship-stores/save-ship-stores.component';\r\nimport { ProgressBarComponent } from './registration/progress-bar/progress-bar.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ViewPortCallComponent } from './view-port-call/view-port-call.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ConfirmationModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    Ng2SmartTableModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n    SharedModule,\r\n  ],\r\n  entryComponents: [ButtonRowComponent, ClearanceRowComponent, DeleteButtonComponent],\r\n  declarations: [\r\n    ButtonRowComponent,\r\n    ClearanceComponent,\r\n    ClearanceRowComponent,\r\n    ConfirmDataComponent,\r\n    CrewPassengersDimensionsComponent,\r\n    EtaEtdComponent,\r\n    FindLocationComponent,\r\n    FindShipComponent,\r\n    FormsComponent,\r\n    NewPortCallDraftComponent,\r\n    OverviewComponent,\r\n    PortCallComponent,\r\n    PortCallDetailsComponent,\r\n    ProgressBarComponent,\r\n    PurposeComponent,\r\n    RegistrationComponent,\r\n    ReportingComponent,\r\n    SaveDetailsComponent,\r\n    NewPortCallDraftComponent,\r\n    ClearanceRowComponent,\r\n    ShipStoresComponent,\r\n    DeleteButtonComponent,\r\n    ShipLocationTimeComponent,\r\n    PrevAndNextPocComponent,\r\n    ViewPortCallComponent,\r\n    SaveShipStoresComponent,\r\n    PassengerListComponent,\r\n    FindPortOfEmbarkationComponent,\r\n    SearchPassengerPortComponent,\r\n    SavePrevAndNextPocComponent,\r\n    CargoDescriptionComponent,\r\n    SetActualTimeComponent,\r\n    CargoComponent,\r\n    CargoTableComponent,\r\n    ConsignmentFormComponent,\r\n    CargoItemFormComponent,\r\n  ],\r\n  exports: [\r\n    ClearanceComponent,\r\n    NewPortCallDraftComponent,\r\n    PortCallComponent,\r\n    RegistrationComponent,\r\n    ViewPortCallComponent,\r\n  ],\r\n  providers: [PortCallService, FalShipStoresService, PortCallPassengerListService, CountryService, PrevAndNextPocService, PortCallDetailsService, FalCargoService]\r\n})\r\nexport class PortCallModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/port-call.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.css\n// module chunks = main","module.exports = \"<form #form=\\\"ngForm\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"shipping_marks\\\">Shipping Marks</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"cargoItemModel.shippingMarks\\\" placeholder=\\\"Enter shipping marks\\\" name=\\\"shipping_marks\\\" class=\\\"form-control form-control-sm\\\"\\r\\n        />\\r\\n\\r\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"container_identification\\\">Container ID Number</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"cargoItemModel.containerIdentification\\\" placeholder=\\\"Enter container ID number\\\" name=\\\"container_identification\\\"\\r\\n          class=\\\"form-control form-control-sm\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"select_package_type\\\">Package Type</label>\\r\\n        <ng-select name=\\\"select_package_type\\\" [items]=\\\"packageTypeList\\\" [(ngModel)]=\\\"selectedPackageType\\\" placeholder=\\\"Select package type\\\"\\r\\n          bindLabel=\\\"name\\\" (change)=\\\"onPackageTypeSelect($event)\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\"></ng-select>\\r\\n\\r\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"hs_code\\\">HS Code</label>\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"cargoItemModel.hsCode\\\" placeholder=\\\"Enter HS code\\\" name=\\\"hs_code\\\" class=\\\"form-control form-control-sm\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"gross_volume\\\">Gross Volume</label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"cargoItemModel.grossVolume\\\" placeholder=\\\"Enter gross volume\\\" name=\\\"gross_volume\\\" class=\\\"form-control form-control-sm\\\"\\r\\n        />\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n\\r\\n        <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"gross_weight\\\">Gross Weight</label>\\r\\n        <input type=\\\"number\\\" [(ngModel)]=\\\"cargoItemModel.grossWeight\\\" placeholder=\\\"Enter gross weight\\\" name=\\\"gross_weight\\\" class=\\\"form-control form-control-sm\\\"\\r\\n        />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n      <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"number_of_packages\\\">Number of Packages</label>\\r\\n      <input type=\\\"number\\\" [(ngModel)]=\\\"cargoItemModel.numberOfPackages\\\" placeholder=\\\"Enter number of packages\\\" name=\\\"number_of_packages\\\"\\r\\n        class=\\\"form-control form-control-sm\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n      <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"description\\\">Description</label>\\r\\n      <textarea [(ngModel)]=\\\"cargoItemModel.description\\\" (ngModelChange)=\\\"touchData()\\\" name=\\\"description\\\" class=\\\"form-control form-control-sm\\\"\\r\\n        rows=\\\"4\\\" id=\\\"description\\\"></textarea>\\r\\n    </div>\\r\\n  </div>\\r\\n</form>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { PackageTypeModel } from 'app/shared/models/package-type-model';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\r\nimport { CargoItemModel } from 'app/shared/models/cargo-item-model';\r\n\r\n@Component({\r\n  selector: 'app-cargo-item-form',\r\n  templateUrl: './cargo-item-form.component.html',\r\n  styleUrls: ['./cargo-item-form.component.css']\r\n})\r\nexport class CargoItemFormComponent implements OnInit {\r\n  @Input() cargoItemModel: CargoItemModel;\r\n\r\n  packageTypeList: PackageTypeModel[] = [];\r\n  selectedPackageType: PackageTypeModel;\r\n  packageTypeListSubscription: Subscription;\r\n\r\n  constructor(\r\n    private cargoService: FalCargoService\r\n  ) { }\r\n\r\n  onPackageTypeSelect($event) {\r\n    this.cargoItemModel.packageType = $event;\r\n    this.cargoItemModel.packageTypeId = $event.packageTypeId;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.packageTypeListSubscription = this.cargoService.getPackageTypeList().subscribe(\r\n      result => {\r\n        this.packageTypeList = result;\r\n      }\r\n    );\r\n  }\r\n\r\n  touchData() {\r\n    // not implemented\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-item-form/cargo-item-form.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.css\n// module chunks = main","module.exports = \"<table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n  <thead class=\\\"bg-ssn text-white\\\">\\r\\n    <tr>\\r\\n      <th class=\\\"py-1\\\">\\r\\n        <h5 class=\\\"mb-0\\\">Cargo</h5>\\r\\n      </th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n</table>\\r\\n<div class=\\\"table-responsive\\\">\\r\\n  <ng2-smart-table [settings]=\\\"cargoTableSettings\\\" [source]=\\\"cargoDataSource\\\"></ng2-smart-table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.html\n// module chunks = main","import { Component, OnInit, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { CargoItemModel } from 'app/shared/models/cargo-item-model';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { DeleteButtonComponent } from '../../shared/delete-button/delete-button.component';\r\nimport { FalCargoService } from '../../../../../../../shared/services/fal-cargo.service';\r\n\r\n@Component({\r\n  selector: 'app-cargo-table',\r\n  templateUrl: './cargo-table.component.html',\r\n  styleUrls: ['./cargo-table.component.css']\r\n})\r\nexport class CargoTableComponent implements OnInit, OnChanges {\r\n  @Input() cargoItemList: CargoItemModel[];\r\n  @Output() delete = new EventEmitter<any>();\r\n\r\n  cargoDataSource: LocalDataSource = new LocalDataSource();\r\n\r\n  cargoTableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n\r\n    columns: {\r\n      shippingMarks: {\r\n        title: 'Shipping Marks',\r\n        type: 'html'\r\n      },\r\n      containerIdentification: {\r\n        title: 'Container ID Number',\r\n        type: 'html'\r\n      },\r\n      numberOfPackages: {\r\n        title: 'Number of Packages',\r\n        type: 'html'\r\n      },\r\n      packageType: {\r\n        title: 'Package Type',\r\n        type: 'html'\r\n      },\r\n      descriptionOfGoods: {\r\n        title: 'Description of Goods',\r\n        type: 'html'\r\n      },\r\n      hsCode: {\r\n        title: 'HS Code',\r\n        type: 'html'\r\n      },\r\n      grossVolume: {\r\n        title: 'Gross Volume (M3)',\r\n        type: 'html'\r\n      },\r\n      grossWeight: {\r\n        title: 'Gross Weight (KGM)',\r\n        type: 'html'\r\n      },\r\n      delete: {\r\n        title: 'Delete',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: DeleteButtonComponent,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.delete.subscribe(row => {\r\n            this.deleteCargoItem(row);\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  constructor(\r\n    private cargoService: FalCargoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    const rows = this.generateRows();\r\n    this.cargoDataSource.load(rows);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    const rows = this.generateRows();\r\n    this.cargoDataSource.load(rows);\r\n  }\r\n\r\n  deleteCargoItem(row) {\r\n    /*     this.cargoItemList = this.cargoItemList.filter(entry => entry !== row.cargoItemModel);\r\n        const rows = this.generateRows();\r\n        this.cargoDataSource.load(rows); */\r\n    this.delete.emit(row);\r\n    // this.cargoService.setDataIsPristine(false);\r\n  }\r\n\r\n  generateRows() {\r\n    const rowData = this.cargoItemList.map(item => {\r\n      const row = {\r\n        cargoItemModel: item,\r\n        shippingMarks: item.shippingMarks,\r\n        containerIdentification: item.containerIdentification,\r\n        numberOfPackages: item.numberOfPackages,\r\n        packageType: item.packageType.name,\r\n        descriptionOfGoods: item.description,\r\n        hsCode: item.hsCode,\r\n        grossVolume: item.grossVolume,\r\n        grossWeight: item.grossWeight\r\n      };\r\n      return row;\r\n    });\r\n    return rowData;\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo-table/cargo-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'New Consignment'\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"openModal(consignmentModal)\\\">New Consignment</button>\\r\\n  </div>\\r\\n</app-ssn-card>\\r\\n\\r\\n<div *ngFor=\\\"let entry of consignmentWithTableDataList\\\" class=\\\"text-center\\\">\\r\\n  <app-ssn-card [header]=\\\"'Consignment: ' + entry.consignmentModel.name\\\" [collapsible]=\\\"true\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div *ngIf=\\\"entry.portOfLoadingData\\\">\\r\\n          <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n            <thead class=\\\"bg-ssn text-white\\\">\\r\\n              <tr>\\r\\n                <th class=\\\"py-1\\\">\\r\\n                  <h5 class=\\\"mb-0\\\">Port Of Loading</h5>\\r\\n                </th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n          </table>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <app-ssn-table [entryData]=\\\"entry.portOfLoadingData\\\"></app-ssn-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <div *ngIf=\\\"entry.portOfDischargeData\\\">\\r\\n          <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n            <thead class=\\\"bg-ssn text-white\\\">\\r\\n              <tr>\\r\\n                <th class=\\\"py-1\\\">\\r\\n                  <h5 class=\\\"mb-0\\\">Port Of Discharge</h5>\\r\\n                </th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n          </table>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <app-ssn-table [entryData]=\\\"entry.portOfDischargeData\\\"></app-ssn-table>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row text-left\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <p class=\\\"mb-0\\\">Remark:</p>\\r\\n        <textarea class=\\\"col-md-6\\\" readonly disabled rows=\\\"5\\\" style=\\\"resize: none\\\" value=\\\"{{ entry.consignmentModel.remark }}\\\"></textarea>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row py-2\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <button class=\\\"btn btn-ssn btn-sm\\\" (click)=\\\"openModal(consignmentModal, entry.consignmentModel)\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\">\\r\\n          <span> Edit Consignment</span>\\r\\n        </button>\\r\\n        <button class=\\\"btn btn-danger btn-sm\\\" (click)=\\\"openModal(deleteConsignmentModal, entry.consignmentModel)\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/trash.png\\\" height=\\\"20px\\\">\\r\\n          <span> Delete Consignment</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-cargo-table *ngIf=\\\"entry.consignmentModel.cargoItem\\\" [cargoItemList]=\\\"entry.consignmentModel.cargoItem\\\" (delete)=\\\"onDeleteCargoItem($event)\\\"></app-cargo-table>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"row text-left\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <button class=\\\"btn btn-ssn btn-sm\\\" (click)=\\\"openModal(cargoItemModal, entry.consignmentModel)\\\">\\r\\n          <span> New Cargo Item</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </app-ssn-card>\\r\\n</div>\\r\\n\\r\\n<app-ssn-card [header]=\\\"'Save Consignments'\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <span class=\\\"my-2\\\" *ngIf=\\\"dataIsPristine\\\">There are no unsaved changes on this page.</span>\\r\\n    <div *ngIf=\\\"!(saving || dataIsPristine)\\\">\\r\\n      <button class=\\\"btn btn-ssn my-1\\\" (click)=\\\"saveChanges()\\\">\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span> Save Consignments</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"saving || dataIsPristine\\\">\\r\\n      <button class=\\\"btn btn-ssn my-1\\\" [disabled]=\\\"true\\\">\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span> Save Consignments</span>\\r\\n      </button>\\r\\n      <span *ngIf=\\\"saving\\\"> Saving...</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\\r\\n\\r\\n<ng-template #cargoItemModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ cargoItemModalHeader }}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <app-cargo-item-form [cargoItemModel]=\\\"openCargoItem\\\"></app-cargo-item-form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <div *ngIf=\\\"openCargoItem.shippingMarks && openCargoItem.containerIdentification && openCargoItem.packageType && openCargoItem.packageTypeId && openCargoItem.grossVolume\\r\\n    && openCargoItem.grossWeight && openCargoItem.hsCode && openCargoItem.numberOfPackages\\\">\\r\\n      <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveCargoItem(); close\\\">\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span> Save</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!(openCargoItem.shippingMarks && openCargoItem.containerIdentification && openCargoItem.packageType && openCargoItem.packageTypeId && openCargoItem.grossVolume\\r\\n    && openCargoItem.grossWeight && openCargoItem.hsCode && openCargoItem.numberOfPackages)\\\">\\r\\n      <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span> Save</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #consignmentModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">{{ consignmentModalHeader }}</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <app-consignment-form [consignmentModel]=\\\"consignmentCopy\\\"></app-consignment-form>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <div *ngIf=\\\"consignmentCopy.name && consignmentCopy.portOfLoadingId && consignmentCopy.portOfDischargeId\\\">\\r\\n      <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveConsignment(); close\\\">\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span> Save</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!(consignmentCopy.name && consignmentCopy.portOfLoadingId && consignmentCopy.portOfDischargeId)\\\">\\r\\n      <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span> Save</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #deleteConsignmentModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Confirm Deletion</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div class=\\\"text-center\\\">\\r\\n      <span>Delete the consignment \\\"{{ consignmentCopy.name || 'Consignment without name' }}\\\" and all cargo items belonging to\\r\\n        it?\\r\\n      </span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-danger mt-2\\\" (click)=\\\"deleteConsignment(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/trash.png\\\" height=\\\"24px\\\">\\r\\n      <span> Delete</span>\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span> Cancel</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { ConsignmentModel } from 'app/shared/models/consignment-model';\r\nimport { FalCargoService } from '../../../../../../shared/services/fal-cargo.service';\r\nimport { Subscription } from '../../../../../../../../node_modules/rxjs/Subscription';\r\nimport { NgbModal, NgbModalRef } from '../../../../../../../../node_modules/@ng-bootstrap/ng-bootstrap';\r\nimport { LocationProperties } from '../../../../../../shared/constants/location-properties';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport { CargoItemModel } from 'app/shared/models/cargo-item-model';\r\n\r\n@Component({\r\n  selector: 'app-cargo',\r\n  templateUrl: './cargo.component.html',\r\n  styleUrls: ['./cargo.component.css']\r\n})\r\nexport class CargoComponent implements OnInit, OnDestroy {\r\n  @Input() portCallId: number;\r\n  @Input() cargoData: ConsignmentModel[];\r\n\r\n  consignmentListSubscription: Subscription;\r\n  dataIsPristineSubscription: Subscription;\r\n\r\n  openConsignment: ConsignmentModel = null;\r\n  consignmentCopy: ConsignmentModel = null;\r\n  consignmentIsNew = false;\r\n  saving = false;\r\n\r\n  dataIsPristine = true;\r\n\r\n  openCargoItem: CargoItemModel = null;\r\n  cargoItemIsNew = false;\r\n\r\n  consignmentWithTableDataList: any[] = [];\r\n\r\n  modal: NgbModalRef;\r\n\r\n  newConsignmentText = 'New Consignment';\r\n  editConsignmentText = 'Edit Consignmment';\r\n  consignmentModalHeader: string;\r\n  newCargoItemText = 'New Cargo Item';\r\n  editCargoItemText = 'Edit Cargo Item';\r\n  cargoItemModalHeader: string;\r\n\r\n  constructor(\r\n    private cargoService: FalCargoService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.cargoData) {\r\n      this.consignmentWithTableDataList = this.cargoData.map(c => {\r\n        const obj = {\r\n          consignmentModel: c,\r\n          portOfLoadingData: null,\r\n          portOfDischargeData: null\r\n        };\r\n        return obj;\r\n      });\r\n      this.setTableData();\r\n    }\r\n    this.dataIsPristineSubscription = this.cargoService.dataIsPristine$.subscribe(\r\n      pristineData => {\r\n        this.dataIsPristine = pristineData;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dataIsPristineSubscription.unsubscribe();\r\n  }\r\n\r\n  openModal(content, consignment = null, cargoItem = null) {\r\n    this.consignmentIsNew = (consignment == null);\r\n    this.consignmentModalHeader = this.consignmentIsNew ? this.newConsignmentText : this.editConsignmentText;\r\n    this.cargoItemIsNew = (cargoItem == null);\r\n    this.cargoItemModalHeader = this.cargoItemIsNew ? this.newCargoItemText : this.editCargoItemText;\r\n    if (this.consignmentIsNew) {\r\n      consignment = new ConsignmentModel();\r\n    } else if (this.cargoItemIsNew) {\r\n      cargoItem = new CargoItemModel();\r\n      cargoItem.consignmentId = consignment.consignmentId;\r\n    }\r\n    this.openConsignment = consignment;\r\n    this.consignmentCopy = JSON.parse(JSON.stringify(this.openConsignment));\r\n    this.openCargoItem = cargoItem;\r\n    this.modal = this.modalService.open(content, { size: 'lg' });\r\n  }\r\n\r\n  onDeleteCargoItem($event) {\r\n    this.consignmentWithTableDataList = this.consignmentWithTableDataList.map(entry => {\r\n      if (entry.consignmentModel.cargoItem && entry.consignmentModel.cargoItem.length > 0) {\r\n        entry.consignmentModel.cargoItem = entry.consignmentModel.cargoItem.filter(item => item !== $event.cargoItemModel);\r\n      }\r\n      return entry;\r\n    });\r\n    this.touchData();\r\n  }\r\n\r\n  saveChanges() {\r\n    this.saving = true;\r\n    const consignmentList = this.consignmentWithTableDataList.map(entry => entry.consignmentModel);\r\n    this.cargoService.setConsignmentListData(consignmentList);\r\n    const formattedConsignmentList = this.cargoService.formatConsignment(consignmentList);\r\n    this.cargoService.saveConsignmentListForPortCall(formattedConsignmentList, this.portCallId).subscribe(\r\n      res => {\r\n        this.cargoService.setDataIsPristine(true);\r\n        this.saving = false;\r\n        console.log(res);\r\n      }, error => {\r\n        this.saving = false;\r\n        console.error(error);\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  saveConsignment() {\r\n    this.openConsignment = Object.assign(this.openConsignment, this.consignmentCopy);\r\n    this.openConsignment.portCallId = this.portCallId;\r\n    let loading = null;\r\n    let discharge = null;\r\n    if (this.openConsignment.portOfLoading) {\r\n      loading = this.portToTable(this.openConsignment.portOfLoading);\r\n    }\r\n    if (this.openConsignment.portOfDischarge) {\r\n      discharge = this.portToTable(this.openConsignment.portOfDischarge);\r\n    }\r\n    const obj = {\r\n      consignmentModel: this.openConsignment,\r\n      portOfLoadingData: loading,\r\n      portOfDischargeData: discharge\r\n    };\r\n    if (this.consignmentIsNew) {\r\n      this.consignmentWithTableDataList.unshift(obj);\r\n    }\r\n    this.setTableData();\r\n    this.touchData();\r\n  }\r\n\r\n  deleteConsignment() {\r\n    this.consignmentWithTableDataList = this.consignmentWithTableDataList.filter(entry => entry.consignmentModel !== this.openConsignment);\r\n    this.touchData();\r\n  }\r\n\r\n  saveCargoItem() {\r\n    if (this.cargoItemIsNew) {\r\n      if (this.openConsignment.cargoItem == null) {\r\n        this.openConsignment.cargoItem = [];\r\n      }\r\n      this.openConsignment.cargoItem = [...this.openConsignment.cargoItem, this.openCargoItem];\r\n    }\r\n    this.touchData();\r\n  }\r\n\r\n  setTableData() {\r\n    this.consignmentWithTableDataList.forEach(entry => {\r\n      if (entry.consignmentModel.portOfLoading) {\r\n        entry.portOfLoadingData = this.portToTable(entry.consignmentModel.portOfLoading);\r\n      } else {\r\n        entry.portOfLoadingData = null;\r\n      }\r\n      if (entry.consignmentModel.portOfDischarge) {\r\n        entry.portOfDischargeData = this.portToTable(entry.consignmentModel.portOfDischarge);\r\n      } else {\r\n        entry.portOfDischargeData = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  portToTable(port: LocationModel) {\r\n    const portOfLoadingData = new LocationProperties().getPropertyList();\r\n    LocationProperties.setLocationData(portOfLoadingData, port);\r\n    if (port.country) {\r\n      LocationProperties.setCountry(portOfLoadingData, port.country.name, port.country.twoCharCode.toLowerCase() + '.png');\r\n    }\r\n    return portOfLoadingData;\r\n  }\r\n\r\n  touchData() {\r\n    const consignmentList = this.consignmentWithTableDataList.map(entry => entry.consignmentModel);\r\n    this.cargoService.setConsignmentListData(consignmentList);\r\n    this.cargoService.setDataIsPristine(false);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/cargo.component.ts","module.exports = \".normal {\\r\\n    font-style: normal;\\r\\n}\\r\\n\\r\\n.italic {\\r\\n    font-style: italic;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"consignmentModel.name || placeholderHeader\\\" icon=\\\"cargo.png\\\">\\r\\n  <form #form=\\\"ngForm\\\">\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label-xl no-wrap mb-0\\\" for=\\\"consignmentName\\\">Consignment name</label>\\r\\n          <input type=\\\"text\\\" [(ngModel)]=\\\"consignmentModel.name\\\" placeholder=\\\"Enter a name for this consignment\\\" name=\\\"consignmentName\\\"\\r\\n            class=\\\"form-control form-control-sm\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-ssn-card header=\\\"Port of Loading\\\" icon=\\\"location.png\\\">\\r\\n          <app-search-location *ngIf=\\\"!portOfLoadingFound\\\" [restrictTypeHarbour]=true (locationResult)=\\\"onPortOfLoadingResult($event)\\\">\\r\\n          </app-search-location>\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"portOfLoadingFound\\\">\\r\\n            <app-ssn-table [entryData]=\\\"portOfLoadingData\\\"></app-ssn-table>\\r\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectPortOfLoading()\\\">\\r\\n              <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n          </div>\\r\\n        </app-ssn-card>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-ssn-card header=\\\"Port of Discharge\\\" icon=\\\"location.png\\\">\\r\\n          <app-search-location *ngIf=\\\"!portOfDischargeFound\\\" [restrictTypeHarbour]=true (locationResult)=\\\"onPortOfDischargeResult($event)\\\">\\r\\n          </app-search-location>\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"portOfDischargeFound\\\">\\r\\n            <app-ssn-table [entryData]=\\\"portOfDischargeData\\\"></app-ssn-table>\\r\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectPortOfDischarge()\\\">\\r\\n              <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n          </div>\\r\\n        </app-ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"remark\\\">Remark</label>\\r\\n          <textarea [(ngModel)]=\\\"consignmentModel.remark\\\" name=\\\"remark\\\" class=\\\"form-control form-control-sm\\\" rows=\\\"4\\\" id=\\\"remark\\\"></textarea>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { ConsignmentModel } from 'app/shared/models/consignment-model';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport { LocationProperties } from 'app/shared/constants/location-properties';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { FalCargoService } from '../../../../../../../shared/services/fal-cargo.service';\r\n\r\n@Component({\r\n  selector: 'app-consignment-form',\r\n  templateUrl: './consignment-form.component.html',\r\n  styleUrls: ['./consignment-form.component.css']\r\n})\r\nexport class ConsignmentFormComponent implements OnInit, OnDestroy {\r\n  @Input() consignmentModel: ConsignmentModel;\r\n  placeholderHeader = 'Consignment without name';\r\n\r\n  portOfLoadingModel: LocationModel = null;\r\n  portOfDischargeModel: LocationModel = null;\r\n\r\n  dataIsPristine = true;\r\n\r\n  portOfLoadingFound = false;\r\n  portOfDischargeFound = false;\r\n\r\n  portOfLoadingData = new LocationProperties().getPropertyList();\r\n  portOfDischargeData = new LocationProperties().getPropertyList();\r\n\r\n  portOfLoadingSubscription: Subscription;\r\n  portOfDischargeSubscription: Subscription;\r\n\r\n  constructor(\r\n    private cargoService: FalCargoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.cargoService.dataIsPristine$.subscribe(\r\n      data => {\r\n        this.dataIsPristine = data;\r\n      }\r\n    );\r\n    if (this.consignmentModel.portOfLoading) {\r\n      this.portOfLoadingModel = this.consignmentModel.portOfLoading;\r\n      this.portOfLoadingFound = true;\r\n      this.onPortOfLoadingResult(this.consignmentModel.portOfLoading);\r\n    }\r\n    if (this.consignmentModel.portOfDischarge) {\r\n      this.onPortOfDischargeResult(this.consignmentModel.portOfDischarge);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n  }\r\n\r\n  setProperties(portData, portModel: LocationModel) {\r\n    LocationProperties.setLocationData(portData, portModel);\r\n    if (portModel.country) {\r\n      LocationProperties.setCountry(portData, portModel.country.name, portModel.country.twoCharCode.toLowerCase() + '.png');\r\n    }\r\n  }\r\n\r\n  onPortOfLoadingResult(portOfLoading: LocationModel) {\r\n    this.consignmentModel.portOfLoading = portOfLoading;\r\n    this.consignmentModel.portOfLoadingId = portOfLoading.locationId;\r\n    this.portOfLoadingModel = portOfLoading;\r\n    this.portOfLoadingFound = true;\r\n    this.setProperties(this.portOfLoadingData, this.portOfLoadingModel);\r\n  }\r\n\r\n  onPortOfDischargeResult(portOfDischarge: LocationModel) {\r\n    this.consignmentModel.portOfDischarge = portOfDischarge;\r\n    this.consignmentModel.portOfDischargeId = portOfDischarge.locationId;\r\n    this.portOfDischargeModel = portOfDischarge;\r\n    this.portOfDischargeFound = true;\r\n    this.setProperties(this.portOfDischargeData, this.portOfDischargeModel);\r\n  }\r\n\r\n  deselectPortOfLoading() {\r\n    this.consignmentModel.portOfLoading = null;\r\n    this.consignmentModel.portOfLoadingId = null;\r\n    this.portOfLoadingModel = null;\r\n    this.portOfLoadingFound = false;\r\n  }\r\n\r\n  deselectPortOfDischarge() {\r\n    this.consignmentModel.portOfDischarge = null;\r\n    this.consignmentModel.portOfDischargeId = null;\r\n    this.portOfDischargeModel = null;\r\n    this.portOfDischargeFound = false;\r\n  }\r\n\r\n  touchData() {\r\n    this.cargoService.setDataIsPristine(false);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/cargo/consignment-form/consignment-form.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/forms.component.css\n// module chunks = main","module.exports = \"<app-progress-bar></app-progress-bar>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div [ngSwitch]=\\\"selectedComponent\\\">\\r\\n    <app-port-call-details *ngSwitchCase=\\\"formNames.PORT_CALL_DETAILS\\\" [portCallId]=\\\"portCallId\\\"></app-port-call-details>\\r\\n    <app-ship-stores *ngSwitchCase=\\\"formNames.SHIP_STORES\\\" [portCallId]=\\\"portCallId\\\" [shipStoresList]=\\\"shipStoresData\\\"></app-ship-stores>\\r\\n    <app-cargo *ngSwitchCase=\\\"formNames.CARGO\\\" [portCallId]=\\\"portCallId\\\" [cargoData]=\\\"cargoData\\\"></app-cargo>\\r\\n    <!-- <app-passenger-list *ngSwitchCase=\\\"formNames.PAX\\\"></app-passenger-list> -->\\r\\n    <app-prev-and-next-poc *ngSwitchCase=\\\"formNames.PREV_AND_NEXT_POC\\\" [portCallId]=\\\"portCallId\\\"></app-prev-and-next-poc>\\r\\n    <app-confirmation *ngSwitchCase=\\\"'Confirm and Activate'\\\"></app-confirmation>\\r\\n    <div *ngSwitchDefault class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        This page is not implemented yet.\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/forms.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FORM_NAMES } from 'app/shared/constants/form-names';\r\nimport { ConsignmentModel } from 'app/shared/models/consignment-model';\r\nimport { ShipStoresModel } from 'app/shared/models/ship-stores-model';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\r\nimport { PortCallPassengerListService } from '../../../../../shared/services/port-call-passenger-list.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-forms',\r\n  templateUrl: './forms.component.html',\r\n  styleUrls: ['./forms.component.css']\r\n})\r\nexport class FormsComponent implements OnInit, OnDestroy {\r\n\r\n  selectedComponent: string;\r\n  portCallId: number;\r\n\r\n  cargoData: ConsignmentModel[];\r\n  shipStoresData: ShipStoresModel[];\r\n\r\n  formNames: any;\r\n\r\n  shipDataSubscription: Subscription;\r\n  portCallFormNameSubscription: Subscription;\r\n  portCallIdSubscription: Subscription;\r\n  cargoSubscription: Subscription;\r\n  shipStoresSubscription: Subscription;\r\n\r\n  constructor(\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private shipService: ShipService,\r\n    private cargoService: FalCargoService,\r\n    private shipStoresService: FalShipStoresService,\r\n    private passengerListService: PortCallPassengerListService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallIdSubscription = this.portCallService.portCallIdData$.subscribe(\r\n      portCallIdData => {\r\n        if (portCallIdData) {\r\n          this.portCallId = portCallIdData;\r\n          this.setCargoForPortCall(this.portCallId);\r\n        }\r\n      }\r\n    );\r\n    this.cargoSubscription = this.cargoService.consignmentListData$.subscribe(\r\n      data => {\r\n        this.cargoData = data;\r\n      }\r\n    );\r\n    this.shipStoresSubscription = this.shipStoresService.shipStoresList$.subscribe(\r\n      data => {\r\n        this.shipStoresData = data;\r\n      }\r\n    );\r\n    this.shipDataSubscription = this.portCallService.shipData$.subscribe(\r\n      shipResult => {\r\n        this.shipService.setShipData(shipResult);\r\n      }\r\n    );\r\n    this.portCallFormNameSubscription = this.contentService.portCallFormName$.subscribe(\r\n      content => {\r\n        this.selectedComponent = content;\r\n      }\r\n    );\r\n    this.formNames = FORM_NAMES;\r\n  }\r\n\r\n  setCargoForPortCall(portCallId) {\r\n    this.cargoSubscription = this.cargoService.getConsignmentListForPortCall(portCallId).subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.cargoService.setConsignmentListData(data);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n  ngOnDestroy() {\r\n    this.shipDataSubscription.unsubscribe();\r\n    this.portCallFormNameSubscription.unsubscribe();\r\n    this.cargoSubscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.ts","module.exports = \"button {\\r\\n    padding: 0.4rem;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"!locationFound\\\">\\r\\n  <app-search-passenger-port></app-search-passenger-port>\\r\\n</div>\\r\\n<div class=\\\"form-group row\\\" *ngIf=\\\"locationFound\\\">\\r\\n  <label for=\\\"search-location\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Port of Embarkation</label>\\r\\n  <div class=\\\"col-7\\\">\\r\\n    <input id=\\\"search-location\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" readonly=\\\"readonly\\\" [(ngModel)]=\\\"locationProperties.LOCATION_NAME.data\\\"\\r\\n    />\\r\\n  </div>\\r\\n  <div>\\r\\n    <button class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Remove port\\\" (click)=\\\"deselectLocation()\\\">\\r\\n      <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"locationFound\\\" class=\\\"text-center\\\">\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <table class=\\\"table table-bordered\\\">\\r\\n      <thead>\\r\\n        <th *ngIf=\\\"locationFlag\\\" class=\\\"bg-ssn text-ssn\\\">Flag</th>\\r\\n        <th *ngFor=\\\"let entry of locationInfo\\\" class=\\\"bg-ssn text-ssn\\\">{{ entry.description }}</th>\\r\\n      </thead>\\r\\n      <tbody>\\r\\n        <td *ngIf=\\\"locationFlag\\\">\\r\\n          <img src=\\\"assets/images/flags/128x128/{{locationFlag | lowercase}}.png\\\" height=\\\"20px\\\">\\r\\n        </td>\\r\\n        <td *ngFor=\\\"let entry of locationInfo\\\">\\r\\n          <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n          <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n        </td>\\r\\n      </tbody>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component.html\n// module chunks = main","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { LocationProperties } from 'app/shared/constants/location-properties';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { PortCallPassengerListService } from 'app/shared/services/port-call-passenger-list.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-find-port-of-embarkation',\r\n  templateUrl: './find-port-of-embarkation.component.html',\r\n  styleUrls: ['./find-port-of-embarkation.component.css'],\r\n  providers: [LocationService]\r\n})\r\nexport class FindPortOfEmbarkationComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() showDropDown = true;\r\n\r\n  locationModel: any;\r\n\r\n  locationFound = false;\r\n  locationFlag: string;\r\n  locationProperties = LocationProperties.PROPERTIES;\r\n  locationInfo: any[];\r\n\r\n  locationDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private locationService: LocationService,\r\n    private passengerListService: PortCallPassengerListService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.locationDataSubscription = this.locationService.locationData$.subscribe(\r\n      locationResult => {\r\n        if (locationResult) {\r\n          this.locationFlag = (locationResult.country) ? locationResult.country.twoCharCode.toLowerCase() : null;\r\n          this.locationProperties.COUNTRY.data = (locationResult.country) ? locationResult.country.name : null;\r\n          this.locationProperties.LOCATION_TYPE.data = locationResult.locationType.name;\r\n          this.locationProperties.LOCATION_NAME.data = locationResult.name;\r\n          this.locationProperties.LOCATION_CODE.data = locationResult.locationCode;\r\n\r\n          this.locationFound = true;\r\n          this.passengerListService.setPortOfEmbarkation(locationResult);\r\n        } else {\r\n          this.locationFound = false;\r\n          this.passengerListService.setPortOfEmbarkation(null);\r\n        }\r\n        this.locationInfo = Object.values(this.locationProperties);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.locationDataSubscription.unsubscribe();\r\n  }\r\n\r\n  deselectLocation() {\r\n    this.locationFound = false;\r\n    this.locationService.setLocationData(null);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/find-port-of-embarkation/find-port-of-embarkation.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n  }\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n  }\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n  }\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: \\\"\\\";\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n  }\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n  }\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n  }\\r\\n:host /deep/ ng2-smart-table a {\\r\\n    color: var(--color-primary-text);\\r\\n  }\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {\\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n  }\\r\\n:host /deep/ span.ng2-smart-page-link.page-link {\\r\\n    color: var(--color-primary-dark);\\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;\\r\\n  }\\r\\n:host /deep/ tbody > tr > td.ng2-smart-actions > a {\\r\\n    color: var(--color-primary-dark);\\r\\n  }\\r\\n:host /deep/ ng2-st-tbody-edit-delete > a,\\r\\n  :host /deep/ ng2-st-tbody-create-cancel > a {\\r\\n    color: var(--color-primary);\\r\\n  }\\r\\n.ng-select-placeholder-size {\\r\\n    font-size: 0.875rem;\\r\\n  }\\r\\n:host /deep/ .ng-placeholder, ::-webkit-input-placeholder  {\\r\\n      color: gray !important;\\r\\n      font-style: italic;\\r\\n  }\\r\\n:host /deep/ .ng-placeholder, :-ms-input-placeholder  {\\r\\n      color: gray !important;\\r\\n      font-style: italic;\\r\\n  }\\r\\n:host /deep/ .ng-placeholder, ::-ms-input-placeholder  {\\r\\n      color: gray !important;\\r\\n      font-style: italic;\\r\\n  }\\r\\n:host /deep/ .ng-placeholder, ::placeholder  {\\r\\n      color: gray !important;\\r\\n      font-style: italic;\\r\\n  }\\r\\n  \\r\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Passenger List\\\" icon=\\\"pax.png\\\">\\r\\n\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"familyName\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Family Name</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input type=\\\"text\\\" pattern=\\\"^[a-zA-Z]+$\\\" required [(ngModel)]=\\\"passengerModel.familyName\\\" placeholder=\\\"Family Name\\\" class=\\\"form-control form-control-sm\\\"\\r\\n              required name=\\\"familyName\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formValid\\\">\\r\\n          <li>\\r\\n            <small>Only letters allowed.</small>\\r\\n          </li>\\r\\n          <li>\\r\\n            <small>More than one letter required.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\" required>\\r\\n          <label for=\\\"nationality\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Nationality</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input id=\\\"nationality\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"passengerModel.nationality\\\"\\r\\n              name=\\\"nationality\\\" placeholder=\\\"Enter search here...\\\"\\r\\n              (selectItem)=\\\"selectNationality($event)\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"placeOfBirth\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Place of Birth</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input type=\\\"text\\\" pattern=\\\"^[a-zA-Z]+$\\\" required [(ngModel)]=\\\"passengerModel.placeOfBirth\\\" placeholder=\\\"Place of Birth\\\"\\r\\n              class=\\\"form-control form-control-sm\\\" name=\\\"placeOfBirth\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formValid\\\">\\r\\n          <li>\\r\\n            <small>Only letters allowed.</small>\\r\\n          </li>\\r\\n          <li>\\r\\n            <small>More than one letter required.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"natureOfIdentityDoc\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Nature of Identity Document</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <ng-select class=\\\"ng-select-placeholder-size\\\" [items]=\\\"countryList\\\" [(ngModel)]=\\\"passengerModel.natureOfIdentityDoc\\\" name=\\\"natureOfIdentityDoc\\\"\\r\\n              [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Nature of Identity Document\\\" (change)=\\\"selectNationality($event)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"visaOrResidenceNumber\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Visa or Residence Permit Number</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input type=\\\"number\\\" required [(ngModel)]=\\\"passengerModel.permitNumber\\\" placeholder=\\\"Visa or Residence Permit Number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n              name=\\\"visaOrResidenceNumber\\\" integerValidator positiveNumberValidator>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formValid\\\">\\r\\n          <li>\\r\\n            <small>Visa/permit number must be an integer.</small>\\r\\n          </li>\\r\\n          <li>\\r\\n            <small>Visa/permit number number must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"portOfDisembarkation\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Port of Disembarkation</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input type=\\\"text\\\" pattern=\\\"^[a-zA-Z]+$\\\" required [(ngModel)]=\\\"passengerModel.portOfDisembarkation\\\" placeholder=\\\"Port of Disembarkation\\\"\\r\\n              class=\\\"form-control form-control-sm\\\" required name=\\\"portOfDisembarkation\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formValid\\\">\\r\\n          <li>\\r\\n            <small>Only letters allowed.</small>\\r\\n          </li>\\r\\n          <li>\\r\\n            <small>More than one letter required.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- /.col-lg-6 -->\\r\\n\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"givenName\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Given Name</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input type=\\\"text\\\" required [(ngModel)]=\\\"passengerModel.givenName\\\" placeholder=\\\"Given Name\\\" class=\\\"form-control form-control-sm\\\"\\r\\n              pattern=\\\"^[a-zA-Z0-9.]+$\\\" name=\\\"givenName\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formValid\\\">\\r\\n          <li>\\r\\n            <small>Only letters, numbers and \\\".\\\" allowed.</small>\\r\\n          </li>\\r\\n          <li>\\r\\n            <small>More than one letter required.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"dateOfBirth\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Date of Birth</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input type=\\\"number\\\" required [(ngModel)]=\\\"passengerModel.dateOfBirth\\\" placeholder=\\\"Date of Birth\\\" class=\\\"form-control form-control-sm\\\"\\r\\n              name=\\\"dateOfBirth\\\" integerValidator positiveNumberValidator>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formValid\\\">\\r\\n          <li>\\r\\n            <small>Number of passengers must be an integer.</small>\\r\\n          </li>\\r\\n          <li>\\r\\n            <small>Number of passengers must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\" required>\\r\\n          <label for=\\\"countryOfBirth\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Country of Birth</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <ng-select class=\\\"ng-select-placeholder-size\\\" [items]=\\\"countryList\\\" [(ngModel)]=\\\"passengerModel.countryOfBirth\\\" name=\\\"countryOfBirth\\\"\\r\\n              [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Country of Birth\\\" (change)=\\\"selectCountryOfBirth($event)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label for=\\\"numberOfIdentityDoc\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Number of Identity Document</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input type=\\\"number\\\" required [(ngModel)]=\\\"passengerModel.numberOfIdentityDoc\\\" placeholder=\\\"Number of Identity Document\\\"\\r\\n              class=\\\"form-control form-control-sm\\\" name=\\\"numberOfIdentityDoc\\\" integerValidator positiveNumberValidator>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"alert alert-danger\\\" *ngIf=\\\"formValid\\\">\\r\\n          <li>\\r\\n            <small>Identity document number must be an integer.</small>\\r\\n          </li>\\r\\n          <li>\\r\\n            <small>Identity document number must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n\\r\\n        <app-find-port-of-embarkation></app-find-port-of-embarkation>\\r\\n\\r\\n        \\r\\n\\r\\n        <div class=\\\"form-group row\\\" required>\\r\\n          <label for=\\\"transit\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Transit</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <ng-select class=\\\"ng-select-placeholder-size\\\" [items]=\\\"countryList\\\" [(ngModel)]=\\\"passengerModel.transit\\\" name=\\\"transit\\\" [closeOnSelect]=\\\"true\\\"\\r\\n              bindLabel=\\\"name\\\" placeholder=\\\"Transit\\\" (change)=\\\"selectNationality($event)\\\">\\r\\n            </ng-select>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n      </div>\\r\\n      <!-- /.col-lg-6 -->\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div class=\\\"col-lg-12\\\">\\r\\n\\r\\n    <pre>{{ passengerModel | json }}</pre>\\r\\n\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button *ngIf=\\\"form.valid\\\" type=\\\"submit\\\" class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"addPassenger()\\\">\\r\\n        <span>Submit</span>\\r\\n      </button>\\r\\n      <button *ngIf=\\\"!form.valid\\\" type=\\\"submit\\\" disabled class=\\\"btn btn-ssn mt-2\\\">\\r\\n        <span>Submit</span>\\r\\n      </button>\\r\\n    </div>\\r\\n    <div class=\\\"form-group\\\">\\r\\n      <button type=\\\"submit\\\" class=\\\"btn btn-ssn mt-2\\\" (click)=addMockData()>\\r\\n        <span>Add mockdata</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mb-3\\\">\\r\\n\\r\\n      <div class=\\\"table-responsive\\\">\\r\\n        <div ng2-st-add-button=\\\"\\\" ng-reflect-grid=\\\"[object Object]\\\" class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\r\\n        </div>\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"passengerListDataSource\\\"></ng2-smart-table>\\r\\n\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.html\n// module chunks = main","import { Component, OnInit, ViewChild, Input, OnDestroy } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { DeleteButtonComponent } from '../shared/delete-button/delete-button.component';\r\nimport { PassengerModel } from 'app/shared/models/port-call-passenger-model';\r\nimport { PortCallPassengerListService } from 'app/shared/services/port-call-passenger-list.service';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-passenger-list',\r\n  templateUrl: './passenger-list.component.html',\r\n  styleUrls: ['./passenger-list.component.css']\r\n})\r\nexport class PassengerListComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() showDropdown = true;\r\n\r\n  portCallId: number;\r\n  passengerList: any[] = [];\r\n  listIsPristine = true;\r\n\r\n  countryList: string[] = ['Norway', 'Sweeden', 'Australia'];\r\n\r\n  countryOfBirth: string;\r\n  passengerModel: PassengerModel = new PassengerModel();\r\n\r\n  locationModel: any;\r\n\r\n  formValid = false;\r\n\r\n  @ViewChild(NgForm) form: NgForm;\r\n\r\n  passengerListDataSource: LocalDataSource = new LocalDataSource();\r\n\r\n  tableSettings = {\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    editor: {\r\n      config: {\r\n        completer: {\r\n          descriptionField: 'Search here'\r\n        }\r\n      }\r\n    },\r\n    noDataMessage: 'There are no passengers in this list.',\r\n    columns: {\r\n      passengerId: {\r\n        title: 'Passenger ID'\r\n      },\r\n      familyName: {\r\n        title: 'Family Name',\r\n      },\r\n      givenName: {\r\n        title: 'Given Name'\r\n      },\r\n      nationality: {\r\n        title: 'Nationality'\r\n      },\r\n      dateOfBirth: {\r\n        title: 'Date of Birth'\r\n      },\r\n      placeOfBirth: {\r\n        title: 'Place of Birth'\r\n      },\r\n      countryOfBirth: {\r\n        title: 'Location Onboard'\r\n      },\r\n      natureOfIdentityDoc: {\r\n        title: 'Nature of Identity Document'\r\n      },\r\n      numberOfIdentityDoc: {\r\n        title: 'Identity Document No.'\r\n      },\r\n      permitNumber: {\r\n        title: 'Permit Number'\r\n      },\r\n      portOfEmbarkation: {\r\n        title: 'Port of Embarkation'\r\n      },\r\n      portOfDisembarkation: {\r\n        title: 'Port of Disembarkation'\r\n      },\r\n      delete: {\r\n        title: 'Delete',\r\n        // deleteButtonContent: 'Delete',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: DeleteButtonComponent,\r\n      },\r\n    }\r\n  };\r\n\r\n  countries = ['Norway', 'Sweden'];\r\n\r\n  passengerListSubscription: Subscription;\r\n  passengerModelSubscription: Subscription;\r\n\r\n  constructor(\r\n    private passengerListService: PortCallPassengerListService,\r\n    private locationService: LocationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.passengerListSubscription = this.passengerListService.passengerList$.subscribe(list => {\r\n      if (list) {\r\n        this.passengerList = list;\r\n        this.passengerListDataSource.load(list);\r\n      }\r\n    });\r\n\r\n    this.passengerModelSubscription = this.passengerListService.passengerModel$.subscribe(model => {\r\n      if (model) {\r\n        this.passengerModel = model;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.passengerListSubscription.unsubscribe();\r\n    this.passengerModelSubscription.unsubscribe();\r\n  }\r\n\r\n  addPassenger() {\r\n    this.listIsPristine = false;\r\n    if (this.passengerList.length > 0) {\r\n      this.passengerModel.passengerId = this.passengerList[this.passengerList.length - 1].passengerId + 1;\r\n    } else {\r\n      this.passengerModel.passengerId = 1;\r\n    }\r\n\r\n    // Add this passenger to local model and create new model\r\n    this.passengerList.push(this.passengerModel);\r\n    this.passengerModel = new PassengerModel();\r\n\r\n    // Update values in service\r\n    this.passengerListService.setPassengerModel(this.passengerModel);\r\n    this.passengerListService.setPassengersList(\r\n      this.passengerList\r\n    );\r\n  }\r\n\r\n  isValid(valid: Boolean): Boolean {\r\n    this.sendMetaData();\r\n    return valid;\r\n  }\r\n\r\n  private sendMetaData(): void {\r\n    this.passengerListService.setPassengerListMeta({ valid: this.form.valid });\r\n  }\r\n\r\n\r\n  selectNationality($event) {\r\n    this.passengerModel.nationality = $event.name;\r\n  }\r\n\r\n  selectCountryOfBirth($event) {\r\n    this.passengerModel.countryOfBirth = $event.name;\r\n  }\r\n\r\n  addMockData() {\r\n    const mockData = {\r\n      familyName: 'Dalan',\r\n      givenName: 'Camilla',\r\n      nationality: 'Norwegian',\r\n      dateOfBirth: 130794,\r\n      placeOfBirth: 'Oslo',\r\n      countryOfBirth: 'Norway',\r\n      natureOfIdentityDoc: 'Passport',\r\n      numberOfIdentityDoc: 39572824,\r\n      permitNumber: null,\r\n      portOfEmbarkation: 'Trondheim',\r\n      portOfDisembarkation: 'Oslo',\r\n      transit: true,\r\n      passengerId: 49292,\r\n      portCallId: 160\r\n    };\r\n\r\n    this.passengerModel = mockData;\r\n    this.addPassenger();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/passenger-list.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/search-passenger-port/search-passenger-port.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/search-passenger-port/search-passenger-port.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img src=\\\"assets/images/flags/128x128/{{r.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\r\\n  <strong *ngIf=\\\"r.locationCode\\\">Code: </strong> {{ r.locationCode }}\\r\\n</ng-template>\\r\\n\\r\\n<div *ngIf=\\\"!locationSelected\\\" class=\\\"form-group row\\\">\\r\\n  <label for=\\\"search-location\\\" class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\">Port of Embarkation</label>\\r\\n  <div class=\\\"col my-auto\\\">\\r\\n    <input id=\\\"search-location\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"locationModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n      [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectLocation($event)\\\" placeholder=\\\"Enter search here...\\\"\\r\\n    />\\r\\n  </div>\\r\\n  <div class=\\\"col-2\\\">\\r\\n    <div *ngIf=\\\"searching\\\">\\r\\n      <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/location.gif\\\" height=\\\"32px\\\">\\r\\n      <p>Searching</p>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"searchFailed\\\">\\r\\n      <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n      <p>No results</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/search-passenger-port/search-passenger-port.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/search-passenger-port/search-passenger-port.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\r\n\r\n@Component({\r\n  selector: 'app-search-passenger-port',\r\n  templateUrl: './search-passenger-port.component.html',\r\n  styleUrls: ['./search-passenger-port.component.css']\r\n})\r\nexport class SearchPassengerPortComponent implements OnInit {\r\n\r\n  @Input() showDropdown = true;\r\n  @Input() restrictTypeHarbour = false;\r\n\r\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN_2;\r\n  locationModel: any;\r\n  locationSelected = false;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private locationService: LocationService) { }\r\n\r\n  ngOnInit() {\r\n    this.locationService.setLocationData(null);\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap(term => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2);\r\n      }),\r\n      switchMap(term => (this.showDropdown) ?\r\n        this.locationService.search(term, this.restrictTypeHarbour, this.resultsDropdown).pipe(\r\n          tap(() => {\r\n            this.searchFailed = false;\r\n          }),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          })\r\n        ) : of([])\r\n      ),\r\n      tap(res => {\r\n        if (this.showDropdown) {\r\n          this.searching = false;\r\n          this.searchFailed = this.locationModel.length >= 2 && res.length === 0;\r\n        } else {\r\n          this.locationService.search(this.locationModel, this.restrictTypeHarbour, this.resultsWithoutDropdown).subscribe(\r\n            data => {\r\n              this.searchFailed = this.locationModel.length >= 2 && data.length === 0;\r\n              this.locationService.setLocationSearchData(data);\r\n              this.searching = false;\r\n            });\r\n        }\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    )\r\n\r\n  formatter = (x: { locationId: string }) => x.locationId;\r\n\r\n  selectLocation($event) {\r\n    this.locationSelected = true;\r\n    this.locationModel = $event.item;\r\n    this.locationService.setLocationData(this.locationModel);\r\n  }\r\n\r\n  deselectLocation() {\r\n    this.locationSelected = false;\r\n    this.locationService.setLocationData(null);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/passenger-list/search-passenger-port/search-passenger-port.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.css\n// module chunks = main","module.exports = \"<app-ssn-card [header]=\\\"'Cargo Brief Description'\\\" [icon]=\\\"'cargo.png'\\\">\\r\\n  <div class=\\\"form-group\\\">\\r\\n    <label for=\\\"cargoDescription\\\">Brief description of cargo:</label>\\r\\n    <textarea class=\\\"form-control\\\" id=\\\"cargoDescription\\\" rows=\\\"5\\\" [(ngModel)]=\\\"cargoDescription\\\" (ngModelChange)=\\\"onCargoDescriptionChange()\\\"></textarea>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-cargo-description',\r\n  templateUrl: './cargo-description.component.html',\r\n  styleUrls: ['./cargo-description.component.css']\r\n})\r\nexport class CargoDescriptionComponent implements OnInit, OnDestroy {\r\n\r\n  cargoDescription: string;\r\n\r\n  cargoBriefDescriptionSubscription: Subscription;\r\n\r\n  constructor(private detailsService: PortCallDetailsService) { }\r\n\r\n  ngOnInit() {\r\n    this.cargoBriefDescriptionSubscription = this.detailsService.cargoBriefDescriptionData$.subscribe(\r\n      cargoDescriptionData => {\r\n        this.cargoDescription = cargoDescriptionData;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.cargoBriefDescriptionSubscription.unsubscribe();\r\n  }\r\n\r\n  onCargoDescriptionChange() {\r\n    this.detailsService.setCargoBriefDescriptionData(this.cargoDescription);\r\n    this.touchData();\r\n  }\r\n\r\n  touchData() {\r\n    this.detailsService.setDetailsPristine(false);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/cargo-description/cargo-description.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Crew, Passengers and Dimensions\\\" icon=\\\"crew.png\\\">\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"number_of_crew\\\">Number of Crew</label>\\r\\n            <input name=\\\"number_of_crew\\\" type=\\\"number\\\" #numberOfCrew=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter number of crew\\\"\\r\\n              integerValidator positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.numberOfCrew\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(numberOfCrew.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"numberOfCrew.hasError('notIntegerError')\\\">\\r\\n            <small>Number of crew must be an integer.</small>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"numberOfCrew.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Number of crew must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"number_of_passengers\\\">Number of Passengers</label>\\r\\n            <input name=\\\"number_of_passengers\\\" type=\\\"number\\\" #numberOfPassengers=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter number of passengers\\\"\\r\\n              integerValidator positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.numberOfPassengers\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(numberOfPassengers.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"numberOfPassengers.hasError('notIntegerError')\\\">\\r\\n            <small>Number of passengers must be an integer.</small>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"numberOfPassengers.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Number of passengers must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"actual_draught\\\">Actual Draught</label>\\r\\n            <input name=\\\"actual_draught\\\" type=\\\"number\\\" #actualDraught=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter actual draught\\\"\\r\\n              positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.actualDraught\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(actualDraught.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"actualDraught.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Actual draught must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <label class=\\\"col-form-label-sm no-wrap mb-0\\\" for=\\\"air_draught\\\">Air Draught</label>\\r\\n            <input name=\\\"air_draught\\\" type=\\\"number\\\" #airDraught=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter air draught\\\"\\r\\n              positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.airDraught\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(airDraught.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"airDraught.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Air draught must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { CrewPassengersAndDimensionsModel } from './crewPassengersAndDimensionsModel';\r\n\r\n@Component({\r\n  selector: 'app-crew-passengers-dimensions',\r\n  templateUrl: './crew-passengers-dimensions.component.html',\r\n  styleUrls: ['./crew-passengers-dimensions.component.css']\r\n})\r\nexport class CrewPassengersDimensionsComponent implements OnInit, OnDestroy {\r\n\r\n  @ViewChild(NgForm) form: NgForm;\r\n\r\n  crewPassengersAndDimensionsModel: CrewPassengersAndDimensionsModel = {\r\n    numberOfCrew: null,\r\n    numberOfPassengers: null,\r\n    actualDraught: null,\r\n    airDraught: null\r\n  };\r\n\r\n  crewPassengersAndDimensionsDataSubscription: Subscription;\r\n\r\n  constructor(private portCallDetailsService: PortCallDetailsService) { }\r\n\r\n  ngOnInit() {\r\n    this.crewPassengersAndDimensionsDataSubscription = this.portCallDetailsService.crewPassengersAndDimensionsData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.crewPassengersAndDimensionsModel = data;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.crewPassengersAndDimensionsDataSubscription.unsubscribe();\r\n  }\r\n\r\n  persistData() {\r\n    this.portCallDetailsService.setCrewPassengersAndDimensionsData(this.crewPassengersAndDimensionsModel);\r\n  }\r\n\r\n  isValid(valid: boolean): boolean {\r\n    this.sendMetaData();\r\n    return valid;\r\n  }\r\n\r\n  private sendMetaData(): void {\r\n    this.portCallDetailsService.setCrewPassengersAndDimensionsMeta({ valid: this.form.valid });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-reporting></app-reporting>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-crew-passengers-dimensions></app-crew-passengers-dimensions>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-cargo-description></app-cargo-description>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-purpose></app-purpose>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-save-details [portCallId]=\\\"portCallId\\\"></app-save-details>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-port-call-details',\r\n  templateUrl: './port-call-details.component.html',\r\n  styleUrls: ['./port-call-details.component.css']\r\n})\r\nexport class PortCallDetailsComponent implements OnInit {\r\n\r\n  @Input() portCallId: number;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Port Call Purpose\\\" icon=\\\"target.png\\\">\\r\\n  <label for=\\\"purposes\\\">\\r\\n    <span class=\\\"no-wrap\\\">Select purposes for this</span>\\r\\n    <span class=\\\"no-wrap\\\">port call.</span>\\r\\n  </label>\\r\\n  <ng-select id=\\\"purposes\\\" [items]=\\\"purposeList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select purposes\\\"\\r\\n    [(ngModel)]=\\\"selectedPurposes\\\" (change)=\\\"purposeSelected()\\\">\\r\\n  </ng-select>\\r\\n\\r\\n  <div *ngIf=\\\"otherPurposeSelected\\\" class=\\\"form-group row mt-3\\\">\\r\\n    <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"other_purpose\\\">Specify Other Purpose:</label>\\r\\n    <div class=\\\"col my-auto\\\">\\r\\n      <input [(ngModel)]=\\\"otherPurposeName\\\" name=\\\"other_purpose\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"other_purpose\\\"\\r\\n        placeholder=\\\"Enter other purpose\\\" (ngModelChange)=\\\"setOtherPurposeName()\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { PurposeService } from 'app/shared/services/purpose.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nconst OTHER_PURPOSE_ID = 100249;\r\n\r\n@Component({\r\n  selector: 'app-purpose',\r\n  templateUrl: './purpose.component.html',\r\n  styleUrls: ['./purpose.component.css'],\r\n  providers: [PurposeService]\r\n})\r\nexport class PurposeComponent implements OnInit, OnDestroy {\r\n\r\n  selectedPurposes = [];\r\n  purposeList: any[] = [];\r\n  amountOfPurposes = 0;\r\n\r\n  otherPurposeSelected = false;\r\n  otherPurposeName = '';\r\n\r\n  getPurposesSubscription: Subscription;\r\n  portCallPurposeDataSubscription: Subscription;\r\n  otherPurposeNameSubscription: Subscription;\r\n\r\n  constructor(private purposeService: PurposeService, private portCallDetailsService: PortCallDetailsService) { }\r\n\r\n  ngOnInit() {\r\n    this.getPurposesSubscription = this.purposeService.getPurposes().subscribe(\r\n      data => {\r\n        this.purposeList = data;\r\n        this.amountOfPurposes = Object.keys(this.purposeList).length;\r\n      }\r\n    );\r\n    this.portCallPurposeDataSubscription = this.portCallDetailsService.portCallPurposeData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.selectedPurposes = data;\r\n          this.otherPurposeSelected = (this.selectedPurposes.find(p => p.portCallPurposeId === OTHER_PURPOSE_ID) != null);\r\n        }\r\n      }\r\n    );\r\n    this.otherPurposeNameSubscription = this.portCallDetailsService.otherPurposeName$.subscribe(\r\n      data => {\r\n        this.otherPurposeName = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.getPurposesSubscription.unsubscribe();\r\n    this.portCallPurposeDataSubscription.unsubscribe();\r\n    this.otherPurposeNameSubscription.unsubscribe();\r\n  }\r\n\r\n  purposeSelected() {\r\n    this.portCallDetailsService.setPortCallPurposeData(this.selectedPurposes);\r\n    console.log('SELECTED: ', this.selectedPurposes);\r\n    if (this.otherPurposeSelected) {\r\n      this.setOtherPurposeName();\r\n    }\r\n  }\r\n\r\n  setOtherPurposeName() {\r\n    this.portCallDetailsService.setOtherPurposeName(this.otherPurposeName);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Reporting for this Port Call\\\" icon=\\\"verification-clipboard.png\\\">\\r\\n  <form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-check mx-2\\\" *ngFor=\\\"let cb of checkboxes\\\">\\r\\n      <input class=\\\"form-check-input clickable\\\" type=\\\"checkbox\\\" id=\\\"{{cb.name}}\\\" [checked]=\\\"cb.checked\\\" (change)=\\\"checkboxChecked(cb)\\\">\\r\\n      <label class=\\\"form-check-label clickable\\\" for=\\\"{{cb.name}}\\\">\\r\\n        <img src=\\\"{{baseIconUrl}}{{cb.icon}}\\\" height=\\\"16px\\\">{{cb.name}}\\r\\n      </label>\\r\\n    </div>\\r\\n  </form>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-reporting',\r\n  templateUrl: './reporting.component.html',\r\n  styleUrls: ['./reporting.component.css']\r\n})\r\nexport class ReportingComponent implements OnInit, OnDestroy {\r\n\r\n  baseIconUrl = 'assets/images/icons/128x128/';\r\n  reportingModel: {\r\n    reportingDpg: boolean,\r\n    reportingCargo: boolean,\r\n    reportingShipStores: boolean,\r\n    reportingCrew: boolean,\r\n    reportingPax: boolean,\r\n  };\r\n  checkboxes: any = [];\r\n\r\n  reportingForThisPortCallDataSubscription: Subscription;\r\n\r\n  constructor(private portCallDetailsService: PortCallDetailsService) { }\r\n\r\n  ngOnInit() {\r\n    this.reportingForThisPortCallDataSubscription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\r\n      data => {\r\n        if (data != null) {\r\n          this.reportingModel = data;\r\n\r\n        } else {\r\n          this.reportingModel = {\r\n            reportingDpg: null,\r\n            reportingCargo: null,\r\n            reportingShipStores: null,\r\n            reportingCrew: null,\r\n            reportingPax: null,\r\n          };\r\n        }\r\n        this.checkboxes = [\r\n          { name: 'DPG', icon: 'hazard.png', checked: this.reportingModel.reportingDpg || false },\r\n          { name: 'Cargo', icon: 'cargo.png', checked: this.reportingModel.reportingCargo || false },\r\n          { name: 'Ship Stores', icon: 'alcohol.png', checked: this.reportingModel.reportingShipStores || false },\r\n          { name: 'Crew', icon: 'crew.png', checked: this.reportingModel.reportingCrew || false },\r\n          { name: 'Pax', icon: 'pax.png', checked: this.reportingModel.reportingPax || false }\r\n        ];\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.reportingForThisPortCallDataSubscription.unsubscribe();\r\n  }\r\n\r\n  checkboxChecked(checkboxModel) {\r\n    checkboxModel.checked = !checkboxModel.checked;\r\n    switch (checkboxModel.name) {\r\n      case 'DPG':\r\n        this.reportingModel.reportingDpg = checkboxModel.checked;\r\n        break;\r\n      case 'Cargo':\r\n        this.reportingModel.reportingCargo = checkboxModel.checked;\r\n        break;\r\n      case 'Ship Stores':\r\n        this.reportingModel.reportingShipStores = checkboxModel.checked;\r\n        break;\r\n      case 'Crew':\r\n        this.reportingModel.reportingCrew = checkboxModel.checked;\r\n        break;\r\n      case 'Pax':\r\n        this.reportingModel.reportingPax = checkboxModel.checked;\r\n        break;\r\n      default:\r\n        console.log('Oops. Something went wrong with the checkboxes.');\r\n    }\r\n    this.portCallDetailsService.setReportingForThisPortCallData(this.reportingModel);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Save Port Call Details\\\" icon=\\\"save.png\\\">\\r\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!dataIsPristine\\\">\\r\\n    <div *ngIf=\\\"!crewPassengersAndDimensionsMeta.valid\\\">\\r\\n      <div class=\\\"alert alert-danger\\\">\\r\\n        <span>You can't save port call details.</span>\\r\\n        <br>\\r\\n        <span>Reason:</span>\\r\\n        <li *ngIf=\\\"!crewPassengersAndDimensionsMeta.valid\\\">\\r\\n          <small>There are errors in \\\"Crew, Passengers and Dimensions\\\"</small>\\r\\n        </li>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span>Save Details</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"saveDetails()\\\" *ngIf=\\\"crewPassengersAndDimensionsMeta.valid\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Details</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"text-center\\\" *ngIf=\\\"dataIsPristine\\\">\\r\\n    <span>{{ dataIsPristineText }}</span>\\r\\n    <br>\\r\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Details</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FormMetaData } from 'app/shared/interfaces/form-meta-data.interface';\r\nimport { PortCallDetailsModel } from 'app/shared/models/port-call-details-model';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\n\r\nconst INITIAL_DATA_IS_PRISTINE_TEXT = 'There are no unsaved changes in this page.';\r\nconst UPDATED_DATA_IS_PRISTINE_TEXT = 'Your changes have been saved.';\r\n\r\n@Component({\r\n  selector: 'app-save-details',\r\n  templateUrl: './save-details.component.html',\r\n  styleUrls: ['./save-details.component.css']\r\n})\r\nexport class SaveDetailsComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() portCallId: number;\r\n\r\n  detailsModel: PortCallDetailsModel = new PortCallDetailsModel();\r\n  reportingModel: any;\r\n  crewPassengersAndDimensionsModel: any;\r\n  purposeModel = [];\r\n  otherPurposeName: any;\r\n\r\n  crewPassengersAndDimensionsMeta: FormMetaData = { valid: true };\r\n\r\n  dataIsPristine = true;\r\n  dataIsPristineText: string;\r\n\r\n  detailsPristineSubscription: Subscription;\r\n  reportingForThisPortCallDataSubscription: Subscription;\r\n  crewPassengersAndDimensionsDataSubscription: Subscription;\r\n  portCallPurposeDataSubscription: Subscription;\r\n  otherPurposeNameSubscription: Subscription;\r\n  crewPassengersAndDimensionsMetaSubscription: Subscription;\r\n  cargoDescriptionSubscription: Subscription;\r\n\r\n  constructor(private portCallService: PortCallService, private portCallDetailsService: PortCallDetailsService) {\r\n    this.dataIsPristineText = INITIAL_DATA_IS_PRISTINE_TEXT;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.detailsPristineSubscription = this.portCallDetailsService.detailsPristine$.subscribe(detailsDataIsPristine => {\r\n      this.dataIsPristine = detailsDataIsPristine;\r\n    });\r\n    // Reporting\r\n    this.reportingForThisPortCallDataSubscription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData) {\r\n          this.detailsModel.reportingCargo = reportingData.reportingCargo;\r\n          this.detailsModel.reportingCrew = reportingData.reportingCrew;\r\n          this.detailsModel.reportingDpg = reportingData.reportingDpg;\r\n          this.detailsModel.reportingPax = reportingData.reportingPax;\r\n          this.detailsModel.reportingShipStores = reportingData.reportingShipStores;\r\n        }\r\n      }\r\n    );\r\n    // Crew, passengers, and dimensions\r\n    this.crewPassengersAndDimensionsDataSubscription = this.portCallDetailsService.crewPassengersAndDimensionsData$.subscribe(\r\n      cpadData => {\r\n        if (cpadData) {\r\n          this.crewPassengersAndDimensionsModel = cpadData;\r\n          this.detailsModel.numberOfCrew = cpadData.numberOfCrew;\r\n          this.detailsModel.numberOfPassengers = cpadData.numberOfPassengers;\r\n          this.detailsModel.airDraught = cpadData.airDraught;\r\n          this.detailsModel.actualDraught = cpadData.actualDraught;\r\n        }\r\n      }\r\n    );\r\n    // Cargo Brief Description\r\n    this.cargoDescriptionSubscription = this.portCallDetailsService.cargoBriefDescriptionData$.subscribe(\r\n      cargoDescriptionData => {\r\n        this.detailsModel.cargoBriefDescription = cargoDescriptionData;\r\n      }\r\n    );\r\n    // Purpose\r\n    this.portCallPurposeDataSubscription = this.portCallDetailsService.portCallPurposeData$.subscribe(purposeData => {\r\n      if (purposeData) {\r\n        this.purposeModel = purposeData;\r\n      }\r\n    });\r\n\r\n    this.otherPurposeNameSubscription = this.portCallDetailsService.otherPurposeName$.subscribe(otherNameData => {\r\n      this.otherPurposeName = otherNameData;\r\n    });\r\n\r\n    this.crewPassengersAndDimensionsMetaSubscription = this.portCallDetailsService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      cpadMetaData => {\r\n        this.crewPassengersAndDimensionsMeta = cpadMetaData;\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.detailsPristineSubscription.unsubscribe();\r\n    this.reportingForThisPortCallDataSubscription.unsubscribe();\r\n    this.crewPassengersAndDimensionsDataSubscription.unsubscribe();\r\n    this.portCallPurposeDataSubscription.unsubscribe();\r\n    this.otherPurposeNameSubscription.unsubscribe();\r\n    this.crewPassengersAndDimensionsMetaSubscription.unsubscribe();\r\n    this.cargoDescriptionSubscription.unsubscribe();\r\n  }\r\n\r\n  saveDetails() {\r\n    if (this.crewPassengersAndDimensionsMeta.valid) {\r\n      this.detailsModel.portCallId = this.portCallId;\r\n      this.detailsModel.portCallDetailsId = this.portCallId;\r\n      this.detailsModel.numberOfCrew = this.crewPassengersAndDimensionsModel.numberOfCrew;\r\n      this.detailsModel.numberOfPassengers = this.crewPassengersAndDimensionsModel.numberOfPassengers;\r\n      this.detailsModel.airDraught = this.crewPassengersAndDimensionsModel.airDraught;\r\n      this.detailsModel.actualDraught = this.crewPassengersAndDimensionsModel.actualDraught;\r\n\r\n      this.portCallService.saveDetails(\r\n        this.detailsModel,\r\n        this.purposeModel,\r\n        this.otherPurposeName\r\n      );\r\n      this.dataIsPristineText = UPDATED_DATA_IS_PRISTINE_TEXT;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/prev-and-next-poc.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/prev-and-next-poc.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Previous Port of Call\\\" icon=\\\"location.png\\\">\\r\\n    <app-search-location *ngIf=\\\"!prevLocationFound\\\" [restrictTypeHarbour]=true (locationResult)=\\\"onPrevLocationResult($event)\\\"></app-search-location>\\r\\n    <div class=\\\"text-center\\\" *ngIf=\\\"prevLocationModel\\\">\\r\\n        <app-ssn-table [entryData]=\\\"prevLocationData\\\"></app-ssn-table>\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectPrevLocation()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n    </div>\\r\\n    <app-date-time-picker header=\\\"ETD\\\" [dateTimeModel]=\\\"prevEtdModel\\\" (dateTimeResult)=\\\"onEtdResult($event)\\\"></app-date-time-picker>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"prevEtdIsAfterCurrentEtaError\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <div class=\\\"col-8 alert alert-danger\\\" role=\\\"alert\\\">\\r\\n            <span>ETD for previous Port of Call must be before ETA for current Port of Call.</span>\\r\\n        </div>\\r\\n    </div>\\r\\n</app-ssn-card>\\r\\n\\r\\n<app-ssn-card header=\\\"Next Port of Call\\\" icon=\\\"location.png\\\">\\r\\n    <app-search-location *ngIf=\\\"!nextLocationFound\\\" [restrictTypeHarbour]=true (locationResult)=\\\"onNextLocationResult($event)\\\"></app-search-location>\\r\\n    <div class=\\\"text-center\\\" *ngIf=\\\"nextLocationModel\\\">\\r\\n        <app-ssn-table [entryData]=\\\"nextLocationData\\\"></app-ssn-table>\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectNextLocation()\\\">\\r\\n            <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n    </div>\\r\\n    <app-date-time-picker header=\\\"ETA\\\" [dateTimeModel]=\\\"nextEtaModel\\\" (dateTimeResult)=\\\"onEtaResult($event)\\\"></app-date-time-picker>\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"nextEtaIsBeforeCurrentEtdError\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <div class=\\\"col-8 alert alert-danger\\\" role=\\\"alert\\\">\\r\\n            <span>ETA for next Port of Call must be after ETA for current Port of Call.</span>\\r\\n        </div>\\r\\n    </div>\\r\\n</app-ssn-card>\\r\\n\\r\\n<app-save-prev-and-next-poc [portCallId]=\\\"portCallId\\\"></app-save-prev-and-next-poc>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/prev-and-next-poc.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/prev-and-next-poc.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\r\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\r\nimport { LocationProperties } from 'app/shared/constants/location-properties';\r\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport { PrevAndNextPocService } from 'app/shared/services/prev-and-next-poc.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-prev-and-next-poc',\r\n  templateUrl: './prev-and-next-poc.component.html',\r\n  styleUrls: ['./prev-and-next-poc.component.css']\r\n})\r\nexport class PrevAndNextPocComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() portCallId: number;\r\n\r\n  prevLocationModel: LocationModel = null;\r\n  nextLocationModel: LocationModel = null;\r\n\r\n  prevLocationFound = false;\r\n  nextLocationFound = false;\r\n\r\n  prevEtdModel: DateTime;\r\n  nextEtaModel: DateTime;\r\n\r\n  currentEtaModel: DateTime;\r\n  currentEtdModel: DateTime;\r\n\r\n  prevEtdIsAfterCurrentEtaError = false;\r\n  nextEtaIsBeforeCurrentEtdError = false;\r\n\r\n  prevLocationData = new LocationProperties().getPropertyList();\r\n  nextLocationData = new LocationProperties().getPropertyList();\r\n\r\n  prevPortOfCallDataSubscription: Subscription;\r\n  nextPortOfCallDataSubscription: Subscription;\r\n  prevPortOfCallEtdDataSubscription: Subscription;\r\n  nextPortOfCallEtaDataSubscription: Subscription;\r\n  currentPortOfCallEtaEtdSubscription: Subscription;\r\n\r\n  constructor(private prevAndNextPocService: PrevAndNextPocService, private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.prevPortOfCallDataSubscription = this.prevAndNextPocService.prevPortOfCallData$.subscribe(\r\n      data => {\r\n        this.prevLocationModel = data;\r\n        if (data) {\r\n          console.log(data);\r\n          this.prevLocationFound = true;\r\n          LocationProperties.setLocationData(this.prevLocationData, this.prevLocationModel);\r\n          if (this.prevLocationModel.country != null) {\r\n            const twoCharCode = this.prevLocationModel.country.twoCharCode.toLowerCase() || 'xx';\r\n            const countryFlag = twoCharCode + '.png';\r\n            LocationProperties.setCountry(this.prevLocationData, this.prevLocationModel.country.name, countryFlag);\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    this.nextPortOfCallDataSubscription = this.prevAndNextPocService.nextPortOfCallData$.subscribe(\r\n      data => {\r\n        this.nextLocationModel = data;\r\n        if (data) {\r\n          console.log(data);\r\n          this.nextLocationFound = true;\r\n          LocationProperties.setLocationData(this.nextLocationData, this.nextLocationModel);\r\n          if (this.nextLocationModel.country != null) {\r\n            const twoCharCode = this.nextLocationModel.country.twoCharCode.toLowerCase() || 'xx';\r\n            const countryFlag = twoCharCode + '.png';\r\n            LocationProperties.setCountry(this.nextLocationData, this.nextLocationModel.country.name, countryFlag);\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n    this.prevPortOfCallEtdDataSubscription = this.prevAndNextPocService.prevPortOfCallEtdData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          const dateTime = new Date(data);\r\n          this.prevEtdModel = {\r\n            date: new NgbDate(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate()),\r\n            time: new NgbTime(dateTime.getHours(), dateTime.getMinutes(), 0)\r\n          };\r\n        } else {\r\n          this.prevEtdModel = {\r\n            date: null,\r\n            time: new NgbTime(0, 0, 0)\r\n          };\r\n        }\r\n        this.validateDateTime();\r\n      }\r\n    );\r\n\r\n    this.nextPortOfCallEtaDataSubscription = this.prevAndNextPocService.nextPortOfCallEtaData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          const dateTime = new Date(data);\r\n          this.nextEtaModel = {\r\n            date: new NgbDate(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate()),\r\n            time: new NgbTime(dateTime.getHours(), dateTime.getMinutes(), 0)\r\n          };\r\n        } else {\r\n          this.nextEtaModel = {\r\n            date: null,\r\n            time: new NgbTime(0, 0, 0)\r\n          };\r\n        }\r\n        this.validateDateTime();\r\n      }\r\n    );\r\n\r\n    this.currentPortOfCallEtaEtdSubscription = this.portCallService.etaEtdData$.subscribe(\r\n      etaEtdData => {\r\n        if (etaEtdData) {\r\n          this.currentEtaModel = {\r\n            date: new NgbDate(etaEtdData.eta.year, etaEtdData.eta.month, etaEtdData.eta.day),\r\n            time: new NgbTime(etaEtdData.eta.hour, etaEtdData.eta.minute, 0)\r\n          };\r\n          this.currentEtdModel = {\r\n            date: new NgbDate(etaEtdData.etd.year, etaEtdData.etd.month, etaEtdData.etd.day),\r\n            time: new NgbTime(etaEtdData.etd.hour, etaEtdData.etd.minute, 0)\r\n          };\r\n        }\r\n        this.validateDateTime();\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.prevPortOfCallDataSubscription.unsubscribe();\r\n    this.nextPortOfCallDataSubscription.unsubscribe();\r\n    this.prevPortOfCallEtdDataSubscription.unsubscribe();\r\n    this.nextPortOfCallEtaDataSubscription.unsubscribe();\r\n    this.currentPortOfCallEtaEtdSubscription.unsubscribe();\r\n  }\r\n\r\n  onPrevLocationResult(prevLocationResult) {\r\n    this.prevAndNextPocService.setPrevPortOfCall(prevLocationResult);\r\n  }\r\n\r\n  onNextLocationResult(nextLocationResult) {\r\n    this.prevAndNextPocService.setNextPortOfCall(nextLocationResult);\r\n  }\r\n\r\n  deselectPrevLocation() {\r\n    this.prevLocationFound = false;\r\n    this.prevAndNextPocService.setPrevPortOfCall(null);\r\n  }\r\n\r\n  deselectNextLocation() {\r\n    this.nextLocationFound = false;\r\n    this.prevAndNextPocService.setNextPortOfCall(null);\r\n  }\r\n\r\n  onEtdResult(etdResult) {\r\n    if (etdResult) {\r\n      const dateTime: DateTime = etdResult;\r\n      const date: Date = new Date(dateTime.date.year, dateTime.date.month - 1, dateTime.date.day, dateTime.time.hour, dateTime.time.minute);\r\n      this.prevAndNextPocService.setPrevPortOfCallEtd(date);\r\n    } else {\r\n      this.prevAndNextPocService.setPrevPortOfCallEtd(null);\r\n    }\r\n    this.validateDateTime();\r\n    this.persistDateTime();\r\n  }\r\n\r\n  onEtaResult(etaResult) {\r\n    if (etaResult) {\r\n      const dateTime: DateTime = etaResult;\r\n      const date: Date = new Date(dateTime.date.year, dateTime.date.month - 1, dateTime.date.day, dateTime.time.hour, dateTime.time.minute);\r\n      this.prevAndNextPocService.setNextPortOfCallEta(date);\r\n    } else {\r\n      this.prevAndNextPocService.setNextPortOfCallEta(null);\r\n    }\r\n    this.validateDateTime();\r\n    this.persistDateTime();\r\n  }\r\n\r\n  private validateDateTime() {\r\n    const prevEtdDate = this.prevEtdModel != null && this.prevEtdModel.date != null ? new NgbDate(this.prevEtdModel.date.year, this.prevEtdModel.date.month, this.prevEtdModel.date.day) : null;\r\n    const nextEtaDate = this.nextEtaModel != null && this.nextEtaModel.date != null ? new NgbDate(this.nextEtaModel.date.year, this.nextEtaModel.date.month, this.nextEtaModel.date.day) : null;\r\n\r\n    // Checking for sequence errors between prev and current port of call\r\n    if (prevEtdDate && this.currentEtaModel) {\r\n      this.prevEtdIsAfterCurrentEtaError = prevEtdDate.after(this.currentEtaModel.date);\r\n      if (prevEtdDate.equals(this.currentEtaModel.date)) {\r\n        this.prevEtdIsAfterCurrentEtaError = this.prevEtdModel.time.hour > this.currentEtaModel.time.hour\r\n          || (this.prevEtdModel.time.hour === this.currentEtaModel.time.hour\r\n            && this.prevEtdModel.time.minute >= this.currentEtaModel.time.minute);\r\n      }\r\n    } else {\r\n      this.prevEtdIsAfterCurrentEtaError = false;\r\n    }\r\n\r\n    // Checking for sequence errors between next and current port of call\r\n    if (nextEtaDate && this.currentEtdModel) {\r\n      this.nextEtaIsBeforeCurrentEtdError = nextEtaDate.before(this.currentEtdModel.date);\r\n      if (nextEtaDate.equals(this.currentEtdModel.date)) {\r\n        this.nextEtaIsBeforeCurrentEtdError = this.nextEtaModel.time.hour < this.currentEtdModel.time.hour\r\n          || (this.nextEtaModel.time.hour === this.currentEtdModel.time.hour\r\n            && this.nextEtaModel.time.minute <= this.currentEtdModel.time.minute);\r\n      }\r\n    } else {\r\n      this.nextEtaIsBeforeCurrentEtdError = false;\r\n    }\r\n    this.prevAndNextPocService.setPrevAndNextPortOfCallMeta({valid: !(this.prevEtdIsAfterCurrentEtaError || this.nextEtaIsBeforeCurrentEtdError)});\r\n  }\r\n\r\n  private persistDateTime() {\r\n    if (!this.prevEtdIsAfterCurrentEtaError && !this.nextEtaIsBeforeCurrentEtdError) {\r\n      if (this.prevEtdModel.date) {\r\n        const etdDateTime: Date = new Date(this.prevEtdModel.date.year, this.prevEtdModel.date.month - 1, this.prevEtdModel.date.day, this.prevEtdModel.time.hour, this.prevEtdModel.time.minute);\r\n        this.prevAndNextPocService.setPrevPortOfCallEtd(etdDateTime);\r\n      } else {\r\n        const etdDateTime: DateTime = {\r\n          date: null,\r\n          time: new NgbTime(0, 0, 0)\r\n        };\r\n        this.prevAndNextPocService.setPrevPortOfCallEtd(null);\r\n      }\r\n      if (this.nextEtaModel.date) {\r\n        const etaDateTime: Date = new Date(this.nextEtaModel.date.year, this.nextEtaModel.date.month - 1, this.nextEtaModel.date.day, this.nextEtaModel.time.hour, this.nextEtaModel.time.minute);\r\n        this.prevAndNextPocService.setNextPortOfCallEta(etaDateTime);\r\n      } else {\r\n        const etaDateTime: DateTime = {\r\n          date: null,\r\n          time: new NgbTime(0, 0, 0)\r\n        };\r\n        this.prevAndNextPocService.setNextPortOfCallEta(null);\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/prev-and-next-poc.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Save Voyages\\\" icon=\\\"save.png\\\">\\r\\n  <div *ngIf=\\\"(!prevLocationFound && prevEtdFound) || (!nextLocationFound && nextEtaFound) || dateSequenceError\\\"\\r\\n    class=\\\"text-center\\\">\\r\\n    <div class=\\\"alert alert-danger\\\">\\r\\n      <span>You can't save voyages.</span>\\r\\n      <br>\\r\\n      <span>Reason:</span>\\r\\n      <li *ngIf=\\\"!prevLocationFound && prevEtdFound\\\"><small>Previous Port of Call ETD is provided without a location</small></li>\\r\\n      <li *ngIf=\\\"!nextLocationFound && nextEtaFound\\\"><small>Next Port of Call ETA is provided without a location</small></li>\\r\\n      <li *ngIf=\\\"dateSequenceError\\\"><small>Date sequence error</small></li>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Voyages</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!((!prevLocationFound && prevEtdFound) || (!nextLocationFound && nextEtaFound) || dateSequenceError)\\\">\\r\\n    <div class=\\\"text-center\\\" *ngIf=\\\"!dataIsPristine\\\">\\r\\n      <button class=\\\"btn btn-ssn\\\" (click)=\\\"savePrevAndNextPoc()\\\">\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span>Save Voyages</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"text-center\\\" *ngIf=\\\"dataIsPristine\\\">\\r\\n      <span>{{ dataIsPristineText }}</span>\\r\\n      <br>\\r\\n      <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n        <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span>Save Voyages</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport { DateTime } from 'app/shared/interfaces/dateTime.interface';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { PrevAndNextPocService } from 'app/shared/services/prev-and-next-poc.service';\r\nimport { NgbDate } from '@ng-bootstrap/ng-bootstrap/datepicker/ngb-date';\r\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nconst INITIAL_DATA_IS_PRISTINE_TEXT = 'There are no unsaved changes in this page.';\r\nconst UPDATED_DATA_IS_PRISTINE_TEXT = 'Your changes have been saved.';\r\n\r\n@Component({\r\n  selector: 'app-save-prev-and-next-poc',\r\n  templateUrl: './save-prev-and-next-poc.component.html',\r\n  styleUrls: ['./save-prev-and-next-poc.component.css']\r\n})\r\nexport class SavePrevAndNextPocComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() portCallId: number;\r\n\r\n  dateSequenceError = false;\r\n\r\n  prevLocationModel: LocationModel = null;\r\n  nextLocationModel: LocationModel = null;\r\n\r\n  etdModel: DateTime = null;\r\n  etaModel: DateTime = null;\r\n\r\n  dataIsPristine = true;\r\n  dataIsPristineText: string;\r\n\r\n  prevLocationFound: boolean;\r\n  nextLocationFound: boolean;\r\n  prevEtdFound: boolean;\r\n  nextEtaFound: boolean;\r\n\r\n  dataIsPristineSubscription: Subscription;\r\n  prevPortOfCallDataSubscription: Subscription;\r\n  nextPortOfCallDataSubscription: Subscription;\r\n  prevPortOfCallEtdDataSubscription: Subscription;\r\n  nextPortOfCallEtaDataSubscription: Subscription;\r\n  prevAndNextPortOfCallMetaSubscription: Subscription;\r\n\r\n  constructor(\r\n    private portCallService: PortCallService,\r\n    private prevAndNextPocService: PrevAndNextPocService\r\n  ) {\r\n    this.dataIsPristineText = INITIAL_DATA_IS_PRISTINE_TEXT;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataIsPristineSubscription = this.prevAndNextPocService.dataIsPristine$.subscribe(\r\n      pristineData => {\r\n        this.dataIsPristine = pristineData;\r\n      }\r\n    );\r\n\r\n    this.prevPortOfCallDataSubscription = this.prevAndNextPocService.prevPortOfCallData$.subscribe(\r\n      prevLocationData => {\r\n        this.prevLocationFound = (prevLocationData != null);\r\n        this.prevLocationModel = prevLocationData;\r\n      }\r\n    );\r\n\r\n    this.nextPortOfCallDataSubscription = this.prevAndNextPocService.nextPortOfCallData$.subscribe(\r\n      nextLocationData => {\r\n        this.nextLocationFound = (nextLocationData != null);\r\n        this.nextLocationModel = nextLocationData;\r\n      }\r\n    );\r\n\r\n    this.prevPortOfCallEtdDataSubscription = this.prevAndNextPocService.prevPortOfCallEtdData$.subscribe(\r\n      etdData => {\r\n        if (etdData) {\r\n          this.prevEtdFound = true;\r\n          const dateTime = new Date(etdData);\r\n          this.etdModel = {\r\n            date: new NgbDate(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate()),\r\n            time: new NgbTime(dateTime.getHours(), dateTime.getMinutes(), 0)\r\n          };\r\n        } else {\r\n          this.prevEtdFound = false;\r\n          this.etdModel = null;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.nextPortOfCallEtaDataSubscription = this.prevAndNextPocService.nextPortOfCallEtaData$.subscribe(\r\n      etaData => {\r\n        if (etaData) {\r\n          this.nextEtaFound = true;\r\n          const dateTime = new Date(etaData);\r\n          this.etaModel = {\r\n            date: new NgbDate(dateTime.getFullYear(), dateTime.getMonth() + 1, dateTime.getDate()),\r\n            time: new NgbTime(dateTime.getHours(), dateTime.getMinutes(), 0)\r\n          };\r\n        } else {\r\n          this.nextEtaFound = false;\r\n          this.etaModel = null;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.prevAndNextPortOfCallMetaSubscription = this.prevAndNextPocService.prevAndNextPortOfCallMeta$.subscribe(\r\n      metaData => {\r\n        if (metaData) {\r\n          this.dateSequenceError = !metaData.valid;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.dataIsPristineSubscription.unsubscribe();\r\n    this.prevPortOfCallDataSubscription.unsubscribe();\r\n    this.nextPortOfCallDataSubscription.unsubscribe();\r\n    this.prevPortOfCallEtdDataSubscription.unsubscribe();\r\n    this.nextPortOfCallEtaDataSubscription.unsubscribe();\r\n  }\r\n\r\n  savePrevAndNextPoc() {\r\n    const prevDate = this.etdModel != null ? new Date(this.etdModel.date.year, this.etdModel.date.month - 1, this.etdModel.date.day, this.etdModel.time.hour, this.etdModel.time.minute) : null;\r\n    const nextDate = this.etaModel != null ? new Date(this.etaModel.date.year, this.etaModel.date.month - 1, this.etaModel.date.day, this.etaModel.time.hour, this.etaModel.time.minute) : null;\r\n    this.portCallService.savePrevAndNextPortCall(this.portCallId, this.prevLocationModel, this.nextLocationModel, prevDate, nextDate);\r\n    this.dataIsPristineText = UPDATED_DATA_IS_PRISTINE_TEXT;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/prev-and-next-poc/save-prev-and-next-poc/save-prev-and-next-poc.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/shared/delete-button/delete-button.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/shared/delete-button/delete-button.component.css\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"selectedForm\\\">\\r\\n  <button *ngSwitchCase=\\\"formNames.SHIP_STORES\\\" class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete Ship Store\\\" (click)=\\\"onDeleteClick(deleteModal)\\\">\\r\\n    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\r\\n  </button>\\r\\n\\r\\n  <button *ngSwitchCase=\\\"formNames.CARGO\\\" class=\\\"btn btn-sm btn-ssn\\\" ngbTooltip=\\\"Delete Cargo Item\\\" (click)=\\\"onDeleteClick(deleteModal)\\\">\\r\\n    <img height=\\\"16px\\\" src=\\\"assets/images/icons/128x128/white/cancel.png\\\">\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n<ng-template #deleteModal let-close=\\\"close()\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Confirm Deletion</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div [ngSwitch]=\\\"selectedForm\\\">\\r\\n      <span *ngSwitchCase=\\\"formNames.SHIP_STORES\\\">Delete ship store?</span>\\r\\n      <span *ngSwitchCase=\\\"formNames.CARGO\\\">Delete cargo item?</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\" [ngSwitch]=\\\"selectedForm\\\">\\r\\n    <button *ngSwitchCase=\\\"formNames.SHIP_STORES\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Delete Ship Store</span>\\r\\n    </button>\\r\\n    <button *ngSwitchCase=\\\"formNames.PAX\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deletePassengerEntry(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Passenger Entry</span>\\r\\n    </button>\\r\\n    <button *ngSwitchCase=\\\"formNames.CARGO\\\" class=\\\"btn btn-danger\\\" (click)=\\\"deleteItem(); close\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Delete</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/shared/delete-button/delete-button.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/shared/delete-button/delete-button.component.html\n// module chunks = main","import { Component, OnInit, Input, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { FORM_NAMES } from 'app/shared/constants/form-names';\r\nimport { PortCallPassengerListService } from 'app/shared/services/port-call-passenger-list.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { FalCargoService } from '../../../../../../../shared/services/fal-cargo.service';\r\nimport { CargoItemModel } from 'app/shared/models/cargo-item-model';\r\nimport { forEach } from '../../../../../../../../../node_modules/@angular/router/src/utils/collection';\r\n\r\n@Component({\r\n  selector: 'app-delete-button',\r\n  templateUrl: './delete-button.component.html',\r\n  styleUrls: ['./delete-button.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class DeleteButtonComponent implements OnInit, OnDestroy, ViewCell {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n  @Output() delete = new EventEmitter<any>();\r\n\r\n  selectedForm: string;\r\n  formNames: any;\r\n\r\n  portCallFormNameSubscription: Subscription;\r\n\r\n  constructor(\r\n    private modalService: NgbModal,\r\n    private shipStoresService: FalShipStoresService,\r\n    private passengerService: PortCallPassengerListService,\r\n    private contentService: ContentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.formNames = FORM_NAMES;\r\n\r\n    this.portCallFormNameSubscription = this.contentService.portCallFormName$.subscribe(name => {\r\n      this.selectedForm = name;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.portCallFormNameSubscription.unsubscribe();\r\n  }\r\n\r\n  onDeleteClick(content: any) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  deleteItem() {\r\n    console.log(this.rowData);\r\n    this.delete.emit(this.rowData);\r\n  }\r\n\r\n  deletePassengerEntry() {\r\n    this.passengerService.deletePassengerEntry(this.rowData);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/shared/delete-button/delete-button.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Save Ship Stores\\\" icon=\\\"save.png\\\">\\r\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!listIsPristine\\\">\\r\\n      <span>You have unsaved changes.</span>\\r\\n      <br>\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"saveShipStores()\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Ship Stores</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"text-center\\\" *ngIf=\\\"listIsPristine\\\">\\r\\n    <span>There is nothing to save.</span>\\r\\n    <br>\\r\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n      <img src=\\\"assets/images/icons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Ship Stores</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy, Input } from '@angular/core';\r\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\r\nimport { ShipStoresModel } from 'app/shared/models/ship-stores-model';\r\n\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-save-ship-stores',\r\n  templateUrl: './save-ship-stores.component.html',\r\n  styleUrls: ['./save-ship-stores.component.css']\r\n})\r\nexport class SaveShipStoresComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() portCallId: number;\r\n\r\n  shipStoresModel: ShipStoresModel = new ShipStoresModel();\r\n  reportingModel: any;\r\n\r\n  shipStoresList: ShipStoresModel[] = [];\r\n\r\n  listIsPristine: Boolean = true;\r\n\r\n  shipStoresListSubscription: Subscription;\r\n\r\n  saving = false;\r\n\r\n  constructor(\r\n    private shipStoresService: FalShipStoresService,\r\n    private portCallService: PortCallService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    // Get updated list of ship stores\r\n    this.shipStoresListSubscription = this.shipStoresService.shipStoresList$.subscribe(shipStoresList => {\r\n      if (shipStoresList) {\r\n        this.shipStoresList = shipStoresList;\r\n      }\r\n\r\n      this.shipStoresService.dataIsPristine$.subscribe(isPristine => {\r\n        this.listIsPristine = isPristine;\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.shipStoresListSubscription.unsubscribe();\r\n  }\r\n\r\n  saveShipStores() {\r\n    this.saving = true;\r\n    const formattedShipStoresList = this.shipStoresService.formatShipStores(this.shipStoresList);\r\n    this.shipStoresService.saveShipStores(formattedShipStoresList, this.portCallId).subscribe(\r\n      res => {\r\n        this.shipStoresService.setDataIsPristine(true);\r\n        this.saving = false;\r\n        console.log(res.json());\r\n      },\r\n      error => {\r\n        this.saving = false;\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/save-ship-stores/save-ship-stores.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n  --color-primary: #002d50;\\r\\n  --color-primary-light: #37557c;\\r\\n  --color-primary-dark: #000128;\\r\\n  --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n  background-color: var(--color-primary);\\r\\n  color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n  color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n  content: \\\"\\\";\\r\\n  display: inline-block;\\r\\n  width: 0;\\r\\n  height: 0;\\r\\n  border-bottom: 4px solid white;\\r\\n  border-top: 4px solid transparent;\\r\\n  border-left: 4px solid transparent;\\r\\n  border-right: 4px solid transparent;\\r\\n  -webkit-transform: rotate(90deg);\\r\\n          transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n  border-bottom: 4px solid white;\\r\\n  -webkit-transform: rotate(0deg);\\r\\n          transform: rotate(0deg);\\r\\n  margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n  border-bottom: 4px solid white;\\r\\n  -webkit-transform: rotate(180deg);\\r\\n          transform: rotate(180deg);\\r\\n  margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a {\\r\\n  color: var(--color-primary-text);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {\\r\\n  color: var(--color-primary-dark);\\r\\n  border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link {\\r\\n  color: var(--color-primary-dark);\\r\\n  background-color: #dee2e6;\\r\\n  border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ tbody > tr > td.ng2-smart-actions > a {\\r\\n  color: var(--color-primary-dark);\\r\\n}\\r\\n:host /deep/ ng2-st-tbody-edit-delete > a,\\r\\n:host /deep/ ng2-st-tbody-create-cancel > a {\\r\\n  color: var(--color-primary);\\r\\n}\\r\\n#measurementTypes {\\r\\n  font-size: 0.875rem;\\r\\n}\\r\\n:host /deep/ .ng-placeholder, ::-webkit-input-placeholder  {\\r\\n    color: gray !important;\\r\\n    font-style: italic;\\r\\n}\\r\\n:host /deep/ .ng-placeholder, :-ms-input-placeholder  {\\r\\n    color: gray !important;\\r\\n    font-style: italic;\\r\\n}\\r\\n:host /deep/ .ng-placeholder, ::-ms-input-placeholder  {\\r\\n    color: gray !important;\\r\\n    font-style: italic;\\r\\n}\\r\\n:host /deep/ .ng-placeholder, ::placeholder  {\\r\\n    color: gray !important;\\r\\n    font-style: italic;\\r\\n}\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Ship Stores List\\\" icon=\\\"alcohol.png\\\">\\r\\n\\r\\n    <form>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col my-auto\\\">\\r\\n                        <label for=\\\"articleName\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Article Name</label>\\r\\n                        <input type=\\\"text\\\" required [(ngModel)]=\\\"shipStoresModel.articleName\\\" #articleName=\\\"ngModel\\\"\\r\\n                            placeholder=\\\"Article Name\\\" class=\\\"form-control form-control-sm\\\" required name=\\\"articleName\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col my-auto\\\">\\r\\n                        <label for=\\\"articleCode\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Article Code</label>\\r\\n                        <input type=\\\"text\\\" required [(ngModel)]=\\\"shipStoresModel.articleCode\\\" #articleCode=\\\"ngModel\\\"\\r\\n                            placeholder=\\\"Article Code\\\" class=\\\"form-control form-control-sm\\\" name=\\\"articleCode\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col my-auto\\\">\\r\\n                        <label for=\\\"locationOnBoard\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Location on Board</label>\\r\\n                        <input type=\\\"text\\\" required [(ngModel)]=\\\"shipStoresModel.locationOnBoard\\\" #locationOnBoard=\\\"ngModel\\\"\\r\\n                            placeholder=\\\"Location on Board\\\" class=\\\"form-control form-control-sm\\\" name=\\\"locationOnBoard\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-6 col-lg-6\\\">\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col my-auto\\\">\\r\\n                        <label for=\\\"quantity\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Quantity</label>\\r\\n                        <input type=\\\"number\\\" required [(ngModel)]=\\\"shipStoresModel.quantity\\\" #quantity=\\\"ngModel\\\" placeholder=\\\"Quantity\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                            integerValidator positiveNumberValidator name=\\\"quantity\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div *ngIf=\\\"quantity.hasError('notIntegerError') || quantity.hasError('notPositiveNumberError')\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <li *ngIf=\\\"quantity.hasError('notIntegerError')\\\">\\r\\n                        <small>Quantity must be an integer.</small>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"quantity.hasError('notPositiveNumberError')\\\">\\r\\n                        <small>Quantity must be a positive number.</small>\\r\\n                    </li>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\" required>\\r\\n                    <div class=\\\"col my-auto\\\">\\r\\n                        <label for=\\\"measurementType\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Measurement Type</label>\\r\\n                        <ng-select id=\\\"measurementTypes\\\" [items]=\\\"measurementTypeList\\\" [(ngModel)]=\\\"selectedMeasurementType\\\" name=\\\"measurementType\\\"\\r\\n                            [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Measurement Type\\\" (change)=\\\"selectMeasurementType($event)\\\">\\r\\n                        </ng-select>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group row\\\">\\r\\n                    <div class=\\\"col my-auto\\\">\\r\\n                        <label for=\\\"locationOnBoardCode\\\" class=\\\"col-form-label-sm no-wrap mb-0\\\">Location on Board Code</label>\\r\\n                        <input type=\\\"number\\\" required [(ngModel)]=\\\"shipStoresModel.locationOnBoardCode\\\" #locationOnBoardCode=\\\"ngModel\\\" placeholder=\\\"Location on Board Code\\\"\\r\\n                            class=\\\"form-control form-control-sm\\\" name=\\\"locationOnBoardCode\\\" integerValidator positiveNumberValidator>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <div *ngIf=\\\"locationOnBoardCode.hasError('notIntegerError') || locationOnBoardCode.hasError('notPositiveNumberError')\\\" class=\\\"alert alert-danger\\\">\\r\\n                    <li *ngIf=\\\"locationOnBoardCode.hasError('notIntegerError')\\\">\\r\\n                        <small>Location on board code must be an integer.</small>\\r\\n                    </li>\\r\\n                    <li *ngIf=\\\"locationOnBoardCode.hasError('notPositiveNumberError')\\\">\\r\\n                        <small>Location on board code must be a positive number.</small>\\r\\n                    </li>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </form>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <button *ngIf=\\\"form.valid && measurementTypeSelected\\\" type=\\\"submit\\\" class=\\\"btn btn-sm btn-ssn mt-2\\\" (click)=\\\"addShipStoreItem()\\\">\\r\\n                    <span>Submit</span>\\r\\n                </button>\\r\\n                <button *ngIf=\\\"!(form.valid && measurementTypeSelected)\\\" type=\\\"submit\\\" disabled class=\\\"btn btn-sm btn-ssn mt-2\\\">\\r\\n                    <span>Submit</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        \\r\\n            <div class=\\\"mb-3\\\">\\r\\n                <div class=\\\"table-responsive\\\">\\r\\n                    <div ng2-st-add-button=\\\"\\\" ng-reflect-grid=\\\"[object Object]\\\" class=\\\"ng2-smart-actions-title ng2-smart-actions-title-add\\\">\\r\\n                    </div>\\r\\n                    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"shipStoresDataSource\\\"></ng2-smart-table>\\r\\n        \\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</app-ssn-card>\\r\\n\\r\\n<app-save-ship-stores [portCallId]=\\\"portCallId\\\"></app-save-ship-stores>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.html\n// module chunks = main","import { Component, Input, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { MeasurementTypeModel } from 'app/shared/models/measurement-type-model';\r\nimport { ShipStoresModel } from 'app/shared/models/ship-stores-model';\r\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { DeleteButtonComponent } from '../shared/delete-button/delete-button.component';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-ship-stores',\r\n  templateUrl: './ship-stores.component.html',\r\n  styleUrls: ['./ship-stores.component.css']\r\n})\r\nexport class ShipStoresComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() portCallId: number;\r\n  @Input() shipStoresList: ShipStoresModel[];\r\n\r\n  @ViewChild(NgForm) form: NgForm;\r\n\r\n  shipStoresModel: ShipStoresModel = new ShipStoresModel();\r\n\r\n  measurementTypeList: Observable<any>;\r\n  selectedMeasurementType: MeasurementTypeModel;\r\n  measurementTypeSelected: boolean;\r\n\r\n  listIsPristine: Boolean = true;\r\n\r\n  shipStoresDataSource: LocalDataSource = new LocalDataSource();\r\n\r\n  tableSettings = {\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    editor: {\r\n      config: {\r\n        completer: {\r\n          descriptionField: 'Search here'\r\n        }\r\n      }\r\n    },\r\n    noDataMessage: 'There are no ship stores in this list.',\r\n    columns: {\r\n      sequenceNumber: {\r\n        title: 'Sequence Number',\r\n      },\r\n      articleName: {\r\n        title: 'Article Name'\r\n      },\r\n      articleCode: {\r\n        title: 'Article Code'\r\n      },\r\n      quantity: {\r\n        title: 'Quantity'\r\n      },\r\n      measurementType: {\r\n        title: 'Measurement Type'\r\n      },\r\n      locationOnBoard: {\r\n        title: 'Location Onboard'\r\n      },\r\n      locationOnBoardCode: {\r\n        title: 'Location Onboard Code'\r\n      },\r\n      delete: {\r\n        title: 'Delete',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: DeleteButtonComponent,\r\n        onComponentInitFunction: (instance) => {\r\n          instance.delete.subscribe(row => {\r\n            this.deleteShipStoreItem(row);\r\n          });\r\n        }\r\n      },\r\n    }\r\n  };\r\n\r\n  getMeasurementTypeSubscription: Subscription;\r\n\r\n  constructor(private shipStoresService: FalShipStoresService) { }\r\n\r\n  ngOnInit() {\r\n    this.getMeasurementTypeSubscription = this.shipStoresService.getMeasurementTypeList().subscribe(\r\n      results => {\r\n        this.measurementTypeList = results;\r\n      }\r\n    );\r\n    this.reloadTable();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.getMeasurementTypeSubscription.unsubscribe();\r\n  }\r\n\r\n  // Generate list that will be sent to shipStoresDataSource that is connected to the smart table\r\n  generateRows(): any[] {\r\n    let rowData = [];\r\n    if (this.shipStoresList) {\r\n      rowData = this.shipStoresList.map(shipStore => {\r\n        const row = {\r\n          shipStoresModel: shipStore,\r\n          sequenceNumber: shipStore.sequenceNumber,\r\n          articleName: shipStore.articleName,\r\n          articleCode: shipStore.articleCode,\r\n          quantity: shipStore.quantity,\r\n          measurementType: shipStore.measurementType.name,\r\n          locationOnBoard: shipStore.locationOnBoard,\r\n          locationOnBoardCode: shipStore.locationOnBoardCode,\r\n        };\r\n        return row;\r\n      });\r\n    }\r\n    return rowData;\r\n  }\r\n\r\n  // Set measurement type and id of model\r\n  selectMeasurementType(measurementType) {\r\n    if (measurementType) {\r\n      this.shipStoresModel.measurementType = measurementType;\r\n      this.shipStoresModel.measurementTypeId = measurementType.measurementTypeId;\r\n      this.measurementTypeSelected = true;\r\n    } else {\r\n      this.measurementTypeSelected = false;\r\n    }\r\n  }\r\n\r\n  deleteShipStoreItem($event) {\r\n    this.shipStoresList = this.shipStoresList.filter(item => item !== $event.shipStoresModel);\r\n    this.persistData();\r\n  }\r\n\r\n  addShipStoreItem() {\r\n    this.shipStoresModel.portCallId = this.portCallId;\r\n    this.shipStoresList.push(this.shipStoresModel);\r\n    this.persistData();\r\n    this.clearForm();\r\n  }\r\n\r\n  persistData() {\r\n    this.updateSequenceNumbers();\r\n    this.shipStoresService.setShipStoresList(this.shipStoresList);\r\n    this.touchData();\r\n    this.reloadTable();\r\n  }\r\n\r\n  touchData() {\r\n    this.listIsPristine = false;\r\n    this.shipStoresService.setDataIsPristine(false);\r\n  }\r\n\r\n  clearForm() {\r\n    this.shipStoresModel = new ShipStoresModel();\r\n    this.selectedMeasurementType = null;\r\n    this.measurementTypeSelected = false;\r\n  }\r\n\r\n  reloadTable() {\r\n    const rows = this.generateRows();\r\n    this.shipStoresDataSource.load(rows);\r\n  }\r\n\r\n  private updateSequenceNumbers() {\r\n    this.shipStoresList.forEach((shipStore, index) => {\r\n      shipStore.sequenceNumber = index + 1;\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/ship-stores/ship-stores.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card card-ssn bg-ssn text-ssn\\\">\\r\\n  <div class=\\\"row px-3 py-1\\\">\\r\\n\\r\\n    <div *ngFor=\\\"let menuEntry of menuEntries\\\">\\r\\n      <div *ngIf=\\\"menuEntry.checked\\\" class=\\\"mx-1 my-1\\\">\\r\\n        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"{'btn-danger': menuEntry.hasError, 'btn-ssn': !menuEntry.hasError, 'active': selectedPortCallForm == menuEntry.name}\\\"\\r\\n          (click)=\\\"setPortCallForm(menuEntry.name)\\\">\\r\\n          <img src=\\\"{{iconPath}}{{menuEntry.icon}}\\\" height=\\\"24px\\\" /> {{menuEntry.name}}\\r\\n          <span *ngIf=\\\"menuEntry.hasUnsavedData\\\" title=\\\"There is unsaved data in this page.\\\"> *</span>\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FORM_NAMES } from 'app/shared/constants/form-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { FalCargoService } from 'app/shared/services/fal-cargo.service';\r\nimport { FalShipStoresService } from 'app/shared/services/fal-ship-stores.service';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { PrevAndNextPocService } from 'app/shared/services/prev-and-next-poc.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.css']\r\n})\r\nexport class ProgressBarComponent implements OnInit, OnDestroy {\r\n  formNames = FORM_NAMES;\r\n\r\n  iconPath = 'assets/images/icons/128x128/white/';\r\n  baseMenuEntries: any[] = [\r\n    {\r\n      name: this.formNames.PREV_AND_NEXT_POC,\r\n      icon: 'voyage.png',\r\n      checked: true,\r\n      hasError: false,\r\n      hasUnsavedData: false\r\n    },\r\n    {\r\n      name: this.formNames.PORT_CALL_DETAILS,\r\n      icon: 'verification-clipboard.png',\r\n      checked: true,\r\n      hasError: false,\r\n      hasUnsavedData: false\r\n    }\r\n  ];\r\n  finalMenuEntries: any[] = [\r\n    {\r\n      name: this.formNames.CONFIRM_PORT_CALL,\r\n      icon: 'checkmark.png',\r\n      checked: true,\r\n      hasError: false,\r\n      hasUnsavedData: false\r\n    }\r\n  ];\r\n\r\n  menuEntries: any[];\r\n\r\n  cargoIsPrisitne = true;\r\n  shipStoresIsPristine = true;\r\n\r\n  selectedPortCallForm: string;\r\n\r\n  reportingForThisPortCallDataSubscription: Subscription;\r\n  portCallFormNameSubscription: Subscription;\r\n  crewPassengersAndDimensionsMetaSubscription: Subscription;\r\n  voyagesDataIsPristineSubscription: Subscription;\r\n  voyagesMetaSubscription: Subscription;\r\n  portCallDetailsPristineSubscription: Subscription;\r\n  shipStoresDataIsPristineSubscription: Subscription;\r\n  cargoDataIsPristineSubscription: Subscription;\r\n\r\n  constructor(\r\n    private portCallService: PortCallService,\r\n    private portCallDetailsService: PortCallDetailsService,\r\n    private prevAndNextPortCallService: PrevAndNextPocService,\r\n    private contentService: ContentService,\r\n    private shipStoresService: FalShipStoresService,\r\n    private cargoService: FalCargoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.menuEntries = this.baseMenuEntries.concat(this.finalMenuEntries);\r\n\r\n    this.reportingForThisPortCallDataSubscription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData != null) {\r\n          const falForms = [\r\n            {\r\n              name: this.formNames.DPG,\r\n              icon: 'hazard.png',\r\n              checked: reportingData.reportingDpg || false,\r\n              hasError: false,\r\n              hasUnsavedData: false\r\n            },\r\n            {\r\n              name: this.formNames.CARGO,\r\n              icon: 'cargo.png',\r\n              checked: reportingData.reportingCargo || false,\r\n              hasError: false,\r\n              hasUnsavedData: !this.cargoIsPrisitne\r\n            },\r\n            {\r\n              name: this.formNames.SHIP_STORES,\r\n              icon: 'alcohol.png',\r\n              checked: reportingData.reportingShipStores || false,\r\n              hasError: false,\r\n              hasUnsavedData: !this.shipStoresIsPristine\r\n            },\r\n            {\r\n              name: this.formNames.CREW,\r\n              icon: 'crew.png',\r\n              checked: reportingData.reportingCrew || false,\r\n              hasError: false,\r\n              hasUnsavedData: false\r\n            },\r\n            {\r\n              name: this.formNames.PAX,\r\n              icon: 'pax.png',\r\n              checked: reportingData.reportingPax || false,\r\n              hasError: false,\r\n              hasUnsavedData: false\r\n            }\r\n          ];\r\n          this.menuEntries = this.baseMenuEntries\r\n            .concat(falForms)\r\n            .concat(this.finalMenuEntries);\r\n\r\n          // Set checked in services for FAL forms\r\n          this.shipStoresService.setCheckedInProgressBar(reportingData.reportingShipStores);\r\n        }\r\n      }\r\n    );\r\n\r\n    this.portCallFormNameSubscription = this.contentService.portCallFormName$.subscribe(\r\n      portCallFormName => {\r\n        this.selectedPortCallForm = portCallFormName;\r\n      }\r\n    );\r\n\r\n    this.crewPassengersAndDimensionsMetaSubscription = this.portCallDetailsService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      metaData => {\r\n        this.menuEntries.find(\r\n          p => p.name === this.formNames.PORT_CALL_DETAILS\r\n        ).hasError = !metaData.valid;\r\n      }\r\n    );\r\n\r\n    this.voyagesDataIsPristineSubscription = this.prevAndNextPortCallService.dataIsPristine$.subscribe(\r\n      pristineData => {\r\n        this.menuEntries.find(\r\n          p => p.name === this.formNames.PREV_AND_NEXT_POC\r\n        ).hasUnsavedData = !pristineData;\r\n      }\r\n    );\r\n\r\n    this.voyagesMetaSubscription = this.prevAndNextPortCallService.prevAndNextPortOfCallMeta$.subscribe(\r\n      metaData => {\r\n        this.menuEntries.find(\r\n          p => p.name === this.formNames.PREV_AND_NEXT_POC\r\n        ).hasError = !metaData.valid;\r\n      }\r\n    );\r\n\r\n    this.portCallDetailsPristineSubscription = this.portCallDetailsService.detailsPristine$.subscribe(\r\n      detailsDataIsPristine => {\r\n        this.menuEntries.find(\r\n          p => p.name === this.formNames.PORT_CALL_DETAILS\r\n        ).hasUnsavedData = !detailsDataIsPristine;\r\n      }\r\n    );\r\n\r\n    this.shipStoresDataIsPristineSubscription = this.shipStoresService.dataIsPristine$.subscribe(shipStoresDataIsPristine => {\r\n      this.shipStoresIsPristine = shipStoresDataIsPristine;\r\n      const shipStores = this.menuEntries.find(\r\n        p => p.name === this.formNames.SHIP_STORES\r\n      );\r\n      if (shipStores) {\r\n        shipStores.hasUnsavedData = !shipStoresDataIsPristine;\r\n      }\r\n    });\r\n\r\n    this.cargoDataIsPristineSubscription = this.cargoService.dataIsPristine$.subscribe(\r\n      cargoDataIsPristine => {\r\n        this.cargoIsPrisitne = cargoDataIsPristine;\r\n        const cargo = this.menuEntries.find(\r\n          p => p.name === this.formNames.CARGO\r\n        );\r\n        if (cargo) {\r\n          cargo.hasUnsavedData = !cargoDataIsPristine;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.reportingForThisPortCallDataSubscription.unsubscribe();\r\n    this.portCallFormNameSubscription.unsubscribe();\r\n    this.crewPassengersAndDimensionsMetaSubscription.unsubscribe();\r\n    this.voyagesDataIsPristineSubscription.unsubscribe();\r\n    this.portCallDetailsPristineSubscription.unsubscribe();\r\n    this.shipStoresDataIsPristineSubscription.unsubscribe();\r\n    this.cargoDataIsPristineSubscription.unsubscribe();\r\n  }\r\n\r\n  setPortCallForm(contentName: string) {\r\n    this.contentService.setPortCallForm(contentName);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/registration.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/registration.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"REGISTER PORT CALL\\\" icon=\\\"portcall.png\\\">\\r\\n  <app-forms></app-forms>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/registration.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/registration.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit, OnDestroy {\r\n  selectedComponent: string;\r\n\r\n  portCallFormNameSubscription: Subscription;\r\n\r\n  constructor(private contentService: ContentService) {}\r\n\r\n  ngOnInit() {\r\n    this.portCallFormNameSubscription = this.contentService.portCallFormName$.subscribe(content => {\r\n      this.selectedComponent = content;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.portCallFormNameSubscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/registration.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css\n// module chunks = main","module.exports = \"<app-ssn-bg header=\\\"VIEW PORT CALL\\\" icon=\\\"eye.png\\\">\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-outline-light\\\" (click)=\\\"goBack()\\\" (mouseover)=\\\"backButtonIcon='left-arrow'\\\" (mouseout)=\\\"backButtonIcon='white/left-arrow'\\\">\\r\\n        <img src=\\\"assets/images/icons/128x128/{{backButtonIcon}}.png\\\" height=\\\"32px\\\">\\r\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-bg>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-view-port-call',\r\n  templateUrl: './view-port-call.component.html',\r\n  styleUrls: ['./view-port-call.component.css']\r\n})\r\nexport class ViewPortCallComponent implements OnInit, OnDestroy {\r\n\r\n  backButtonIcon = 'white/left-arrow';\r\n\r\n  shipDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private shipService: ShipService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.shipDataSubscription = this.portCallService.shipData$.subscribe(shipResult => {\r\n      this.shipService.setShipData(shipResult);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.shipDataSubscription.unsubscribe();\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.ts","module.exports = \"footer {\\r\\n    height: 100px;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.footer-section {\\r\\n    height: 100px;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/footer/footer.component.css\n// module id = ./src/app/main-content/footer/footer.component.css\n// module chunks = main","module.exports = \"<footer class=\\\"footer bg-ssn text-ssn text-center\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-4 footer-section\\\">\\r\\n      <a href=\\\"/assets/files/imo_msw_guide.pdf\\\" download=\\\"Guide to operate the preliminary MSW\\\">\\r\\n        <small class=\\\"text-ssn\\\">Download user guide here</small>\\r\\n        <img src=\\\"/assets/images/icons/128x128/white/download.png\\\" height=\\\"24px\\\" />\\r\\n      </a>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 footer-section\\\">\\r\\n      <div class=\\\"d-table\\\">\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell py-1\\\">\\r\\n            <small class=\\\"no-wrap\\\">\\r\\n              An Open Source Maritime\\r\\n            </small>\\r\\n            <small class=\\\"no-wrap\\\">\\r\\n              Single Window project.\\r\\n            </small>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell py-1\\\">\\r\\n            <small>Available at </small>\\r\\n            <a href=\\\"https://github.com/Fundator/IMO-Maritime-Single-Window/\\\" target=\\\"_blank\\\" title=\\\"GitHub\\\">\\r\\n              <small class=\\\"text-ssn\\\">GitHub</small>\\r\\n              <img src=\\\"/assets/images/icons/128x128/white/github.png\\\" height=\\\"24px\\\" />\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 footer-section\\\">\\r\\n      <div class=\\\"d-table\\\">\\r\\n        <div class=\\\"d-table-row\\\">\\r\\n          <div class=\\\"d-table-cell py-1\\\">\\r\\n            <span>Coordinated by</span>\\r\\n            <a href=\\\"https://www.imo.org/\\\" target=\\\"_blank\\\">\\r\\n              <img src=\\\"/assets/images/logos/imo-logo.png\\\" alt=\\\"IMO\\\" title=\\\"International Maritime Organization\\\" height=\\\"48px\\\" />\\r\\n            </a>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/footer/footer.component.html\n// module id = ./src/app/main-content/footer/footer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/footer/footer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header.component.css\n// module id = ./src/app/main-content/header/header.component.css\n// module chunks = main","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-dark bg-ssn\\\">\\r\\n\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <button class=\\\"btn btn-sm btn-ssn\\\" type=\\\"button\\\" (click)=\\\"menuIsCollapsed = !menuIsCollapsed\\\" *ngIf=\\\"userMenuEntries.length > 1\\\">\\r\\n          <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n        </button>\\r\\n\\r\\n        <button class=\\\"btn btn-sm btn-ssn\\\" type=\\\"button\\\" (click)=\\\"setContent(userMenuEntries[0].menuName)\\\" *ngIf=\\\"userMenuEntries.length === 1\\\">\\r\\n          <img src=\\\"{{iconPath}}home.png\\\" height=\\\"16px\\\">\\r\\n        </button>\\r\\n        <img src=\\\"/assets/images/logos/logo.png\\\" height=\\\"32px\\\" />\\r\\n        <span class=\\\"text-center text-ssn\\\">IMO Maritime Single Window</span>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!(online$ | async)\\\">Internet connection lost</span>\\r\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!hasDbConnection\\\">Connection to database lost.</span>\\r\\n    <span class=\\\"badge badge-danger\\\" *ngIf=\\\"!hasServerConnection\\\">Connection to server lost.</span>\\r\\n\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\" *ngIf=\\\"loggedIn || redirected\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <form class=\\\"form-inline\\\">\\r\\n          <div class=\\\"btn-group\\\">\\r\\n            <button routerLink=\\\"/auth/ChangePassword\\\" routerLinkActive=\\\"active\\\" class=\\\"btn btn-light btn-sm\\\">{{userName}}</button>\\r\\n            <button class=\\\"btn btn-outline-light btn-sm\\\" (click)=\\\"logout()\\\">Log out</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" [ngbCollapse]=\\\"menuIsCollapsed\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm mx-auto mt-2\\\" *ngFor=\\\"let menuEntry of userMenuEntries\\\">\\r\\n          <button class=\\\"btn btn-ssn btn-sm col\\\" (click)=\\\"setContent(menuEntry.menuName)\\\">\\r\\n            <img src=\\\"{{ menuEntry.iconPath }}\\\" height=\\\"24px\\\" /> {{menuEntry.title}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </nav>\\r\\n</header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header.component.html\n// module id = ./src/app/main-content/header/header.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CONTENT_NAMES } from '../../shared/constants/content-names';\r\nimport { MenuClaims } from '../../shared/constants/menu-claims';\r\nimport { MenuEntry } from '../../shared/interfaces/menu-entry.interface';\r\nimport { AccountService } from '../../shared/services/account.service';\r\nimport { ContentService } from '../../shared/services/content.service';\r\nimport { LoginService } from '../../shared/services/login.service';\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { merge } from 'rxjs/observable/merge';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { fromEvent } from 'rxjs/observable/fromEvent';\r\nimport { mapTo } from 'rxjs/operators/mapTo';\r\nimport { DbConnectionService } from '../../shared/services/db-connection.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n  providers: []\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  online$: Observable<boolean>;\r\n\r\n  hasDbConnection = true;\r\n  hasServerConnection = true;\r\n  dbConnectionSubscription: Subscription;\r\n\r\n  menuIsCollapsed = true;\r\n  subscription: Subscription;\r\n  loggedIn: boolean;\r\n  redirected: boolean;\r\n  roles: any = new Array();\r\n  userMenuEntries: MenuEntry[];\r\n  userName = 'default';\r\n  userClaims: any;\r\n\r\n  iconPath = 'assets/images/icons/128x128/white/';\r\n  menuEntries: MenuEntry[] = [\r\n    {\r\n      title: 'PORT CALLS',\r\n      iconPath: this.iconPath + 'portcall.png',\r\n      menuName: CONTENT_NAMES.VIEW_PORT_CALLS\r\n    },\r\n    {\r\n      title: 'USERS',\r\n      iconPath: this.iconPath + 'user.png',\r\n      menuName: CONTENT_NAMES.REGISTER_USER\r\n    },\r\n    {\r\n      title: 'SHIPS',\r\n      iconPath: this.iconPath + 'ship.png',\r\n      menuName: CONTENT_NAMES.VIEW_SHIPS\r\n    },\r\n    {\r\n      title: 'LOCATIONS',\r\n      iconPath: this.iconPath + 'location.png',\r\n      menuName: CONTENT_NAMES.LOCATIONS\r\n    },\r\n    {\r\n      title: 'ORGANIZATIONS',\r\n      iconPath: this.iconPath + 'pax.png',\r\n      menuName: CONTENT_NAMES.VIEW_ORGANIZATIONS\r\n    }\r\n  ];\r\n\r\n  permissions = MenuClaims.PERMISSIONS;\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private contentService: ContentService,\r\n    private accountService: AccountService,\r\n    private dbConnectionService: DbConnectionService,\r\n    private router: Router\r\n  ) {\r\n    this.online$ = merge(\r\n      of(navigator.onLine),\r\n      fromEvent(window, 'online').pipe(mapTo(true)),\r\n      fromEvent(window, 'offline').pipe(mapTo(false))\r\n    );\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.loginService.authNavStatus$.subscribe(\r\n      status => (this.loggedIn = status)\r\n    );\r\n    this.contentService.contentName$.subscribe(\r\n      () => (this.menuIsCollapsed = true)\r\n    );\r\n\r\n    this.accountService.userClaimsData$.subscribe(userClaims => {\r\n      if (userClaims) {\r\n        const userClaimsTypeMenu = userClaims.filter(\r\n          claim => claim.type === MenuClaims.TYPE\r\n        );\r\n        const keys = Object.keys(this.permissions);\r\n        keys.forEach(key => {\r\n          this.permissions[key] = userClaimsTypeMenu.some(\r\n            claim => claim.value === key\r\n          );\r\n        });\r\n        this.generateMenu();\r\n      }\r\n    });\r\n\r\n    if (this.loggedIn) {\r\n      this.accountService.getDisplayName().subscribe(result => {\r\n        if (result) {\r\n          this.userName = result;\r\n        }\r\n      });\r\n    }\r\n\r\n    this.startDbConnectionCheck();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    // prevent memory leak by unsubscribing\r\n    this.subscription.unsubscribe();\r\n    this.dbConnectionSubscription.unsubscribe();\r\n  }\r\n\r\n  private startDbConnectionCheck() {\r\n    if (this.dbConnectionSubscription) {\r\n      this.dbConnectionSubscription.unsubscribe();\r\n    }\r\n    this.dbConnectionSubscription = Observable.interval(this.hasDbConnection && this.hasServerConnection ? 15000 : 5000).subscribe(() => {\r\n      this.dbConnectionService.getHasDbConnection().subscribe(\r\n        hasConnection => {\r\n          this.hasServerConnection = true;\r\n          if (this.hasDbConnection !== hasConnection) {\r\n            this.hasDbConnection = hasConnection;\r\n            this.startDbConnectionCheck();\r\n          }\r\n        },\r\n        error => {\r\n          this.hasServerConnection = false;\r\n          this.startDbConnectionCheck();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  private generateMenu() {\r\n    this.setMenuEntries();\r\n  }\r\n\r\n  private setMenuEntries() {\r\n    // Populates the menu entry list with the entries the user has access to\r\n\r\n    this.userMenuEntries = [];\r\n    for (const menuEntry of this.menuEntries) {\r\n      const menuName = menuEntry.menuName;\r\n      if (this.permissions[menuName]) {\r\n        this.userMenuEntries.push(\r\n          this.menuEntries.find(\r\n            newMenuEntry => newMenuEntry.menuName === menuName\r\n          )\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    // To prevent logout button from disappearing before\r\n    // redirection has begun\r\n    this.redirected = true;\r\n\r\n    this.loginService.logout();\r\n    this.router.navigate(['/auth/login']);\r\n  }\r\n\r\n  setContent(contentName: string) {\r\n    this.contentService.setContent(contentName);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/header/header.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/main-content.component.css\n// module id = ./src/app/main-content/main-content.component.css\n// module chunks = main","module.exports = \"<base href=\\\"/\\\">\\r\\n<app-header></app-header>\\r\\n<div class=\\\"mt-2 mx-sm-auto mx-md-2 mx-lg-4\\\">\\r\\n  <app-content-container></app-content-container>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/main-content.component.html\n// module id = ./src/app/main-content/main-content.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { AccountService } from 'app/shared/services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-main-content',\r\n  templateUrl: './main-content.component.html',\r\n  styleUrls: ['./main-content.component.css']\r\n})\r\nexport class MainContentComponent implements OnInit {\r\n  constructor(private accountService: AccountService) {}\r\n\r\n  ngOnInit() {\r\n    let userClaims;\r\n    if ((userClaims = localStorage.getItem('user_claims'))) {\r\n      this.accountService.setUserClaims(JSON.parse(userClaims));\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/main-content.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.css\n// module id = ./src/app/shared/components/confirmation-modal/confirmation-modal.component.css\n// module chunks = main","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">{{ headerText }}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  {{ bodyText }}\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.html\n// module id = ./src/app/shared/components/confirmation-modal/confirmation-modal.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-modal',\r\n  templateUrl: './confirmation-modal.component.html',\r\n  styleUrls: ['./confirmation-modal.component.css']\r\n})\r\nexport class ConfirmationModalComponent implements OnInit {\r\n  static TYPE_SUCCESS = 'SUCCESS';\r\n  static TYPE_WARNING = 'WARNING';\r\n  static TYPE_FAILURE = 'FAILURE';\r\n\r\n  @Input() headerText: string;\r\n\r\n  @Input() bodyText: string;\r\n\r\n  @Input() modalType: string;\r\n\r\n  constructor(public activeModal: NgbActiveModal) {}\r\n\r\n  ngOnInit() {\r\n    this.headerText = this.modalType;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-table-card header=\\\"Cargo\\\" icon=\\\"cargo.png\\\" collapsible=true>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td class=\\\"no-wrap px-1 mx-1\\\">\\r\\n            <tr>\\r\\n              <small>No. of Consignments</small>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              {{ numberOfConsignments }}\\r\\n            </tr>\\r\\n          </td>\\r\\n          <td class=\\\"no-wrap px-1 mx-1\\\">\\r\\n            <tr>\\r\\n              <small>Total no. of Cargo Items</small>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              {{ numberOfCargoItems }}\\r\\n            </tr>\\r\\n          </td>\\r\\n          <td>\\r\\n            <tr>\\r\\n              <small>Total no. of Packages</small>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              {{ numberOfPackages }}\\r\\n            </tr>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </app-table-card>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Subscription } from '../../../../../../node_modules/rxjs/Subscription';\r\nimport { FalCargoService } from '../../../services/fal-cargo.service';\r\n\r\n@Component({\r\n  selector: 'app-cargo-info-table',\r\n  templateUrl: './cargo-info-table.component.html',\r\n  styleUrls: ['./cargo-info-table.component.css']\r\n})\r\nexport class CargoInfoTableComponent implements OnInit {\r\n  cargoDataSubscription: Subscription;\r\n  numberOfConsignments = 0;\r\n  numberOfCargoItems = 0;\r\n  numberOfPackages = 0;\r\n\r\n  constructor(\r\n    private cargoService: FalCargoService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.cargoDataSubscription = this.cargoService.consignmentListData$.subscribe(\r\n      cargoData => {\r\n        if (cargoData) {\r\n          this.numberOfConsignments += cargoData.length;\r\n          cargoData.forEach(consignment => {\r\n            if (consignment.cargoItem && consignment.cargoItem.length > 0) {\r\n              this.numberOfCargoItems += consignment.cargoItem.length;\r\n              consignment.cargoItem.forEach(cargoItem => {\r\n                if (cargoItem.numberOfPackages != null) {\r\n                  this.numberOfPackages += cargoItem.numberOfPackages;\r\n                }\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/cargo-info-table/cargo-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.css\n// module id = ./src/app/shared/components/confirmation-view/clearances/clearances.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Clearances\\\" icon=\\\"stamp.png\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Type</th>\\r\\n      <th>Status</th>\\r\\n      <th>Given by</th>\\r\\n      <th>Remark</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let clearance of clearanceList\\\">\\r\\n      <td>{{ clearance.organization.name }}</td>\\r\\n      <td>\\r\\n        <div *ngIf=\\\"clearance.cleared\\\" class=\\\"badge badge-success mb-0\\\">\\r\\n          <span>{{ clearance.organization.clearanceIsTrueString }}</span>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"clearance.cleared == null\\\" class=\\\"badge badge-warning mb-0\\\">\\r\\n          <span>{{ clearance.organization.clearanceIsNullString }}</span>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"clearance.cleared == false\\\" class=\\\"badge badge-danger mb-0\\\">\\r\\n          <span>{{ clearance.organization.clearanceIsFalseString }}</span>\\r\\n        </div>\\r\\n      </td>\\r\\n      <td>\\r\\n        <div *ngIf=\\\"clearance.clearedByUser\\\">{{ clearance.clearedByUser.email }}</div>\\r\\n      </td>\\r\\n      <td>{{ clearance.remark }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.html\n// module id = ./src/app/shared/components/confirmation-view/clearances/clearances.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-clearances',\r\n  templateUrl: './clearances.component.html',\r\n  styleUrls: ['./clearances.component.css']\r\n})\r\nexport class ClearancesComponent implements OnInit, OnDestroy {\r\n  clearanceList: any[] = [];\r\n\r\n  clearanceListDataSubscription: Subscription;\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.clearanceListDataSubscription = this.portCallService.clearanceListData$.subscribe(clearanceListData => {\r\n      if (clearanceListData) {\r\n        this.clearanceList = clearanceListData;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.clearanceListDataSubscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.css\n// module id = ./src/app/shared/components/confirmation-view/confirmation-view.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-prev-and-next-poc-table></app-prev-and-next-poc-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Port Call Details -->\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-port-call-details></app-port-call-details>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<!-- FAL forms -->\\r\\n<div *ngFor=\\\"let entry of falForms\\\">\\r\\n  <div class=\\\"row mb-3\\\" *ngIf=\\\"entry.checked && entry.name != 'Cargo'\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-table-card header=\\\"{{entry.name}}\\\" icon=\\\"{{entry.icon}}\\\" collapsible=true>\\r\\n        <div [ngSwitch]=\\\"entry.name\\\">\\r\\n          <div *ngSwitchCase=\\\"'Ship Stores'\\\" class=\\\"text-center my-3\\\">\\r\\n            <span class=\\\"no-wrap\\\">{{ entry.name }} information</span>\\r\\n            <span class=\\\"no-wrap\\\">has been provided.</span>\\r\\n          </div>\\r\\n          <div *ngSwitchDefault class=\\\"text-center my-3\\\">\\r\\n            <img src=\\\"{{iconPath}}warning.png\\\" height=\\\"24px\\\" />\\r\\n            <span class=\\\"no-wrap\\\">{{ entry.name }} information</span>\\r\\n            <span class=\\\"no-wrap\\\">is marked for delivery,</span>\\r\\n            <span class=\\\"no-wrap\\\">but no information is provided.</span>\\r\\n          </div>\\r\\n        </div>\\r\\n      </app-table-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"reportingCargo\\\" class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-cargo-info-table></app-cargo-info-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-user-info-table></app-user-info-table>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- Clearance information -->\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-clearances></app-clearances>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.html\n// module id = ./src/app/shared/components/confirmation-view/confirmation-view.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit, Input } from '@angular/core';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { FalCargoService } from '../../services/fal-cargo.service';\r\nimport { PortCallService } from '../../services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-view',\r\n  templateUrl: './confirmation-view.component.html',\r\n  styleUrls: ['./confirmation-view.component.css']\r\n})\r\nexport class ConfirmationViewComponent implements OnInit, OnDestroy {\r\n  iconPath = 'assets/images/icons/128x128/white/';\r\n  falForms: any;\r\n  reportingCargo = false;\r\n\r\n  reportingForThisPortCallDataSubcription: Subscription;\r\n\r\n  constructor(\r\n    private portCallDetailsService: PortCallDetailsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.reportingForThisPortCallDataSubcription = this.portCallDetailsService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData != null) {\r\n          this.reportingCargo = reportingData.reportingCargo || false;\r\n          this.falForms = [\r\n            {\r\n              name: 'DPG',\r\n              icon: 'hazard.png',\r\n              checked: reportingData.reportingDpg || false\r\n            },\r\n            {\r\n              name: 'Cargo',\r\n              icon: 'cargo.png',\r\n              checked: reportingData.reportingCargo || false\r\n            },\r\n            {\r\n              name: 'Ship Stores',\r\n              icon: 'alcohol.png',\r\n              checked: reportingData.reportingShipStores || false\r\n            },\r\n            {\r\n              name: 'Crew',\r\n              icon: 'crew.png',\r\n              checked: reportingData.reportingCrew || false\r\n            },\r\n            {\r\n              name: 'Pax',\r\n              icon: 'pax.png',\r\n              checked: reportingData.reportingPax || false\r\n            }\r\n          ];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.reportingForThisPortCallDataSubcription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-table-card header=\\\"Crew, Passengers and Dimensions\\\" icon=\\\"crew.png\\\" collapsible=true>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td *ngFor=\\\"let entry of portCallDetailsInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n            <tr>\\r\\n              <small>{{entry.description}}</small>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n              <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n            </tr>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </app-table-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-selected-purposes></app-selected-purposes>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nconst NO_OF_CREW = 'No. of Crew';\r\nconst NO_OF_PASSENGERS = 'No. of Passengers';\r\nconst ACTUAL_DRAUGHT = 'Actual Draught';\r\nconst AIR_DRAUGHT = 'Air Draught';\r\n\r\n@Component({\r\n  selector: 'app-port-call-details',\r\n  templateUrl: './port-call-details.component.html',\r\n  styleUrls: ['./port-call-details.component.css']\r\n})\r\nexport class PortCallDetailsComponent implements OnInit, OnDestroy {\r\n  portCallDetailsInfo: any[] = [\r\n    { description: NO_OF_CREW, data: null },\r\n    { description: NO_OF_PASSENGERS, data: null },\r\n    { description: ACTUAL_DRAUGHT, data: null },\r\n    { description: AIR_DRAUGHT, data: null }\r\n  ];\r\n\r\n  crewPassengersAndDimensionsDataSubscription: Subscription;\r\n\r\n  constructor(private portCallDetailsService: PortCallDetailsService) {}\r\n\r\n  ngOnInit() {\r\n    this.crewPassengersAndDimensionsDataSubscription = this.portCallDetailsService.crewPassengersAndDimensionsData$.subscribe(data => {\r\n      if (data != null) {\r\n        this.portCallDetailsInfo.find(p => p.description === NO_OF_CREW).data =\r\n          data.numberOfCrew;\r\n        this.portCallDetailsInfo.find(\r\n          p => p.description === NO_OF_PASSENGERS\r\n        ).data =\r\n          data.numberOfPassengers;\r\n        this.portCallDetailsInfo.find(\r\n          p => p.description === ACTUAL_DRAUGHT\r\n        ).data =\r\n          data.actualDraught;\r\n        this.portCallDetailsInfo.find(p => p.description === AIR_DRAUGHT).data =\r\n          data.airDraught;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.crewPassengersAndDimensionsDataSubscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Selected Purposes\\\" icon=\\\"target.png\\\" collapsible=true>\\r\\n  <tbody class=\\\"border-top-0\\\">\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let purpose of selectedPurposes; let isFirst=first\\\" [ngClass]=\\\"{'border-left': !isFirst}\\\"> {{ getPurposeName(purpose.portCallPurposeId) }} </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { PortCallDetailsService } from 'app/shared/services/port-call-details.service';\r\nimport { PurposeService } from 'app/shared/services/purpose.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\nconst OTHER_PURPOSE_ID = '100249';\r\n\r\n@Component({\r\n  selector: 'app-selected-purposes',\r\n  templateUrl: './selected-purposes.component.html',\r\n  styleUrls: ['./selected-purposes.component.css'],\r\n  providers: [PurposeService]\r\n})\r\nexport class SelectedPurposesComponent implements OnInit, OnDestroy {\r\n  selectedPurposes: any;\r\n  purposeList: any[];\r\n\r\n  otherPurposeName = '';\r\n\r\n  getPurposesSubscription: Subscription;\r\n  portCallPurposeDataSubscription: Subscription;\r\n  otherPurposeNameSubscription: Subscription;\r\n\r\n  constructor(\r\n    private purposeService: PurposeService,\r\n    private portCallDetailsService: PortCallDetailsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getPurposesSubscription = this.purposeService.getPurposes().subscribe(data => {\r\n      this.purposeList = data;\r\n    });\r\n    this.portCallPurposeDataSubscription = this.portCallDetailsService.portCallPurposeData$.subscribe(data => {\r\n      if (data != null) {\r\n        this.selectedPurposes = data;\r\n      }\r\n    });\r\n    this.otherPurposeNameSubscription = this.portCallDetailsService.otherPurposeName$.subscribe(data => {\r\n      this.otherPurposeName = data;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.getPurposesSubscription.unsubscribe();\r\n    this.portCallPurposeDataSubscription.unsubscribe();\r\n    this.otherPurposeNameSubscription.unsubscribe();\r\n  }\r\n\r\n  getPurposeName(id) {\r\n    if (this.purposeList != null) {\r\n      const purpose = this.purposeList.find(p => p.portCallPurposeId === id);\r\n      if (purpose.portCallPurposeId !== OTHER_PURPOSE_ID) {\r\n        return purpose != null ? purpose.name : null;\r\n      } else {\r\n        return this.otherPurposeName === ''\r\n          ? 'Other purpose is undefined'\r\n          : 'Other: \"' + this.otherPurposeName + '\"';\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.css\n// module id = ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"User Information\\\" collapsible=true icon=\\\"user-info.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let entry of createdByUserProperties\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n          <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n        </tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.html\n// module id = ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.html\n// module chunks = main","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { UserProperties } from '../../../constants/user-properties';\r\nimport { PortCallService } from '../../../services/port-call.service';\r\nimport { Subscription } from '../../../../../../node_modules/rxjs';\r\n\r\n@Component({\r\n  selector: 'app-user-info-table',\r\n  templateUrl: './user-info-table.component.html',\r\n  styleUrls: ['./user-info-table.component.css']\r\n})\r\nexport class UserInfoTableComponent implements OnInit, OnDestroy {\r\n  createdByUserData: any;\r\n  createdByUserProperties = new UserProperties().getPropertyList();\r\n  createdByUserDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private portCallService: PortCallService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.createdByUserDataSubscription = this.portCallService.createdByUserData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.createdByUserData = data;\r\n          UserProperties.setUserData(this.createdByUserProperties, this.createdByUserData);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.createdByUserDataSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/user-info-table/user-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/contact-select/contact-select.component.css\n// module id = ./src/app/shared/components/contact-select/contact-select.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Contact information\\\" icon=\\\"contact.png\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <label for=\\\"contact_info\\\">Select contact information</label>\\r\\n  </div>\\r\\n  <ng-select id=\\\"contact_info\\\" [items]=\\\"contactList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"contactMedium.contactMediumType\\\"\\r\\n    placeholder=\\\"Select contact mediums\\\" [(ngModel)]=\\\"selectedContactModels\\\" (change)=\\\"contactMediumSelected()\\\">\\r\\n  </ng-select>\\r\\n\\r\\n  <div *ngFor=\\\"let contactMedium of selectedContactModels; let i = index\\\" class=\\\"form-group row mt-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text bg-ssn text-white\\\">{{ contactMedium.contactMedium.contactMediumType }}</span>\\r\\n        </div>\\r\\n\\r\\n        <input id=\\\"contact_value\\\" name=\\\"contactValue\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter {{ contactMedium.contactMedium.contactMediumType }}\\\"\\r\\n          [(ngModel)]=\\\"selectedContactModels[i].contactValue\\\" (ngModelChange)=\\\"contactInfoChanged(contactMedium)\\\" />\\r\\n\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <div class=\\\"input-group-text bg-ssn text-white\\\">\\r\\n            <input type=\\\"radio\\\" id=\\\"{{i}}\\\" name=\\\"preferredRadios\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"selectedContactModels[i].isPreferred\\\" (ngModelChange)=\\\"preferredSet(selectedContactModels[i])\\\"\\r\\n              [checked]=\\\"selectedContactModels[i].isPreferred\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"{{i}}\\\">Preferred</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/contact-select/contact-select.component.html\n// module id = ./src/app/shared/components/contact-select/contact-select.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ContactModel } from 'app/shared/models/contact-model';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-contact-select',\r\n  templateUrl: './contact-select.component.html',\r\n  styleUrls: ['./contact-select.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class ContactSelectComponent implements OnInit, OnDestroy {\r\n  contactList: ContactModel[];\r\n  selectedContactModels: ContactModel[];\r\n\r\n  getContactMediumListSubscription: Subscription;\r\n\r\n  constructor(\r\n    private constantsService: ConstantsService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.getContactMediumListSubscription = this.constantsService.getContactMediumList().subscribe(data => {\r\n      if (data) {\r\n        this.contactList = data.map(d => {\r\n          const contactModel = new ContactModel();\r\n          contactModel.contactMedium = d;\r\n          return contactModel;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.getContactMediumListSubscription.unsubscribe();\r\n  }\r\n\r\n  preferredSet(selectedContactModel: ContactModel) {\r\n    const newUpdatedContactMediums = this.selectedContactModels.map(\r\n      oldContactModel => {\r\n        if (\r\n          oldContactModel.contactMedium.contactMediumId ===\r\n          selectedContactModel.contactMedium.contactMediumId\r\n        ) {\r\n          return selectedContactModel;\r\n        }\r\n        const updatedContactModel = oldContactModel;\r\n        updatedContactModel.isPreferred = false;\r\n        return updatedContactModel;\r\n      }\r\n    );\r\n  }\r\n\r\n  contactMediumSelected() {\r\n    // Outdated\r\n    // this.contactService.setContactData(this.selectedContactModels);\r\n  }\r\n\r\n  contactInfoChanged(contactMedium: ContactModel) {\r\n    // Outdated\r\n    // this.contactService.setContactData(this.selectedContactModels);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/contact-select/contact-select.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/date-time-picker/date-time-picker.component.css\n// module id = ./src/app/shared/components/date-time-picker/date-time-picker.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table mx-auto\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell p-1\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"date_input\\\">{{ header }}</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"dp.toggle()\\\" type=\\\"button\\\">\\r\\n              <img src=\\\"assets/images/icons/128x128/white/calendar.png\\\" height=\\\"24px\\\" />\\r\\n            </button>\\r\\n          </div>\\r\\n          <input id=\\\"date_input\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-mm-dd\\\" name=\\\"dp\\\" [showWeekNumbers]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"dateTimeModel.date\\\" ngbDatepicker #dp=\\\"ngbDatepicker\\\" (ngModelChange)=\\\"dateChanged($event)\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell p-1\\\">\\r\\n      <ngb-timepicker [(ngModel)]=\\\"dateTimeModel.time\\\" (ngModelChange)=\\\"timeChanged($event)\\\" [minuteStep]=15></ngb-timepicker>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div *ngIf=\\\"!validDateFormat\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n      <span>Invalid date format.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/date-time-picker/date-time-picker.component.html\n// module id = ./src/app/shared/components/date-time-picker/date-time-picker.component.html\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { NgbTime } from '@ng-bootstrap/ng-bootstrap/timepicker/ngb-time';\r\nimport { DateTime } from '../../interfaces/dateTime.interface';\r\n\r\n@Component({\r\n  selector: 'app-date-time-picker',\r\n  templateUrl: './date-time-picker.component.html',\r\n  styleUrls: ['./date-time-picker.component.css'],\r\n  providers: []\r\n})\r\nexport class DateTimePickerComponent implements OnInit {\r\n\r\n  @Input() header: string;\r\n\r\n  @Input() dateTimeModel: DateTime = {\r\n    date: null,\r\n    time: new NgbTime(0, 0, 0)\r\n  };\r\n\r\n  @Output() dateTimeResult = new EventEmitter<DateTime>();\r\n  @Output() dateFormatError = new EventEmitter<boolean>();\r\n\r\n  validDateFormat = true;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n  dateChanged(dateResult) {\r\n    this.validDateFormat = this.hasValidDateFormat(dateResult);\r\n    this.persistData();\r\n  }\r\n\r\n  timeChanged() {\r\n    this.persistData();\r\n  }\r\n\r\n  persistData() {\r\n    this.dateFormatError.emit(!this.validDateFormat);\r\n    if (this.dateTimeModel.date && this.validDateFormat) {\r\n      if (this.dateTimeModel.time == null) {\r\n        this.dateTimeModel.time = new NgbTime(0, 0, 0);\r\n      }\r\n      this.dateTimeResult.emit(this.dateTimeModel);\r\n    } else {\r\n      this.dateTimeResult.emit(null);\r\n    }\r\n  }\r\n\r\n  private hasValidDateFormat(model): boolean {\r\n    return typeof model !== 'string';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/date-time-picker/date-time-picker.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/feedback/feedback.component.css\n// module id = ./src/app/shared/components/feedback/feedback.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"started\\\">\\r\\n  <div *ngIf=\\\"actionSucceeded\\\" class=\\\"alert-success\\\" role=\\\"alert\\\">\\r\\n    <h5>Success</h5>\\r\\n    <span>{{successMessage}}</span>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!actionSucceeded\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <h5>Error</h5>\\r\\n    <p>{{errors}}</p>\\r\\n    <p>{{errorDescription}}</p>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<!-- <div *ngIf=\\\"props.started\\\">\\r\\n  <div *ngIf=\\\"props.actionSucceeded\\\" class=\\\"alert-success\\\" role=\\\"alert\\\">\\r\\n    <h5>Success</h5>\\r\\n    <span>{{props.successMessage}}</span>\\r\\n  </div>\\r\\n  <div *ngIf=\\\"!actionSucceeded\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n    <h5>Error</h5>\\r\\n    <p>{{props.errors}}</p>\\r\\n    <p>{{props.errorDescription}}</p>\\r\\n  </div>\\r\\n</div> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/feedback/feedback.component.html\n// module id = ./src/app/shared/components/feedback/feedback.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { FeedbackProps } from '../../interfaces/feedback-props.interface';\r\n\r\n@Component({\r\n  selector: 'app-feedback',\r\n  templateUrl: './feedback.component.html',\r\n  styleUrls: ['./feedback.component.css']\r\n})\r\nexport class FeedbackComponent implements OnInit {\r\n\r\n  @Input() props: FeedbackProps;\r\n\r\n  @Input() started: boolean;\r\n  @Input() actionSucceeded: boolean;\r\n  @Input() errors: any;\r\n  @Input() errorDescription: string;\r\n  @Input() successMessage: string;\r\n\r\n  constructor() {\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/feedback/feedback.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-info-table/location-info-table.component.css\n// module id = ./src/app/shared/components/location-info-table/location-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Location Information\\\" icon=\\\"location.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"locationFlag\\\" src=\\\"assets/images/flags/128x128/{{locationFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of locationInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n          <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n        </tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-info-table/location-info-table.component.html\n// module id = ./src/app/shared/components/location-info-table/location-info-table.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { LocationProperties } from 'app/shared/constants/location-properties';\r\nimport { LocationService } from 'app/shared/services/location.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-location-info-table',\r\n  templateUrl: './location-info-table.component.html',\r\n  styleUrls: ['./location-info-table.component.css']\r\n})\r\nexport class LocationInfoTableComponent implements OnInit, OnDestroy {\r\n\r\n  locationFlag: string;\r\n  locationProperties = LocationProperties.PROPERTIES;\r\n  locationInfo: any[] = [];\r\n\r\n  locationDataSubscription: Subscription;\r\n\r\n  constructor(private locationService: LocationService) { }\r\n\r\n  ngOnInit() {\r\n    this.locationProperties = LocationProperties.PROPERTIES;\r\n    this.locationDataSubscription = this.locationService.locationData$.subscribe(\r\n      locationResult => {\r\n        if (locationResult) {\r\n          this.locationFlag = (locationResult.country) ? locationResult.country.twoCharCode.toLowerCase() : null;\r\n          this.locationProperties.COUNTRY.data = (locationResult.country) ? locationResult.country.name : null;\r\n          this.locationProperties.LOCATION_TYPE.data = locationResult.locationType.name;\r\n          this.locationProperties.LOCATION_NAME.data = locationResult.name;\r\n          this.locationProperties.LOCATION_CODE.data = locationResult.locationCode;\r\n        }\r\n        this.locationInfo = Object.values(this.locationProperties);\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.locationDataSubscription.unsubscribe();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-info-table/location-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.css\n// module id = ./src/app/shared/components/location-time-info-table/location-time-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Location Information\\\" icon=\\\"location.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"locationFlag\\\" src=\\\"assets/images/flags/128x128/{{locationFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of locationTimeInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr *ngIf=\\\"entry.data\\\">\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.html\n// module id = ./src/app/shared/components/location-time-info-table/location-time-info-table.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { LocationTimeProperties } from 'app/shared/constants/location-time-properties';\r\nimport { PortCallService } from 'app/shared/services/port-call.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-location-time-info-table',\r\n  templateUrl: './location-time-info-table.component.html',\r\n  styleUrls: ['./location-time-info-table.component.css']\r\n})\r\nexport class LocationTimeInfoTableComponent implements OnInit, OnDestroy {\r\n  locationFlag: string;\r\n  locationTimeProperties = LocationTimeProperties.PROPERTIES;\r\n  locationTimeInfo: any[] = [];\r\n\r\n  locationDataSubscription: Subscription;\r\n\r\n  constructor(private portCallService: PortCallService) {}\r\n\r\n  ngOnInit() {\r\n    this.locationTimeProperties = LocationTimeProperties.PROPERTIES;\r\n    this.locationDataSubscription = this.portCallService.locationData$.subscribe(locationResult => {\r\n      if (locationResult) {\r\n        this.locationFlag = locationResult.country\r\n          ? locationResult.country.twoCharCode.toLowerCase()\r\n          : null;\r\n        this.locationTimeProperties.LOCATION_TYPE.data =\r\n          locationResult.locationType.name;\r\n        this.locationTimeProperties.LOCATION_NAME.data = locationResult.name;\r\n        this.locationTimeProperties.LOCATION_CODE.data =\r\n          locationResult.locationCode;\r\n\r\n        this.portCallService.etaEtdData$.subscribe(dateTimeResult => {\r\n          if (dateTimeResult && dateTimeResult.eta && dateTimeResult.etd) {\r\n            this.locationTimeProperties.ETA.data = this.dateTimeFormat(\r\n              dateTimeResult.eta\r\n            );\r\n            this.locationTimeProperties.ETD.data = this.dateTimeFormat(\r\n              dateTimeResult.etd\r\n            );\r\n          }\r\n        });\r\n      }\r\n      this.locationTimeInfo = Object.values(this.locationTimeProperties);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.locationDataSubscription.unsubscribe();\r\n  }\r\n\r\n  private dateTimeFormat(time) {\r\n    return (\r\n      time.year +\r\n      '-' +\r\n      this.twoDigitFormat(time.month) +\r\n      '-' +\r\n      this.twoDigitFormat(time.day) +\r\n      ' ' +\r\n      this.twoDigitFormat(time.hour) +\r\n      ':' +\r\n      this.twoDigitFormat(time.minute)\r\n    );\r\n  }\r\n\r\n  private twoDigitFormat(number: number) {\r\n    if (number <= 9) {\r\n      return '0' + number;\r\n    } else {\r\n      return number;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css\n// module id = ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit organization\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html\n// module id = ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { OrganizationService } from 'app/shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-organization-button-row',\r\n  templateUrl: './organization-button-row.component.html',\r\n  styleUrls: ['./organization-button-row.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class OrganizationButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  organizationData: any[];\r\n\r\n  constructor(\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.organizationData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.organizationData = results;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setContent(CONTENT_NAMES.REGISTER_ORGANIZATION);\r\n  }\r\n\r\n  private setContent(content: string) {\r\n    this.setOrganization(content);\r\n  }\r\n\r\n  setOrganization(content) {\r\n    this.contentService.setLoadingScreen(true, 'pax.gif', 'Loading');\r\n    this.organizationService.setOrganizationData(this.rowData.organizationModel);\r\n    this.contentService.setContent(content);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.css\n// module id = ./src/app/shared/components/organization-smart-table/organization-smart-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\r\\n  <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n    <thead class=\\\"bg-ssn text-white\\\">\\r\\n      <tr>\\r\\n        <th class=\\\"py-1\\\">\\r\\n          <h5 class=\\\"mb-0\\\">Organization search results</h5>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n  </table>\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.html\n// module id = ./src/app/shared/components/organization-smart-table/organization-smart-table.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { OrganizationService } from '../../services/organization.service';\r\nimport { OrganizationButtonRowComponent } from './organization-button-row/organization-button-row.component';\r\n\r\n@Component({\r\n  selector: 'app-organization-smart-table',\r\n  templateUrl: './organization-smart-table.component.html',\r\n  styleUrls: ['./organization-smart-table.component.css']\r\n})\r\nexport class OrganizationSmartTableComponent implements OnInit, OnDestroy {\r\n\r\n  tableData = [];\r\n  dataSource: LocalDataSource = new LocalDataSource();\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no organizations in this list.',\r\n\r\n    columns: {\r\n      name: {\r\n        title: 'Name',\r\n        type: 'html'\r\n      },\r\n      type: {\r\n        title: 'Type',\r\n        type: 'html'\r\n      },\r\n      organizationNumber: {\r\n        title: 'Organization Number',\r\n        type: 'html'\r\n      },\r\n      description: {\r\n        title: 'Description',\r\n        type: 'html'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: OrganizationButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  organizationSearchDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private organizationService: OrganizationService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.organizationSearchDataSubscription = this.organizationService.organizationSearchData$.subscribe(data => {\r\n      if (data) {\r\n        if (data.length !== 0) {\r\n          const rowList = [];\r\n          data.forEach(organization => {\r\n            const row = this.dataRow(organization);\r\n            rowList.push(row);\r\n          });\r\n          this.tableData = rowList;\r\n        }\r\n      }\r\n      this.dataSource.load(this.tableData);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.organizationSearchDataSubscription.unsubscribe();\r\n  }\r\n\r\n  dataRow(organization) {\r\n    const row = {\r\n      organizationModel: organization,\r\n      name: organization.name,\r\n      type: organization.organizationType.name,\r\n      organizationNumber: organization.organizationNo || `<div class=\"font-italic\">Not provided.</div>`,\r\n      description: organization.description || `<div class=\"font-italic\">Not provided.</div>`,\r\n      actions: 'btn'\r\n    };\r\n    return row;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/organization-smart-table/organization-smart-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.css\n// module id = ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Previous Port of Call Information\\\" icon=\\\"location.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let entry of prevLocationTimeInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr *ngIf=\\\"entry.data\\\">\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\\r\\n\\r\\n<app-table-card header=\\\"Next Port of Call Information\\\" icon=\\\"location.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let entry of nextLocationTimeInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr *ngIf=\\\"entry.data\\\">\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.html\n// module id = ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { PrevAndNextPocService } from 'app/shared/services/prev-and-next-poc.service';\r\nimport { LocationTimeProperties } from 'app/shared/constants/location-time-properties';\r\nimport { PrevLocationTimeProperties } from 'app/shared/constants/prev-location-time-properties';\r\nimport { NextLocationTimeProperties } from 'app/shared/constants/next-location-time-properties';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-prev-and-next-poc-table',\r\n  templateUrl: './prev-and-next-poc-table.component.html',\r\n  styleUrls: ['./prev-and-next-poc-table.component.css']\r\n})\r\nexport class PrevAndNextPocTableComponent implements OnInit, OnDestroy {\r\n\r\n  prevLocationFlag: string;\r\n  nextLocationFlag: string;\r\n  PrevLocationTimeProperties = new PrevLocationTimeProperties();\r\n  NextLocationTimeProperties = new NextLocationTimeProperties();\r\n  prevLocationTimeProperties: any;\r\n  nextLocationTimeProperties: any;\r\n  prevLocationTimeInfo: any[] = [];\r\n  nextLocationTimeInfo: any[] = [];\r\n\r\n  prevPortOfCallDataSubscription: Subscription;\r\n  nextPortOfCallDataSubscription: Subscription;\r\n\r\n  constructor(private prevAndNextPocService: PrevAndNextPocService) { }\r\n\r\n  ngOnInit() {\r\n    this.prevLocationTimeProperties = this.PrevLocationTimeProperties.getProperties();\r\n    this.nextLocationTimeProperties = this.NextLocationTimeProperties.getProperties();\r\n\r\n    this.prevPortOfCallDataSubscription = this.prevAndNextPocService.prevPortOfCallData$.subscribe(prevPocResult => {\r\n      if (prevPocResult) {\r\n        this.prevLocationTimeProperties.LOCATION_NAME.data = prevPocResult.name;\r\n        this.prevLocationTimeProperties.LOCATION_CODE.data = prevPocResult.locationCode;\r\n        this.prevAndNextPocService.prevPortOfCallEtdData$.subscribe(dateTimeResult => {\r\n          if (dateTimeResult) {\r\n            this.prevLocationTimeProperties.ETD.data = this.dateTimeFormat(dateTimeResult);\r\n          }\r\n        });\r\n      } else {\r\n        this.prevLocationTimeProperties = this.PrevLocationTimeProperties.getProperties();\r\n      }\r\n      this.prevLocationTimeInfo = Object.values(this.prevLocationTimeProperties);\r\n    });\r\n\r\n    this.nextPortOfCallDataSubscription = this.prevAndNextPocService.nextPortOfCallData$.subscribe(nextPocResult => {\r\n      if (nextPocResult) {\r\n        this.nextLocationTimeProperties.LOCATION_NAME.data = nextPocResult.name;\r\n        this.nextLocationTimeProperties.LOCATION_CODE.data = nextPocResult.locationCode;\r\n        this.prevAndNextPocService.nextPortOfCallEtaData$.subscribe(dateTimeResult => {\r\n          if (dateTimeResult) {\r\n            this.nextLocationTimeProperties.ETA.data = this.dateTimeFormat(dateTimeResult);\r\n          }\r\n        });\r\n      } else {\r\n        this.nextLocationTimeProperties = this.NextLocationTimeProperties.getProperties();\r\n      }\r\n      this.nextLocationTimeInfo = Object.values(this.nextLocationTimeProperties);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.prevPortOfCallDataSubscription.unsubscribe();\r\n    this.nextPortOfCallDataSubscription.unsubscribe();\r\n  }\r\n\r\n  private dateTimeFormat(dateTime) {\r\n    dateTime = new Date(dateTime);\r\n    return (\r\n      dateTime.getFullYear() +\r\n      '-' +\r\n      this.twoDigitFormat(dateTime.getMonth() + 1) +\r\n      '-' +\r\n      this.twoDigitFormat(dateTime.getDate()) +\r\n      ' ' +\r\n      this.twoDigitFormat(dateTime.getHours()) +\r\n      ':' +\r\n      this.twoDigitFormat(dateTime.getMinutes())\r\n    );\r\n  }\r\n\r\n  private twoDigitFormat(number: number) {\r\n    if (number <= 9) {\r\n      return '0' + number;\r\n    } else {\r\n      return number;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/prev-and-next-poc-table/prev-and-next-poc-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-location/search-location.component.css\n// module id = ./src/app/shared/components/search-location/search-location.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img src=\\\"assets/images/flags/128x128/{{r.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\r\\n  <strong *ngIf=\\\"r.locationCode\\\">Code: </strong> {{ r.locationCode }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"text-center\\\">\\r\\n  <label for=\\\"search-location\\\">Search using location name or UN/LOCODE code</label>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input id=\\\"search-location\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"locationModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n        [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectLocation($event)\\\" placeholder=\\\"Enter search here...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <div *ngIf=\\\"searching\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/location.gif\\\" height=\\\"32px\\\">\\r\\n        <p>Searching</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searchFailed\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n        <p>No results</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-location/search-location.component.html\n// module id = ./src/app/shared/components/search-location/search-location.component.html\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { SearchLocationService } from './search-location.service';\r\nimport { LocationModel } from '../../models/location-model';\r\n\r\n@Component({\r\n  selector: 'app-search-location',\r\n  templateUrl: './search-location.component.html',\r\n  styleUrls: ['./search-location.component.css'],\r\n  providers: [SearchLocationService]\r\n})\r\nexport class SearchLocationComponent implements OnInit {\r\n\r\n  @Input() showDropdown = true;\r\n  @Input() restrictTypeHarbour = false;\r\n\r\n  @Output() locationResult = new EventEmitter<LocationModel>();\r\n  @Output() locationSearchResult = new EventEmitter<any>();\r\n\r\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN_2;\r\n\r\n  locationModel: any;\r\n  locationSelected: boolean;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private locationSearchService: SearchLocationService) {\r\n    this.locationSelected = false;\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap(term => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2);\r\n      }),\r\n      switchMap(term => (this.showDropdown) ?\r\n        this.locationSearchService.search(term, this.restrictTypeHarbour, this.resultsDropdown).pipe(\r\n          tap(() => {\r\n            this.searchFailed = false;\r\n          }),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          })\r\n        ) : of([])\r\n      ),\r\n      tap(res => {\r\n        if (this.showDropdown) {\r\n          this.searching = false;\r\n          this.searchFailed = this.locationModel.length >= 2 && res.length === 0;\r\n        } else {\r\n          this.locationSearchService.search(this.locationModel, this.restrictTypeHarbour, this.resultsWithoutDropdown).subscribe(\r\n            data => {\r\n              this.searchFailed = this.locationModel.length >= 2 && data.length === 0;\r\n              this.locationSearchResult.emit(data);\r\n              this.searching = false;\r\n            });\r\n        }\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    )\r\n\r\n  formatter = (x: { locationId: string }) => '';\r\n\r\n  selectLocation($event) {\r\n    this.locationModel = $event.item;\r\n    this.locationSelected = true;\r\n    this.locationResult.emit(this.locationModel);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-location/search-location.component.ts","import { Injectable } from '@angular/core';\r\nimport { SearchService } from 'app/shared/services/search.service';\r\nimport 'rxjs/add/observable/of';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class SearchLocationService {\r\n  private searchService: SearchService;\r\n  private searchUrl: string;\r\n  private searchHarbourUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.searchService = new SearchService(this.http);\r\n    this.searchUrl = 'api/location/search';\r\n    this.searchHarbourUrl = 'api/location/harbour/search';\r\n  }\r\n\r\n  public search(term: string, restrictTypeHarbour: boolean, amount = 10) {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    const uri = (restrictTypeHarbour) ? this.searchHarbourUrl : this.searchUrl;\r\n    return this.searchService.search(uri, term, amount);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-location/search-location.service.ts","module.exports = \"::-webkit-input-placeholder { \\r\\n    font-style: italic; \\r\\n } \\r\\n :-moz-placeholder { \\r\\n    font-style: italic;   \\r\\n } \\r\\n ::-moz-placeholder { \\r\\n    font-style: italic;   \\r\\n } \\r\\n :-ms-input-placeholder {   \\r\\n    font-style: italic;  \\r\\n }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-organization/search-organization.component.css\n// module id = ./src/app/shared/components/search-organization/search-organization.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card-body\\\">\\r\\n  <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n    <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\r\\n    <strong *ngIf=\\\"r.organizationNo\\\">Org.no.: </strong> {{ r.organizationNo }}\\r\\n  </ng-template>\\r\\n\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <label for=\\\"search-organization\\\">Search using organization name or organization number</label>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\"></div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <div *ngIf=\\\"showDropdown\\\">\\r\\n          <input id=\\\"search-organization\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"organizationModel\\\"\\r\\n            [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectOrganization($event)\\\"\\r\\n            placeholder=\\\"Enter search here...\\\" />\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!showDropdown\\\">\\r\\n          <input id=\\\"search-organization-no-dropdown\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"organizationModel\\\"\\r\\n            [ngbTypeahead]=\\\"search\\\" placeholder=\\\"Enter search here...\\\" />\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <div *ngIf=\\\"searching\\\">\\r\\n          <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/pax.gif\\\" height=\\\"32px\\\">\\r\\n          <p>Searching</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"searchFailed\\\">\\r\\n          <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n          <p>No results</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\r\\n    <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/pax.gif\\\" height=\\\"32px\\\">\\r\\n    <p>Loading organization...</p>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-organization/search-organization.component.html\n// module id = ./src/app/shared/components/search-organization/search-organization.component.html\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { SearchOrganizationService } from './search-organization.service';\r\n\r\n@Component({\r\n  selector: 'app-search-organization',\r\n  templateUrl: './search-organization.component.html',\r\n  styleUrls: ['./search-organization.component.css'],\r\n  providers: [SearchOrganizationService]\r\n})\r\nexport class SearchOrganizationComponent implements OnInit {\r\n\r\n  @Input() showDropdown = true;\r\n\r\n  @Output() organizationResult = new EventEmitter<any>();\r\n  @Output() organizationSearchResult = new EventEmitter<any>();\r\n\r\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\r\n\r\n  organizationModel: any;\r\n  organizationSelected: boolean;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private searchOrganizationService: SearchOrganizationService) { }\r\n\r\n  ngOnInit() {\r\n    this.organizationSelected = false;\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap(term => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2);\r\n      }),\r\n      switchMap(term => (this.showDropdown) ?\r\n        this.searchOrganizationService.search(term, this.resultsDropdown).pipe(\r\n          tap(() => {\r\n            this.searchFailed = false;\r\n          }),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          })\r\n        ) : of([])\r\n      ),\r\n      tap(res => {\r\n        if (this.showDropdown) {\r\n          this.searching = false;\r\n          this.searchFailed = this.organizationModel.length >= 2 && res.length === 0;\r\n        } else {\r\n          this.searchOrganizationService.search(this.organizationModel, this.resultsWithoutDropdown).subscribe(\r\n            data => {\r\n              this.searchFailed = this.organizationModel.length >= 2 && data.length === 0;\r\n              this.organizationSearchResult.emit(data);\r\n              this.searching = false;\r\n            });\r\n        }\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    )\r\n  formatter = (x: { organizationId: string }) => x.organizationId;\r\n\r\n  selectOrganization($event) {\r\n    this.organizationSelected = true;\r\n    this.organizationModel = $event.item;\r\n    this.organizationResult.emit(this.organizationModel);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-organization/search-organization.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SearchService } from 'app/shared/services/search.service';\r\nimport 'rxjs/add/observable/of';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { OrganizationModel } from '../../models/organization-model';\r\n\r\n@Injectable()\r\nexport class SearchOrganizationService {\r\n  private searchService: SearchService;\r\n  private searchUrl: string;\r\n  private organizationUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.searchService = new SearchService(this.http);\r\n    this.searchUrl = 'api/organization/search';\r\n    this.organizationUrl = 'api/organization';\r\n  }\r\n\r\n  search(term: string, amount = 10) {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.searchUrl, term, amount);\r\n  }\r\n\r\n  getorganization(id: number): Observable<OrganizationModel> {\r\n    const uri = [this.organizationUrl, id].join('/');\r\n    return this.http.get<OrganizationModel>(uri);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-organization/search-organization.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.css\n// module id = ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img *ngIf=\\\"r.country.twoCharCode\\\" src=\\\"assets/images/flags/{{ r.country.twoCharCode | lowercase }}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.name\\\">Code: </strong> {{ r.name }}\\r\\n  <strong *ngIf=\\\"r.country.name\\\">Country: </strong> {{ r.country.name }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"text-center\\\">\\r\\n  <label for=\\\"search-shipFlagCode\\\">Search using flag code or name of country</label>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input id=\\\"search-shipFlagCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipFlagCodeModel\\\"\\r\\n        [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectShipFlagCode($event)\\\"\\r\\n        placeholder=\\\"Enter search here...\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <div *ngIf=\\\"searching\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/flag.gif\\\" height=\\\"32px\\\">\\r\\n        <p>Searching</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searchFailed\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n        <p>No results</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.html\n// module id = ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.html\n// module chunks = main","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { SEARCH_AMOUNTS } from 'app/shared/constants/search-amounts';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { SearchShipFlagCodeService } from './search-ship-flag-code.service';\r\n\r\n@Component({\r\n  selector: 'app-search-ship-flag-code',\r\n  templateUrl: './search-ship-flag-code.component.html',\r\n  styleUrls: ['./search-ship-flag-code.component.css'],\r\n  providers: [SearchShipFlagCodeService]\r\n})\r\nexport class SearchShipFlagCodeComponent implements OnInit {\r\n\r\n  @Output() shipFlagCodeResult = new EventEmitter<any>();\r\n\r\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n\r\n  shipFlagCodeModel: any;\r\n  shipFlagCodeSelected: boolean;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private searchShipFlagCodeService: SearchShipFlagCodeService) {\r\n    this.shipFlagCodeSelected = false;\r\n  }\r\n\r\n  ngOnInit() { }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(50),\r\n      distinctUntilChanged(),\r\n      tap((term) => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 1);\r\n      }),\r\n      switchMap(term =>\r\n        this.searchShipFlagCodeService.search(term, this.resultsDropdown).pipe(\r\n          tap(() => this.searchFailed = false),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ),\r\n      tap((res) => {\r\n        this.searching = false;\r\n        this.searchFailed = (this.shipFlagCodeModel.length >= 1 && res.length === 0);\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    )\r\n\r\n  formatter = (x: { shipFlagCodeId: string }) => '';\r\n\r\n  selectShipFlagCode($event) {\r\n    this.shipFlagCodeModel = $event.item;\r\n    this.shipFlagCodeSelected = true;\r\n    this.shipFlagCodeResult.emit(this.shipFlagCodeModel);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SearchService } from 'app/shared/services/search.service';\r\n\r\n@Injectable()\r\nexport class SearchShipFlagCodeService {\r\n\r\n    private searchService: SearchService;\r\n    private searchUrl: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.searchService = new SearchService(http);\r\n        this.searchUrl = 'api/shipflagcode/search';\r\n    }\r\n\r\n    search(term: string, amount = 10) {\r\n        if (term.length < 2) {\r\n            return Observable.of([]);\r\n        }\r\n        return this.searchService.search(this.searchUrl, term, amount);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship-flag-code/search-ship-flag-code.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship/search-ship.component.css\n// module id = ./src/app/shared/components/search-ship/search-ship.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img src=\\\"assets/images/flags/128x128/{{r.shipFlagCode.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\r\\n  <strong *ngIf=\\\"r.callSign\\\"> Call sign: </strong> {{ r.callSign }}\\r\\n  <strong *ngIf=\\\"r.imoNo\\\"> IMO number: </strong> {{ r.imoNo }}\\r\\n  <strong *ngIf=\\\"r.mmsiNo\\\"> MMSI number: </strong> {{ r.mmsiNo }}\\r\\n</ng-template>\\r\\n\\r\\n<div class=\\\"text-center\\\">\\r\\n  <label for=\\\"search-ship\\\">Search using ship name, call sign, IMO number or MMSI number</label>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <div *ngIf=\\\"showDropdown\\\">\\r\\n        <input id=\\\"search-ship\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n          [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectShip($event)\\\" placeholder=\\\"Enter search here...\\\"\\r\\n        />\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!showDropdown\\\">\\r\\n        <input id=\\\"search-ship-no-dropdown\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n          placeholder=\\\"Enter search here...\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <div *ngIf=\\\"searching\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\r\\n        <p>Searching</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searchFailed\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/icons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n        <p>No results</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"shipSelected\\\" class=\\\"text-center\\\">\\r\\n  <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\r\\n  <p>Loading ship...</p>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship/search-ship.component.html\n// module id = ./src/app/shared/components/search-ship/search-ship.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { SEARCH_AMOUNTS } from '../../constants/search-amounts';\r\nimport { SearchShipService } from './search-ship.service';\r\n\r\n@Component({\r\n  selector: 'app-search-ship',\r\n  templateUrl: './search-ship.component.html',\r\n  styleUrls: ['./search-ship.component.css'],\r\n  providers: [SearchShipService]\r\n})\r\nexport class SearchShipComponent implements OnInit {\r\n\r\n  @Input() showDropdown = true;\r\n\r\n  @Output() shipResult = new EventEmitter<any>();\r\n  @Output() shipSearchResult = new EventEmitter<any>();\r\n\r\n  resultsDropdown = SEARCH_AMOUNTS.DROPDOWN;\r\n  resultsWithoutDropdown = SEARCH_AMOUNTS.WITHOUT_DROPDOWN;\r\n\r\n  shipModel: any;\r\n  shipSelected: boolean;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () =>\r\n    (this.searching = false)\r\n  );\r\n\r\n  constructor(private searchShipService: SearchShipService) { }\r\n\r\n  ngOnInit() {\r\n    this.shipSelected = false;\r\n  }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap(term => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2);\r\n      }),\r\n      switchMap(term => (this.showDropdown) ?\r\n        this.searchShipService.search(term, this.resultsDropdown).pipe(\r\n          tap(() => {\r\n            this.searchFailed = false;\r\n          }),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          })\r\n        ) : of([])\r\n      ),\r\n      tap(res => {\r\n        if (this.showDropdown) {\r\n          this.searching = false;\r\n          this.searchFailed = this.shipModel.length >= 2 && res.length === 0;\r\n        } else {\r\n          this.searchShipService.search(this.shipModel, this.resultsWithoutDropdown).subscribe(\r\n            data => {\r\n              this.searchFailed = this.shipModel.length >= 2 && data.length === 0;\r\n              this.shipSearchResult.emit(data);\r\n              this.searching = false;\r\n            });\r\n        }\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    )\r\n  formatter = (x: { shipId: string }) => x.shipId;\r\n\r\n  selectShip($event) {\r\n    this.shipSelected = true;\r\n    this.shipModel = $event.item;\r\n\r\n    this.searchShipService.getShip($event.item.shipId).subscribe(\r\n      result => {\r\n        if (result) {\r\n          this.shipResult.emit(result);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship/search-ship.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { SearchService } from 'app/shared/services/search.service';\r\nimport 'rxjs/add/observable/of';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class SearchShipService {\r\n  private searchService: SearchService;\r\n  private searchUrl: string;\r\n  private shipUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.searchService = new SearchService(this.http);\r\n    this.searchUrl = 'api/ship/search';\r\n    this.shipUrl = 'api/ship';\r\n  }\r\n\r\n  search(term: string, amount = 10) {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.searchUrl, term, amount);\r\n  }\r\n\r\n  getShip(id: number) {\r\n    const uri = [this.shipUrl, id].join('/');\r\n    return this.http.get(uri);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship/search-ship.service.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.css\n// module id = ./src/app/shared/components/select-ship-contact/select-ship-contact.component.css\n// module chunks = main","module.exports = \"<app-ssn-card header=\\\"Contact Information\\\" icon=\\\"contact.png\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <label for=\\\"contact_info\\\">Select contact information</label>\\r\\n  </div>\\r\\n  <ng-select id=\\\"contact_info\\\" [items]=\\\"contactList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"contactMedium.contactMediumType\\\"\\r\\n    placeholder=\\\"Select contact mediums\\\" [ngModel]=\\\"selectedContactModelList\\\" (add)=\\\"onAdd($event)\\\" (remove)=\\\"onRemove($event)\\\"></ng-select>\\r\\n\\r\\n  <div *ngFor=\\\"let contactModel of selectedContactModelList; let i = index\\\" class=\\\"form-group row mt-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text bg-ssn text-white\\\">{{ contactModel.contactMedium.contactMediumType }}</span>\\r\\n        </div>\\r\\n\\r\\n        <input id=\\\"contact_value\\\" name=\\\"contactValue\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter {{ contactModel.contactMedium.contactMediumType }}\\\"\\r\\n          [(ngModel)]=\\\"selectedContactModelList[i].contactValue\\\" (ngModelChange)=\\\"contactInfoChanged()\\\" />\\r\\n\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <div class=\\\"input-group-text bg-ssn text-white\\\">\\r\\n            <input type=\\\"radio\\\" id=\\\"{{ i }}\\\" name=\\\"preferredRadios\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"selectedContactModelList[i].isPreferred\\\"\\r\\n              (ngModelChange)=\\\"preferredSet(selectedContactModelList[i])\\\" [checked]=\\\"selectedContactModelList[i].isPreferred\\\">\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"{{ i }}\\\">Preferred</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</app-ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.html\n// module id = ./src/app/shared/components/select-ship-contact/select-ship-contact.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { ShipContactModel } from 'app/shared/models/ship-contact-model';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-select-ship-contact',\r\n  templateUrl: './select-ship-contact.component.html',\r\n  styleUrls: ['./select-ship-contact.component.css']\r\n})\r\nexport class SelectShipContactComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() selectedContactModelList: ShipContactModel[];\r\n\r\n  @Output() contactModelListResult = new EventEmitter<ShipContactModel[]>();\r\n\r\n  contactList: ShipContactModel[];\r\n\r\n  getContactMediumListSubscription: Subscription;\r\n\r\n  constructor(private constantsService: ConstantsService) { }\r\n\r\n  ngOnInit() {\r\n    this.getContactMediumListSubscription = this.constantsService.getContactMediumList().subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.contactList = data.map(cm => {\r\n            const contact = new ShipContactModel();\r\n            contact.contactMediumId = cm.contactMediumId;\r\n            contact.contactMedium = cm;\r\n            return contact;\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    if (this.selectedContactModelList === undefined) {\r\n      this.selectedContactModelList = [];\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.getContactMediumListSubscription.unsubscribe();\r\n  }\r\n\r\n  contactInfoChanged() {\r\n    this.contactModelListResult.emit(this.selectedContactModelList);\r\n  }\r\n\r\n  onAdd($event) {\r\n    console.log(this.selectedContactModelList);\r\n    this.selectedContactModelList.push($event);\r\n    this.contactModelListResult.emit(this.selectedContactModelList);\r\n  }\r\n\r\n  onRemove($event) {\r\n    const index = this.selectedContactModelList.findIndex((item, i) => item.contactMediumId === $event.value.contactMediumId);\r\n    if (index !== -1) {\r\n      this.selectedContactModelList.splice(index, 1);\r\n      this.contactModelListResult.emit(this.selectedContactModelList);\r\n    } else {\r\n      console.error('Selected contact medium could not be found.');\r\n    }\r\n  }\r\n\r\n  preferredSet(selectedContactModel: ShipContactModel) {\r\n    const updatedContactModelList = this.selectedContactModelList.map(\r\n      contactModel => {\r\n        if (contactModel.contactMediumId === selectedContactModel.contactMediumId) {\r\n          return selectedContactModel;\r\n        }\r\n        const notPreferredContactModel = contactModel;\r\n        notPreferredContactModel.isPreferred = false;\r\n        return notPreferredContactModel;\r\n      }\r\n    );\r\n    this.contactModelListResult.emit(updatedContactModelList);\r\n  }\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/select-ship-contact/select-ship-contact.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css\n// module id = ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n    <thead>\\r\\n      <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n        <th colspan=3>Selected Contact Mediums</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody class=\\\"text-left\\\">\\r\\n      <tr *ngFor=\\\"let contactModel of selectedContactModelList\\\">\\r\\n        <td class=\\\"bg-ssn text-ssn\\\">{{ contactModel.contactMedium.contactMediumType }}</td>\\r\\n        <td [attr.colspan]=\\\"!contactModel.isPreferred ? 2 : null\\\">{{ contactModel.contactValue ? contactModel.contactValue : 'Value not set' }}</td>\\r\\n        <td *ngIf=\\\"contactModel.isPreferred\\\">Preferred</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html\n// module id = ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html\n// module chunks = main","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { ShipContactModel } from '../../models/ship-contact-model';\r\n\r\n@Component({\r\n  selector: 'app-selected-contact-mediums',\r\n  templateUrl: './selected-contact-mediums.component.html',\r\n  styleUrls: ['./selected-contact-mediums.component.css']\r\n})\r\nexport class SelectedContactMediumsComponent implements OnInit {\r\n\r\n  @Input() selectedContactModelList: ShipContactModel[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.css\n// module id = ./src/app/shared/components/ship-info-table/ship-info-table.component.css\n// module chunks = main","module.exports = \"<app-table-card header=\\\"Ship Information\\\" icon=\\\"ship.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"shipFlag\\\" src=\\\"assets/images/flags/128x128/{{shipFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of shipInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n        <tr *ngIf=\\\"!entry.data\\\">\\r\\n          <div class=\\\"font-italic\\\">Not provided.</div>\\r\\n        </tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</app-table-card>\\r\\n<app-table-card header=\\\"Ship Contact Information\\\" icon=\\\"contact.png\\\" collapsible=true collapsed=true>\\r\\n  <tbody *ngIf=\\\"shipHasContactInfo\\\">\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let entry of shipContactInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:\\r\\n            <span *ngIf=\\\"entry.isPreferred\\\"> (preferred)</span>\\r\\n          </small>\\r\\n        </tr>\\r\\n        <tr>{{ entry.data }}</tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <tbody class=\\\"text-center\\\" *ngIf=\\\"!shipHasContactInfo\\\">\\r\\n    <div class=\\\"my-3\\\">\\r\\n      <img src=\\\"assets/images/icons/128x128/white/warning.png\\\" height=\\\"24px\\\">\\r\\n      <span>No contact information for this ship has been provided.</span>\\r\\n    </div>\\r\\n  </tbody>\\r\\n</app-table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.html\n// module id = ./src/app/shared/components/ship-info-table/ship-info-table.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ShipProperties } from 'app/shared/constants/ship-properties';\r\nimport { ConstantsService } from 'app/shared/services/constants.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-ship-info-table',\r\n  templateUrl: './ship-info-table.component.html',\r\n  styleUrls: ['./ship-info-table.component.css']\r\n})\r\nexport class ShipInfoTableComponent implements OnInit, OnDestroy {\r\n  shipFlag: string;\r\n  contactMediumList: any;\r\n  shipHasContactInfo: boolean;\r\n  shipContactInfo: any[] = [];\r\n\r\n  shipProperties: any = ShipProperties.PROPERTIES;\r\n  shipInfo: any[];\r\n\r\n  shipDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private shipService: ShipService,\r\n    private constantsService: ConstantsService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.shipHasContactInfo = false;\r\n    this.shipDataSubscription = this.shipService.shipData$.subscribe(shipResult => {\r\n      if (shipResult) {\r\n        if (shipResult.shipFlagCode.country) {\r\n          this.shipFlag = shipResult.shipFlagCode.country.twoCharCode.toLowerCase();\r\n        }\r\n        if (shipResult.shipType) {\r\n          this.shipProperties.SHIP_TYPE.data = shipResult.shipType.name;\r\n        }\r\n        if (shipResult.shipStatus) {\r\n          this.shipProperties.SHIP_STATUS.data = shipResult.shipStatus.name;\r\n        }\r\n        this.shipProperties.SHIP_NAME.data = shipResult.name;\r\n        this.shipProperties.CALL_SIGN.data = shipResult.callSign;\r\n        this.shipProperties.IMO_NO.data = shipResult.imoNo;\r\n        this.shipProperties.MMSI_NO.data = shipResult.mmsiNo;\r\n        this.shipProperties.GROSS_TONNAGE.data = shipResult.grossTonnage;\r\n        this.shipProperties.LENGTH.data = shipResult.length;\r\n\r\n        this.constantsService.getContactMediumList().subscribe(\r\n          contactResult => {\r\n            if (contactResult) {\r\n              this.contactMediumList = contactResult;\r\n              if (contactResult && shipResult.shipContact != null && shipResult.shipContact.length > 0) {\r\n                this.shipHasContactInfo = true;\r\n                this.contactMediumList.forEach(contactMedium => {\r\n                  const value = shipResult.shipContact.find(shipCM => shipCM.contactMediumId === contactMedium.contactMediumId);\r\n                  if (value && (this.shipContactInfo.find(sc => sc.description === (contactMedium.contactMediumType)) == null)) {\r\n                    this.shipContactInfo.push({\r\n                      description: contactMedium.contactMediumType,\r\n                      data: value.contactValue,\r\n                      isPreferred: value.isPreferred\r\n                    });\r\n                  }\r\n                });\r\n              }\r\n            }\r\n          });\r\n      } else {\r\n        this.shipFlag = null;\r\n        this.shipProperties = ShipProperties.PROPERTIES;\r\n      }\r\n      this.shipInfo = Object.values(this.shipProperties);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.shipDataSubscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css\n// module id = ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell pl-1\\\" ngbTooltip=\\\"Edit ship\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src=\\\"assets/images/icons/128x128/white/edit.png\\\" height=\\\"20px\\\" />\\r\\n        </div>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html\n// module id = ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from 'app/shared/constants/content-names';\r\nimport { ContentService } from 'app/shared/services/content.service';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-ship-button-row',\r\n  templateUrl: './ship-button-row.component.html',\r\n  styleUrls: ['./ship-button-row.component.css']\r\n})\r\nexport class ShipButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(\r\n    private shipService: ShipService,\r\n    private contentService: ContentService\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  onEditClick() {\r\n    this.setContent(CONTENT_NAMES.REGISTER_SHIP);\r\n  }\r\n\r\n  private setContent(content: string) {\r\n    this.setShip(content);\r\n  }\r\n\r\n  setShip(content) {\r\n    this.contentService.setLoadingScreen(true, 'ship.gif', 'Loading');\r\n    this.shipService.getShip(this.rowData.shipModel.shipId).subscribe(data => {\r\n      if (data) {\r\n        this.shipService.setShipData(data);\r\n        this.contentService.setContent(content);\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ .ng2-smart-filter input {\\r\\n    color: black;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.css\n// module id = ./src/app/shared/components/ship-smart-table/ship-smart-table.component.css\n// module chunks = main","module.exports = \"<div class=\\\"mb-3\\\">\\r\\n  <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n    <thead class=\\\"bg-ssn text-white\\\">\\r\\n      <tr>\\r\\n        <th class=\\\"py-1\\\">\\r\\n          <h5 class=\\\"mb-0\\\">Ship search results</h5>\\r\\n        </th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n  </table>\\r\\n  <div class=\\\"table-responsive\\\">\\r\\n    <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"dataSource\\\"></ng2-smart-table>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.html\n// module id = ./src/app/shared/components/ship-smart-table/ship-smart-table.component.html\n// module chunks = main","import { Component, OnInit, Input, OnDestroy } from '@angular/core';\r\nimport { ShipService } from 'app/shared/services/ship.service';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { ShipButtonRowComponent } from './ship-button-row/ship-button-row.component';\r\nimport { Subscription } from 'rxjs/Subscription';\r\n\r\n@Component({\r\n  selector: 'app-ship-smart-table',\r\n  templateUrl: './ship-smart-table.component.html',\r\n  styleUrls: ['./ship-smart-table.component.css']\r\n})\r\nexport class ShipSmartTableComponent implements OnInit, OnDestroy {\r\n\r\n  tableData = [];\r\n  dataSource: LocalDataSource = new LocalDataSource();\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered'\r\n    },\r\n    noDataMessage: 'There are no ships in this list.',\r\n\r\n    columns: {\r\n      country: {\r\n        title: 'Country',\r\n        type: 'html'\r\n      },\r\n      name: {\r\n        title: 'Name',\r\n        type: 'html'\r\n      },\r\n      callSign: {\r\n        title: 'Call Sign',\r\n        type: 'html'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: ShipButtonRowComponent\r\n      }\r\n    }\r\n  };\r\n\r\n  shipSearchDataSubscription: Subscription;\r\n\r\n  constructor(\r\n    private shipService: ShipService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.shipSearchDataSubscription = this.shipService.shipSearchData$.subscribe(data => {\r\n      if (data) {\r\n        if (data.length !== 0) {\r\n          const rowList = [];\r\n          data.forEach(ship => {\r\n            const row = this.dataRow(ship);\r\n            rowList.push(row);\r\n          });\r\n          this.tableData = rowList;\r\n        }\r\n      }\r\n      this.dataSource.load(this.tableData);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.shipSearchDataSubscription.unsubscribe();\r\n  }\r\n\r\n  dataRow(ship) {\r\n    const row = {\r\n      shipModel: ship,\r\n      country:\r\n        `<div class=\"no-wrap\"><div hidden>` +\r\n        ship.shipFlagCode.country.name + // ugly fix for alphabetical sorting but it works\r\n        `</div> <div> <img src='assets/images/flags/128x128/` +\r\n        ship.shipFlagCode.country.twoCharCode.toLowerCase() +\r\n        `.png' height='20px'/> ` +\r\n        ship.shipFlagCode.country.name +\r\n        `</div></div>`,\r\n      name: ship.name,\r\n      callSign: ship.callSign,\r\n      actions: 'btn'\r\n    };\r\n    return row;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-smart-table/ship-smart-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.css\n// module id = ./src/app/shared/components/ssn-bg/ssn-bg.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light p-3\\\">\\r\\n\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n    <div class=\\\"d-table-cell\\\" *ngIf=\\\"icon\\\">\\r\\n      <img src=\\\"{{iconPath}}{{icon}}\\\" class=\\\"mb-2\\\" height=\\\"32px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell pl-2\\\">\\r\\n      <h3 class=\\\"text-ssn mb-0\\\">{{ header }}</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <ng-content></ng-content>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.html\n// module id = ./src/app/shared/components/ssn-bg/ssn-bg.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ssn-bg',\r\n  templateUrl: './ssn-bg.component.html',\r\n  styleUrls: ['./ssn-bg.component.css']\r\n})\r\nexport class SsnBgComponent implements OnInit {\r\n  iconPath = 'assets/images/icons/128x128/white/';\r\n\r\n  @Input() icon: string;\r\n\r\n  @Input() header: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-bg/ssn-bg.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-card/ssn-card.component.css\n// module id = ./src/app/shared/components/ssn-card/ssn-card.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card ssn-card my-2\\\">\\r\\n  <div class=\\\"card-header bg-ssn text-ssn text-left d-table py-1\\\">\\r\\n    <div class=\\\"d-table-row text-white px-4\\\" [ngClass]=\\\"{clickable: collapsible}\\\" (click)=\\\"collapsible ? changeState() : null\\\">\\r\\n\\r\\n      <div class=\\\"d-table-cell pt-1\\\">\\r\\n        <h5 class=\\\"mb-0 text-vertical-align\\\"><img *ngIf=\\\"icon\\\" src=\\\"{{iconPath}}{{icon}}\\\" height=\\\"24px\\\" /> {{ header }}</h5>\\r\\n      </div>\\r\\n      <div class=\\\"d-table-cell pb-0 text-right\\\">\\r\\n        <button *ngIf=\\\"collapsible\\\" class=\\\"btn btn-sm btn-outline-light\\\" (mouseover)=\\\"collapsedIconColor=''\\\" (mouseout)=\\\"collapsedIconColor='white/'\\\">\\r\\n          <img src=\\\"{{collapsedIconPath}}{{collapsedIconColor}}{{collapsedIcon}}\\\" height=\\\"16px\\\">\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body p-2\\\" *ngIf=\\\"!collapsed\\\">\\r\\n    <ng-content></ng-content>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-card/ssn-card.component.html\n// module id = ./src/app/shared/components/ssn-card/ssn-card.component.html\n// module chunks = main","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ssn-card',\r\n  templateUrl: './ssn-card.component.html',\r\n  styleUrls: ['./ssn-card.component.css']\r\n})\r\nexport class SsnCardComponent implements OnInit {\r\n  iconPath = 'assets/images/icons/128x128/white/';\r\n\r\n  @Input() icon: string;\r\n\r\n  @Input() header: string;\r\n\r\n  @Input() collapsible: boolean;\r\n\r\n  @Input() collapsed: boolean;\r\n\r\n  collapsedIconPath = 'assets/images/icons/128x128/';\r\n  collapsedIconColor = 'white/';\r\n  collapsedIcon: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.collapsed == null) {\r\n      this.collapsed = false;\r\n    }\r\n    this.collapsedIcon = this.collapsed\r\n      ? 'arrowhead-left.png'\r\n      : 'arrowhead-down.png';\r\n  }\r\n\r\n  changeState() {\r\n    this.collapsed = !this.collapsed;\r\n    this.collapsedIcon = this.collapsed\r\n      ? 'arrowhead-left.png'\r\n      : 'arrowhead-down.png';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-card/ssn-card.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-table/ssn-table.component.css\n// module id = ./src/app/shared/components/ssn-table/ssn-table.component.css\n// module chunks = main","module.exports = \"<table class=\\\"table table-bordered\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th *ngFor=\\\"let entry of entryData\\\" class=\\\"bg-ssn text-ssn no-wrap p-1\\\">\\r\\n        <span>{{ entry.description }}</span>\\r\\n      </th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let entry of entryData\\\" class=\\\"p-1\\\">\\r\\n        <img *ngIf=\\\"entry.imageUrl\\\" src=\\\"{{ entry.imageUrl }}\\\" height=\\\"24px\\\" />\\r\\n        <span>{{ entry.data }}</span>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-table/ssn-table.component.html\n// module id = ./src/app/shared/components/ssn-table/ssn-table.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DataProperty } from 'app/shared/interfaces/property.interface';\r\n\r\n@Component({\r\n  selector: 'app-ssn-table',\r\n  templateUrl: './ssn-table.component.html',\r\n  styleUrls: ['./ssn-table.component.css']\r\n})\r\nexport class SsnTableComponent implements OnInit {\r\n  @Input() entryData: DataProperty[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-table/ssn-table.component.ts","module.exports = \".table-card-header-bg {\\r\\n    background-color: #344d6e;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/table-card/table-card.component.css\n// module id = ./src/app/shared/components/table-card/table-card.component.css\n// module chunks = main","module.exports = \"<div class=\\\"border border-white table-card-header-bg p-1\\\">\\r\\n  <div class=\\\"row text-center text-white px-4\\\" [ngClass]=\\\"{clickable: collapsible}\\\" (click)=\\\"collapsible ? changeState() : null\\\">\\r\\n    <div class=\\\"d-table-cell mr-auto\\\">\\r\\n      <img *ngIf=\\\"icon\\\" src=\\\"{{iconPath}}{{icon}}\\\" height=\\\"24px\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell m-auto\\\">\\r\\n      <span>{{ header }}</span>\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell ml-auto\\\">\\r\\n      <button *ngIf=\\\"collapsible\\\" class=\\\"btn btn-sm btn-outline-light\\\" (mouseover)=\\\"collapsedIconColor=''\\\" (mouseout)=\\\"collapsedIconColor='white/'\\\">\\r\\n        <img src=\\\"{{collapsedIconPath}}{{collapsedIconColor}}{{collapsedIcon}}\\\" height=\\\"16px\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!collapsed\\\" class=\\\"table-responsive border-bottom border-left border-right border-white text-white\\\">\\r\\n  <table class=\\\"table mb-0\\\">\\r\\n    <ng-content></ng-content>\\r\\n  </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/table-card/table-card.component.html\n// module id = ./src/app/shared/components/table-card/table-card.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-table-card',\r\n  templateUrl: './table-card.component.html',\r\n  styleUrls: ['./table-card.component.css']\r\n})\r\nexport class TableCardComponent implements OnInit {\r\n  iconPath = 'assets/images/icons/128x128/white/';\r\n\r\n  @Input() icon: string;\r\n\r\n  @Input() header: string;\r\n\r\n  @Input() collapsible: boolean;\r\n\r\n  @Input() collapsed: boolean;\r\n\r\n  collapsedIconPath = 'assets/images/icons/128x128/';\r\n  collapsedIconColor = 'white/';\r\n  collapsedIcon: string;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {\r\n    if (this.collapsed == null) {\r\n      this.collapsed = false;\r\n    }\r\n    this.collapsedIcon = this.collapsed\r\n      ? 'arrowhead-left.png'\r\n      : 'arrowhead-down.png';\r\n  }\r\n\r\n  changeState() {\r\n    this.collapsed = !this.collapsed;\r\n    this.collapsedIcon = this.collapsed\r\n      ? 'arrowhead-left.png'\r\n      : 'arrowhead-down.png';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/table-card/table-card.component.ts","const BLACKLISTED_ROUTES = [\r\n  // Page routes\r\n  'localhost:4200/auth',\r\n  'localhost:4200/auth/login',\r\n  // Api routes\r\n  'localhost:4200/api/account/user/password/forgotten',\r\n  'localhost:4200/api/account/user/password/reset'\r\n];\r\n\r\nexport { BLACKLISTED_ROUTES };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/blacklisted-routes.ts","const CONTENT_NAMES = {\r\n  // Users, ships, locations, organizations\r\n  REGISTER_USER: 'USERS',\r\n  VIEW_SHIPS: 'SHIPS',\r\n  REGISTER_SHIP: 'Register Ship',\r\n  LOCATIONS: 'LOCATIONS',\r\n  REGISTER_LOCATION: 'Register Location',\r\n  VIEW_ORGANIZATIONS: 'ORGANIZATIONS',\r\n  REGISTER_ORGANIZATION: 'Register Organization',\r\n  // Port calls\r\n  VIEW_PORT_CALLS: 'PORT CALL',\r\n  REGISTER_PORT_CALL_DRAFT: 'Register Port Call Draft',\r\n  REGISTER_PORT_CALL: 'Register Port Call',\r\n  VIEW_PORT_CALL: 'View Port Call',\r\n  PORT_CALL_CLEARANCE: 'Port Call Clearance',\r\n  // Port call forms\r\n  VOYAGES: 'Voyages',\r\n  PORT_CALL_DETAILS: 'Port Call Details',\r\n  DPG: 'DPG',\r\n  CARGO: 'Cargo',\r\n  SHIP_STORES: 'Ship Stores',\r\n  CREW: 'Crew',\r\n  PASSENGER_LIST: 'Passenger List'\r\n};\r\n\r\nexport { CONTENT_NAMES };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/content-names.ts","const FORM_NAMES = {\r\n    PORT_CALL_DETAILS: 'Port Call Details',\r\n    CONFIRM_PORT_CALL: 'Confirm and Activate',\r\n    DPG: 'DPG',\r\n    CARGO: 'Cargo',\r\n    SHIP_STORES: 'Ship Stores',\r\n    CREW: 'Crew',\r\n    PAX: 'Passenger List',\r\n    PREV_AND_NEXT_POC: 'Voyages'\r\n};\r\n\r\nexport { FORM_NAMES };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/form-names.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\r\nimport { LocationModel } from '../models/location-model';\r\n\r\nexport class LocationProperties {\r\n  static PROPERTIES = {\r\n    COUNTRY: { description: 'Country', data: null },\r\n    LOCATION_NAME: { description: 'Name', data: null },\r\n    LOCATION_CODE: { description: 'Location Code', data: null },\r\n    LOCATION_TYPE: { description: 'Type', data: null }\r\n  };\r\n\r\n  static COUNTRY = 'Country';\r\n  static LOCATION_NAME = 'Location Name';\r\n  static LOCATION_CODE = 'Location Code';\r\n  static LOCATION_TYPE = 'Location Type';\r\n  static FLAGS_FOLDER = 'assets/images/flags/';\r\n\r\n  propertyList: DataProperty[] = [\r\n    { description: LocationProperties.COUNTRY, data: null, imageUrl: null },\r\n    { description: LocationProperties.LOCATION_NAME, data: null, imageUrl: null },\r\n    { description: LocationProperties.LOCATION_CODE, data: null, imageUrl: null },\r\n    { description: LocationProperties.LOCATION_TYPE, data: null, imageUrl: null },\r\n  ];\r\n\r\n  static setLocationData(propertyList, locationModel: LocationModel) {\r\n    if (locationModel.country) {\r\n      LocationProperties.setCountry(propertyList, locationModel.country.name);\r\n    }\r\n    LocationProperties.setLocationName(propertyList, locationModel.name);\r\n    LocationProperties.setLocationCode(propertyList, locationModel.locationCode);\r\n    if (locationModel.locationType) {\r\n      LocationProperties.setLocationType(propertyList, locationModel.locationType.name);\r\n    }\r\n  }\r\n\r\n  static setCountry(propertyList, data, image = null) {\r\n    propertyList.find(e => e.description === LocationProperties.COUNTRY).data = data;\r\n    if (image) {\r\n      propertyList.find(e => e.description === LocationProperties.COUNTRY).imageUrl = (LocationProperties.FLAGS_FOLDER + image);\r\n    }\r\n  }\r\n\r\n  static setLocationName(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === LocationProperties.LOCATION_NAME).data = data;\r\n  }\r\n\r\n  static setLocationCode(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === LocationProperties.LOCATION_CODE).data = data;\r\n  }\r\n\r\n  static setLocationType(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === LocationProperties.LOCATION_TYPE).data = data;\r\n  }\r\n\r\n  getPropertyList() {\r\n    return this.propertyList;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/location-properties.ts","export class LocationTimeProperties {\r\n  static PROPERTIES = {\r\n    LOCATION_NAME: { description: 'Location Name', data: null },\r\n    LOCATION_CODE: { description: 'Location Code', data: null },\r\n    LOCATION_TYPE: { description: 'Location Type', data: null },\r\n    ETA: { description: 'ETA', data: null },\r\n    ETD: { description: 'ETD', data: null }\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/location-time-properties.ts","export class MenuClaims {\r\n  static TYPE = 'Menu';\r\n  static PERMISSIONS = {\r\n    'PORT CALL': false,\r\n    USERS: false,\r\n    SHIPS: false,\r\n    ORGANIZATIONS: false,\r\n    LOCATIONS: false\r\n  };\r\n  static PORT_CALL = 'PORT CALL';\r\n  static USERS = 'USERS';\r\n  static SHIPS = 'SHIPS';\r\n  static ORGANIZATIONS = 'ORGANIZATIONS';\r\n  static LOCATIONS = 'LOCATIONS';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/menu-claims.ts","export class NextLocationTimeProperties {\r\n    PROPERTIES = {\r\n        LOCATION_NAME: { description: 'Location Name', data: null },\r\n        LOCATION_CODE: { description: 'Location Code', data: null },\r\n        ETA: { description: 'ETA', data: null },\r\n    };\r\n\r\n    public getProperties() {\r\n        return this.PROPERTIES;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/next-location-time-properties.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\r\nimport { OrganizationModel } from '../models/organization-model';\r\n\r\nexport class OrganizationProperties {\r\n  static ORGANIZATION_NAME = 'Organization Name';\r\n  static ORGANIZATION_NO = 'Organization Number';\r\n  static ORGANIZATION_TYPE = 'Organization Type';\r\n  static ORGANIZATION_DESCRIPTION = 'Description';\r\n\r\n  propertyList: DataProperty[] = [\r\n    { description: OrganizationProperties.ORGANIZATION_NAME, data: null, imageUrl: null },\r\n    { description: OrganizationProperties.ORGANIZATION_NO, data: null, imageUrl: null },\r\n    { description: OrganizationProperties.ORGANIZATION_TYPE, data: null, imageUrl: null },\r\n    { description: OrganizationProperties.ORGANIZATION_DESCRIPTION, data: null, imageUrl: null }\r\n  ];\r\n\r\n  static setOrganizationData(propertyList, organizationModel: OrganizationModel) {\r\n    OrganizationProperties.setOrganizationName(propertyList, organizationModel.name);\r\n    OrganizationProperties.setOrganizationNo(propertyList, organizationModel.organizationNo);\r\n    if (organizationModel.organizationType) {\r\n      OrganizationProperties.setOrganizationType(propertyList, organizationModel.organizationType.name);\r\n    }\r\n    OrganizationProperties.setOrganizationDescription(propertyList, organizationModel.description);\r\n  }\r\n\r\n  static setOrganizationName(propertyList, data) {\r\n    propertyList.find(e => e.description === OrganizationProperties.ORGANIZATION_NAME).data = data;\r\n  }\r\n\r\n  static setOrganizationNo(propertyList, data) {\r\n    propertyList.find(e => e.description === OrganizationProperties.ORGANIZATION_NO).data = data;\r\n  }\r\n\r\n  static setOrganizationType(propertyList, data) {\r\n    propertyList.find(e => e.description === OrganizationProperties.ORGANIZATION_TYPE).data = data;\r\n  }\r\n\r\n  static setOrganizationDescription(propertyList, data) {\r\n    propertyList.find(e => e.description === OrganizationProperties.ORGANIZATION_DESCRIPTION).data = data;\r\n  }\r\n\r\n  getPropertyList() {\r\n    return this.propertyList;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/organization-properties.ts","export class OrganizationTypes {\r\n    static GOVERNMENT_AGENCY_STRING = 'Authority';\r\n    static COMPANY_STRING = 'Company';\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/organization-types.ts","export class PortCallClaims {\r\n  static TYPE = 'Port Call';\r\n  static buttonRowPermissions = {\r\n    view: false,\r\n    edit: false,\r\n    clearance: false,\r\n    cancel: false,\r\n    delete: false\r\n  };\r\n  static portCallPermissions = {\r\n    register: false,\r\n    edit: false,\r\n    clearance: false\r\n  };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/port-call-claims.ts","export class PortCallStatusTypes {\r\n  static AWAITING_CLEARANCE = 'Awaiting Clearance';\r\n  static DRAFT = 'Draft';\r\n  static CANCELLED = 'Cancelled';\r\n  static COMPLETED = 'Completed';\r\n  static CLEARED = 'Cleared';\r\n\r\n  static DRAFT_ID = 100235;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/port-call-status-types.ts","export class PrevLocationTimeProperties {\r\n    PROPERTIES = {\r\n        LOCATION_NAME: { description: 'Location Name', data: null },\r\n        LOCATION_CODE: { description: 'Location Code', data: null },\r\n        ETD: { description: 'ETD', data: null },\r\n    };\r\n\r\n    public getProperties() {\r\n        return this.PROPERTIES;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/prev-location-time-properties.ts","const SEARCH_AMOUNTS = {\r\n    DROPDOWN: 6,\r\n    WITHOUT_DROPDOWN: 100,\r\n    WITHOUT_DROPDOWN_2: 40\r\n};\r\n\r\nexport { SEARCH_AMOUNTS };\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/search-amounts.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\r\nimport { ShipFlagCodeModel } from '../models/ship-flag-code-model';\r\n\r\nexport class ShipFlagCodeProperties {\r\n  static SHIP_FLAG_CODE_NAME = 'Flag Code';\r\n  static SHIP_FLAG_CODE_DESCRIPTION = 'Desciption';\r\n  static COUNTRY = 'Country';\r\n  static FLAGS_FOLDER = 'assets/images/flags/';\r\n\r\n  propertyList: DataProperty[] = [\r\n    { description: ShipFlagCodeProperties.COUNTRY, data: null, imageUrl: null },\r\n    { description: ShipFlagCodeProperties.SHIP_FLAG_CODE_NAME, data: null, imageUrl: null }\r\n  ];\r\n\r\n  static setShipFlagCodeData(propertyList, shipFlagCodeModel: ShipFlagCodeModel) {\r\n    ShipFlagCodeProperties.setName(propertyList, shipFlagCodeModel.name);\r\n    if (shipFlagCodeModel.country) {\r\n      ShipFlagCodeProperties.setCountry(propertyList, shipFlagCodeModel.country.name);\r\n    }\r\n  }\r\n\r\n  static setCountry(propertyList, data, image = null) {\r\n    propertyList.find(e => e.description === ShipFlagCodeProperties.COUNTRY).data = data;\r\n    if (image) {\r\n      propertyList.find(e => e.description === ShipFlagCodeProperties.COUNTRY).imageUrl = (ShipFlagCodeProperties.FLAGS_FOLDER + image);\r\n    }\r\n  }\r\n\r\n  static setName(propertyList, data) {\r\n    propertyList.find(e => e.description === ShipFlagCodeProperties.SHIP_FLAG_CODE_NAME).data = data;\r\n  }\r\n\r\n  getPropertyList() {\r\n    return this.propertyList;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/ship-flag-code-properties.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\r\nimport { ShipModel } from '../models/ship-model';\r\n\r\nexport class ShipProperties {\r\n  static PROPERTIES = {\r\n    SHIP_NAME: { description: 'Ship Name', data: null, imageUrl: null },\r\n    CALL_SIGN: { description: 'Call Sign', data: null },\r\n    IMO_NO: { description: 'IMO no.', data: null },\r\n    MMSI_NO: { description: 'MMSI no.', data: null },\r\n    GROSS_TONNAGE: { description: 'Gross Tonnage', data: null },\r\n    LENGTH: { description: 'Length', data: null },\r\n    SHIP_TYPE: { description: 'Ship Type', data: null },\r\n    SHIP_STATUS: { description: 'Ship Status', data: null }\r\n  };\r\n\r\n  static COUNTRY = 'Country';\r\n  static SHIP_NAME = 'Ship Name';\r\n  static CALL_SIGN = 'Call Sign';\r\n  static IMO_NO = 'IMO no.';\r\n  static MMSI_NO = 'MMSI no.';\r\n  static GROSS_TONNAGE = 'Gross Tonnage';\r\n  static NET_TONNAGE = 'Net Tonnage';\r\n  static LENGTH = 'Length';\r\n  static SHIP_TYPE = 'Ship Type';\r\n  static SHIP_STATUS = 'Ship Status';\r\n  static FLAGS_FOLDER = 'assets/images/flags/';\r\n\r\n  propertyList: DataProperty[] = [\r\n    { description: 'Country', data: null, imageUrl: null },\r\n    { description: 'Ship Name', data: null, imageUrl: null },\r\n    { description: 'Call Sign', data: null, imageUrl: null },\r\n    { description: 'IMO no.', data: null, imageUrl: null },\r\n    { description: 'MMSI no.', data: null, imageUrl: null },\r\n    { description: 'Gross Tonnage', data: null, imageUrl: null },\r\n    { description: 'Net Tonnage', data: null, imageUrl: null },\r\n    { description: 'Length', data: null, imageUrl: null },\r\n    { description: 'Ship Type', data: null, imageUrl: null },\r\n    { description: 'Ship Status', data: null, imageUrl: null }\r\n  ];\r\n\r\n  static setShipData(propertyList, shipModel: ShipModel) {\r\n    if (shipModel.shipFlagCode && shipModel.shipFlagCode.country) {\r\n      ShipProperties.setCountry(propertyList, shipModel.shipFlagCode.country.name);\r\n    }\r\n    ShipProperties.setShipName(propertyList, shipModel.name);\r\n    ShipProperties.setCallSign(propertyList, shipModel.callSign);\r\n    ShipProperties.setImoNo(propertyList, shipModel.imoNo);\r\n    ShipProperties.setMmsiNo(propertyList, shipModel.mmsiNo);\r\n    ShipProperties.setGrossTonnage(propertyList, shipModel.grossTonnage);\r\n    ShipProperties.setNetTonnage(propertyList, shipModel.netTonnage);\r\n    ShipProperties.setLength(propertyList, shipModel.length);\r\n    if (shipModel.shipType) {\r\n      ShipProperties.setShipType(propertyList, shipModel.shipType.name);\r\n    }\r\n    if (shipModel.shipStatus) {\r\n      ShipProperties.setShipStatus(propertyList, shipModel.shipStatus.name);\r\n    }\r\n  }\r\n\r\n  static setCountry(propertyList, data, image = null) {\r\n    propertyList.find(e => e.description === ShipProperties.COUNTRY).data = data;\r\n    if (image) {\r\n      propertyList.find(e => e.description === ShipProperties.COUNTRY).imageUrl = (ShipProperties.FLAGS_FOLDER + image);\r\n    }\r\n  }\r\n\r\n  static setShipName(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.SHIP_NAME).data = data;\r\n  }\r\n\r\n  static setCallSign(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.CALL_SIGN).data = data;\r\n  }\r\n\r\n  static setImoNo(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.IMO_NO).data = data;\r\n  }\r\n\r\n  static setMmsiNo(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.MMSI_NO).data = data;\r\n  }\r\n\r\n  static setGrossTonnage(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.GROSS_TONNAGE).data = data;\r\n  }\r\n\r\n  static setNetTonnage(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.NET_TONNAGE).data = data;\r\n  }\r\n\r\n  static setLength(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.LENGTH).data = data;\r\n  }\r\n\r\n  static setShipType(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.SHIP_TYPE).data = data;\r\n  }\r\n\r\n  static setShipStatus(propertyList, data, imageUrl = null) {\r\n    propertyList.find(e => e.description === ShipProperties.SHIP_STATUS).data = data;\r\n  }\r\n\r\n  getPropertyList() {\r\n    return this.propertyList;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/ship-properties.ts","import { DataProperty } from 'app/shared/interfaces/property.interface';\r\n\r\nexport class UserProperties {\r\n  static GIVEN_NAME = 'Given Name';\r\n  static SURNAME = 'Surname';\r\n  static EMAIL = 'Email';\r\n  static PHONE_NUMBER = 'Phone Number';\r\n  static ORGANIZATION = 'Organization';\r\n\r\n  propertyList: DataProperty[] = [\r\n    { description: UserProperties.GIVEN_NAME, data: null, imageUrl: null },\r\n    { description: UserProperties.SURNAME, data: null, imageUrl: null },\r\n    { description: UserProperties.EMAIL, data: null, imageUrl: null },\r\n    { description: UserProperties.PHONE_NUMBER, data: null, imageUrl: null },\r\n    { description: UserProperties.ORGANIZATION, data: null, imageUrl: null }\r\n  ];\r\n\r\n  static setUserData(propertyList, user) {\r\n    UserProperties.setEmail(propertyList, user.email);\r\n    UserProperties.setPhoneNumber(propertyList, user.phoneNumber);\r\n    if (user.person) {\r\n      UserProperties.setGivenName(propertyList, user.person.givenName);\r\n      UserProperties.setSurname(propertyList, user.person.surname);\r\n    }\r\n    if (user.organization) {\r\n      UserProperties.setOrganization(propertyList, user.organization.name);\r\n    }\r\n  }\r\n\r\n  static setGivenName(propertyList, data) {\r\n    propertyList.find(e => e.description === UserProperties.GIVEN_NAME).data = data;\r\n  }\r\n\r\n  static setSurname(propertyList, data) {\r\n    propertyList.find(e => e.description === UserProperties.SURNAME).data = data;\r\n  }\r\n\r\n  static setEmail(propertyList, data) {\r\n    propertyList.find(e => e.description === UserProperties.EMAIL).data = data;\r\n  }\r\n\r\n  static setPhoneNumber(propertyList, data) {\r\n    propertyList.find(e => e.description === UserProperties.PHONE_NUMBER).data = data;\r\n  }\r\n\r\n  static setOrganization(propertyList, data) {\r\n    propertyList.find(e => e.description === UserProperties.ORGANIZATION).data = data;\r\n  }\r\n\r\n  getPropertyList() {\r\n    return this.propertyList;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/user-properties.ts","export class FeedbackProps {\r\n    started: boolean;\r\n    actionSucceeded: boolean;\r\n    errors: any;\r\n    errorDescription: string;\r\n    successMessage: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/interfaces/feedback-props.interface.ts","import { ConsignmentModel } from './consignment-model';\r\nimport { PackageTypeModel } from './package-type-model';\r\n\r\nexport class CargoItemModel {\r\n    cargoItemId: number;\r\n    consignmentId: number;\r\n    shippingMarks: string;\r\n    containerIdentification: string;\r\n    numberOfPackages: number;\r\n    packageTypeId: number;\r\n    hsCode: string;\r\n    grossVolume: number;\r\n    grossWeight: number;\r\n    description: string;\r\n    // models\r\n    consignment: ConsignmentModel;\r\n    packageType: PackageTypeModel;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/cargo-item-model.ts","import { LocationModel } from 'app/shared/models/location-model';\r\n\r\nexport class CertificateOfRegistryModel {\r\n    certificateOfRegistryId: number;\r\n    dateOfIssue: Date;\r\n    certificateNumber: number;\r\n    portLocationId: number;\r\n    ownerName: string;\r\n    // models\r\n    portLocation: LocationModel;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/certificate-of-registry-model.ts","import { UserModel } from './user-model';\r\n\r\nexport class ClearanceModel {\r\n  organizationPortCallId: number;\r\n  organizationId: number;\r\n  portCallId: number;\r\n  remark: string;\r\n  cleared: boolean;\r\n  clearedByUserId: string;\r\n  // models\r\n  clearedByUser: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/clearance-model.ts","import { PortCallModel } from './port-call-model';\r\nimport { LocationModel } from './location-model';\r\nimport { CargoItemModel } from './cargo-item-model';\r\n\r\nexport class ConsignmentModel {\r\n    consignmentId: number;\r\n    portCallId: number;\r\n    portOfLoadingId: number;\r\n    portOfDischargeId: number;\r\n    name: string;\r\n    remark: string;\r\n    // models\r\n    portCall: PortCallModel;\r\n    portOfLoading: LocationModel;\r\n    portOfDischarge: LocationModel;\r\n    cargoItem: CargoItemModel[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/consignment-model.ts","import { ContactMediumModel } from './contact-medium-model';\r\n\r\nexport class ContactModel {\r\n  // class properties\r\n  contactMediumId: number;\r\n  contactValue: string;\r\n  isPreferred: boolean;\r\n  comments: string;\r\n  // internal models\r\n  contactMedium: ContactMediumModel;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/contact-model.ts","export class LocationModel {\r\n  locationType: any;\r\n  locationId: number;\r\n  countryId: number;\r\n  locationTypeId: number;\r\n  locationSourceId: number;\r\n  municipalityId: number;\r\n  locationCode: string;\r\n  locationNo: number;\r\n  postCode: string;\r\n  name: string;\r\n  country: any;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/location-model.ts","export class OrganizationModel {\r\n  organizationType: any;\r\n  organizationId: number;\r\n  name: string;\r\n  invoiceReceiverNo: number;\r\n  organizationNo: string;\r\n  description: string;\r\n  isActive: boolean;\r\n  organizationTypeId: number;\r\n  imoCompanyNumber: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/organization-model.ts","export class PortCallDetailsModel {\r\n  portCallDetailsId: number;\r\n  portCallId: number;\r\n  numberOfCrew: number;\r\n  numberOfPassengers: number;\r\n  actualDraught: number;\r\n  airDraught: number;\r\n  reportingDpg: boolean;\r\n  reportingCargo: boolean;\r\n  reportingShipStores: boolean;\r\n  reportingCrew: boolean;\r\n  reportingPax: boolean;\r\n  cargoBriefDescription: string;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-details-model.ts","import { LocationModel } from './location-model';\r\nimport { ConsignmentModel } from './consignment-model';\r\n\r\nexport class PortCallModel {\r\n  portCallId: number;\r\n  nextLocationId: number;\r\n  previousLocationId: number;\r\n  locationId: number;\r\n  shipId: number;\r\n  portCallStatusId: number;\r\n  remark: string;\r\n  previousLocation: LocationModel;\r\n  previousLocationEtd: Date;\r\n  previousLocationAtd: Date;\r\n  locationEtd: Date;\r\n  locationAtd: Date;\r\n  locationEta: Date;\r\n  locationAta: Date;\r\n  nextLocation: LocationModel;\r\n  nextLocationEta: Date;\r\n  nextLocationAta: Date;\r\n  userId: number;\r\n  portCallStatus: any;\r\n  consignment: ConsignmentModel[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-model.ts","import { IdentityDocumentTypeModel } from './identity-document-type-model';\r\nimport { Identifiers } from '@angular/compiler';\r\n\r\nexport class PassengerModel {\r\n    passengerId: number;\r\n    familyName: string;\r\n    givenName: string;\r\n    nationality: string; // will have to change\r\n    dateOfBirth: number; // dateOfBirth: Date;\r\n    placeOfBirth: string;\r\n    countryOfBirth: string;\r\n    natureOfIdentityDoc: string; // natureOfIdentityDoc: IdentityDocumentTypeModel;\r\n    numberOfIdentityDoc: number;\r\n    permitNumber: number;\r\n    portOfEmbarkation: string; // will have to change\r\n    portOfDisembarkation: string; // will have to change\r\n    transit: boolean;\r\n\r\n    // Connected tables (not yet)\r\n    portCallId: number;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-passenger-model.ts","import { ContactMediumModel } from './contact-medium-model';\r\n\r\nexport class ShipContactModel {\r\n    shipContactId: number;\r\n    contactMediumId: number;\r\n    shipId: number;\r\n    contactValue: string;\r\n    isPreferred: boolean;\r\n    comments: string;\r\n    // internal models:\r\n    contactMedium: ContactMediumModel;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-contact-model.ts","import { OrganizationModel } from './organization-model';\r\nimport { ShipFlagCodeModel } from './ship-flag-code-model';\r\nimport { CertificateOfRegistryModel } from './certificate-of-registry-model';\r\n\r\nexport class ShipModel {\r\n    shipId: number;\r\n    shipHullTypeId: number;\r\n    shipStatusId: number;\r\n    shipPowerTypeId: number;\r\n    shipBreadthTypeId: number;\r\n    shipLengthTypeId: number;\r\n    shipSourceId: number;\r\n    shipFlagCodeId: number;\r\n    organizationId: number;\r\n    shipTypeId: number;\r\n    imoNo: number;\r\n    yearOfBuild: number;\r\n    mmsiNo: number;\r\n    name: string;\r\n    callSign: string;\r\n    deadweightTonnage: number;\r\n    grossTonnage: number;\r\n    netTonnage: number;\r\n    length: number;\r\n    breadth: number;\r\n    power: number;\r\n    height: number;\r\n    draught: number;\r\n    hasSideThrusters: boolean;\r\n    hasSideThrustersFront: boolean;\r\n    hasSideThrustersBack: boolean;\r\n    remark: string;\r\n    certificateOfRegistryId: number;\r\n    dateOfKeelLaying: Date;\r\n    // connected models:\r\n    organization: OrganizationModel;\r\n    certificateOfRegistry: CertificateOfRegistryModel;\r\n    shipHullType: any;\r\n    shipStatus: any;\r\n    shipPowerType: any;\r\n    shipBreadthType: any;\r\n    shipLengthType: any;\r\n    shipSource: any;\r\n    shipFlagCode: ShipFlagCodeModel;\r\n    shipType: any;\r\n    shipContact: any[];\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-model.ts","import { MeasurementTypeModel } from 'app/shared/models/measurement-type-model';\r\nimport { PortCallModel } from './port-call-model';\r\n\r\nexport class ShipStoresModel {\r\n    falShipStoresId: number;\r\n    sequenceNumber: number;\r\n    articleName: string;\r\n    articleCode: string;\r\n    quantity: number;\r\n    locationOnBoardCode: string;\r\n    locationOnBoard: string;\r\n    measurementTypeId: number;\r\n    portCallId: number;\r\n    // Connected tables\r\n    measurementType: MeasurementTypeModel;\r\n    portCall: PortCallModel; // Probably won't be necessary to use this one\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-stores-model.ts","\r\nexport class TokenQueryModel {\r\n  userId: string;\r\n  token: string;\r\n  constructor(userId: string, token: string, uriEncode = true) {\r\n    if (uriEncode) {\r\n      this.setUserId(userId);\r\n      this.setToken(token);\r\n    } else {\r\n      this.userId = userId;\r\n      this.token = token;\r\n    }\r\n  }\r\n  setUserId(userId: string): void {\r\n    this.userId = encodeURIComponent(userId);\r\n  }\r\n  setToken(token: string): void {\r\n    this.token = encodeURIComponent(token);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/token-query-model.ts","import { AuthRequest } from './auth.request.service';\r\nimport { BaseRequest } from '../utils/base.request';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { ConfigService } from 'app/shared/utils/config.service';\r\nimport {\r\n  HttpClient,\r\n  HttpResponse,\r\n  HttpHeaders,\r\n  HttpErrorResponse\r\n} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { TokenQueryModel } from '../models/token-query-model';\r\nimport { PasswordResetModel } from '../models/password-reset-model';\r\nimport { PasswordChangeModel } from '../models/password-change-model';\r\nimport { UserModel } from '../models/user-model';\r\nimport { tap } from '../../../../node_modules/rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AccountService extends BaseRequest {\r\n  // URLs\r\n  private accountBaseUrl = '/account';\r\n  private actionUrl: string;\r\n  private registerUserUrl: string;\r\n  private userUrl: string;\r\n  private rolesUrl: string;\r\n  private userClaimsUrl: string;\r\n  private userNameUrl: string;\r\n  private emailUrl: string;\r\n  private passwordUrl: string;\r\n  private emailTakenUrl: string;\r\n  private organizationForUserUrl: string;\r\n\r\n  // Subjects & observables\r\n  private userClaimsDataSource = new BehaviorSubject<any[]>(null);\r\n  userClaimsData$ = this.userClaimsDataSource.asObservable();\r\n\r\n  private userOrganizationDataSource = new BehaviorSubject<any>(null);\r\n  userOrganizationData$ = this.userOrganizationDataSource.asObservable();\r\n\r\n  constructor(private http: HttpClient, configService: ConfigService) {\r\n    super(configService);\r\n    this.actionUrl =\r\n      this.baseUrl + this.accountBaseUrl; /* /api/account/                    */\r\n    this.userUrl =\r\n      this.actionUrl + '/user'; /* /api/account/user                */\r\n    this.rolesUrl =\r\n      this.actionUrl + '/roles'; /* /api/account/roles               */\r\n    this.userClaimsUrl =\r\n      this.userUrl + '/claims'; /* /api/account/claims              */\r\n    this.userNameUrl =\r\n      this.userUrl + '/displayName'; /* /api/account/user/displayName    */\r\n    this.emailUrl =\r\n      this.userUrl + '/email'; /* /api/account/user/email          */\r\n    this.passwordUrl =\r\n      this.userUrl + '/password'; /* /api/account/user/password       */\r\n    this.emailTakenUrl =\r\n      this.actionUrl + '/emailTaken'; /* /api/account/emailTaken          */\r\n  }\r\n\r\n  getAllRoles(): Observable<any> {\r\n    return this.http.get(this.rolesUrl);\r\n  }\r\n\r\n  setUserOrganization(data) {\r\n    this.userOrganizationDataSource.next(data);\r\n  }\r\n\r\n  getUserClaims(): Observable<any[]> {\r\n    return this.http.get<any[]>(this.userClaimsUrl);\r\n  }\r\n\r\n  setUserClaims(data: any[]) {\r\n    this.userClaimsDataSource.next(data);\r\n    localStorage.setItem('user_claims', JSON.stringify(data));\r\n  }\r\n\r\n  registerUser(newUser: UserModel): Observable<any> {\r\n    return this.http.post(this.userUrl, newUser);\r\n  }\r\n\r\n  getDisplayName(): Observable<string> {\r\n    return this.http.get(this.userNameUrl,\r\n    { responseType: 'text'});\r\n  }\r\n\r\n  getUserByEmail(email: string): Observable<any> {\r\n    const uri = [this.userUrl, email].join('/');\r\n\r\n    return this.http.get(uri);\r\n  }\r\n\r\n  emailTaken(email: string): Observable<boolean> {\r\n    const uri = [this.emailTakenUrl, email].join('/');\r\n    return this.http.get<boolean>(uri);\r\n  }\r\n\r\n  changeRole(userName: string, roleName: string) {\r\n    /* Not yet implemented */\r\n  }\r\n\r\n  confirmEmail(queryModel: TokenQueryModel): Observable<TokenQueryModel> {\r\n    const uri = [this.emailUrl, 'confirm'].join('/');\r\n    return this.http\r\n      .post(uri, null, {\r\n        params: {\r\n          userId: queryModel.userId,\r\n          token: queryModel.token\r\n        },\r\n        responseType: 'text'\r\n      })\r\n      .map(token => {\r\n        return new TokenQueryModel(queryModel.userId, token);\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  // Allow anonymous\r\n  requestPasswordReset(userName: string): Observable<any> {\r\n    const uri = [this.passwordUrl, 'forgotten'].join('/');\r\n    return this.http\r\n      .get(uri, {\r\n        params: {\r\n          userName: userName\r\n        }\r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  changePassword(model: PasswordChangeModel): Observable<any> {\r\n    const uri = [this.passwordUrl, 'change'].join('/');\r\n    return this.http\r\n      .put(uri, model)\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  // Allow anonymous\r\n  resetPassword(model: PasswordResetModel): Observable<any> {\r\n    const uri = [this.passwordUrl, 'reset'].join('/');\r\n    return this.http.put(uri, model);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/account.service.ts","import { Injectable } from '@angular/core';\r\nimport { BaseRequest } from 'app/shared/utils/base.request';\r\nimport { ConfigService } from 'app/shared/utils/config.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MenuClaims } from '../constants/menu-claims';\r\n\r\n@Injectable()\r\nexport class AuthService extends BaseRequest {\r\n  private authBaseUrl = '/auth';\r\n  private actionUrl;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    configService: ConfigService\r\n  ) {\r\n    super(configService);\r\n    this.actionUrl = this.baseUrl + this.authBaseUrl;\r\n  }\r\n\r\n  isAdmin(): Observable<boolean> {\r\n    return this.http\r\n      .get<boolean>(this.actionUrl + '/isAdmin');\r\n  }\r\n\r\n  canSetClearance(): Observable<any> {\r\n    return this.http\r\n      .get('api/test/canSetPortCallClearance');\r\n  }\r\n\r\n  hasToken(): boolean {\r\n    return localStorage.getItem('auth_token') != null;\r\n  }\r\n\r\n  hasValidToken(): Observable<boolean> {\r\n    return this.http\r\n      .get<boolean>(this.actionUrl + '/hasValidToken');\r\n  }\r\n\r\n  hasPortCallMenuClaim(claims: any[]): boolean {\r\n    return claims.filter(claim => claim.type === MenuClaims.TYPE)\r\n    .some(claim => claim.value === MenuClaims.PORT_CALL);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/auth-service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class AuthRequest {\r\n  constructor(private http: Http) { }\r\n\r\n  GetHeaders() {\r\n    const headers = new Headers();\r\n    headers.append(\r\n      'Authorization',\r\n      'Bearer ' + localStorage.getItem('auth_token')\r\n    );\r\n    return headers;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/auth.request.service.ts","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/services/base.service.ts\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpErrorResponse } from '../../../../node_modules/@angular/common/http';\r\n\r\nexport abstract class BaseService {\r\n  constructor() {}\r\n  protected handleModelOrAppError(error: any) {\r\n    const applicationError = error.headers.get('Application-Error');\r\n\r\n    // either applicationError in header or model error in body\r\n    if (applicationError) {\r\n      return Observable.throw(applicationError);\r\n    }\r\n\r\n    let modelStateErrors = '';\r\n    const serverError = error.json();\r\n\r\n    if (!serverError.type) {\r\n      for (const key in serverError) {\r\n        if (serverError[key]) { modelStateErrors += serverError[key] + '\\n'; }\r\n      }\r\n    }\r\n\r\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n    return Observable.throw(modelStateErrors || 'Server error');\r\n  }\r\n\r\n  protected handleError(error: HttpErrorResponse | any) {\r\n    let errMsg: any;\r\n    console.log('an error occurred!');\r\n\r\n    if (error instanceof HttpErrorResponse) {\r\n      const ERROR = error as HttpErrorResponse;\r\n      if (ERROR.status >= 500) {\r\n        errMsg = `${ERROR.status} ${ERROR.statusText}`;\r\n      } else if (ERROR.status >= 400) {\r\n        errMsg = 'Action failed';\r\n      } else if (ERROR.error.error instanceof SyntaxError) {\r\n        errMsg = 'Application error';\r\n      } else {\r\n        errMsg = error.message ? error.message : error.toString();\r\n      }\r\n      return Observable.throw(errMsg);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/base.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class ConstantsService {\r\n  private contactMediumUrl: string;\r\n  private claimUrl: string;\r\n  private portCallClaimsUrl: string;\r\n  private getMenuClaimListUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.contactMediumUrl = 'api/contactmedium';\r\n    this.claimUrl = 'api/claim';\r\n    this.portCallClaimsUrl = 'api/claim/type/portcall';\r\n    this.getMenuClaimListUrl = 'api/claim/type/menu';\r\n  }\r\n\r\n  getContactMediumList(): Observable<any> {\r\n    return this.http.get(this.contactMediumUrl);\r\n  }\r\n\r\n  getClaimList(): Observable<any> {\r\n    return this.http.get(this.claimUrl);\r\n  }\r\n\r\n  GetPortCallClaimList(): Observable<any> {\r\n    return this.http.get(this.portCallClaimsUrl);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/constants.service.ts","import { Injectable } from '@angular/core';\r\nimport { CONTENT_NAMES } from '../constants/content-names';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { BaseService } from './base.service';\r\nimport { LoadingScreen } from '../interfaces/loading-screen.interface';\r\n\r\n@Injectable()\r\nexport class ContentService extends BaseService {\r\n  private contentSource = new BehaviorSubject<string>(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  contentName$ = this.contentSource.asObservable();\r\n\r\n  private portCallFormSource = new BehaviorSubject<string>('Voyages');\r\n  portCallFormName$ = this.portCallFormSource.asObservable();\r\n\r\n  private loadingScreenSource = new BehaviorSubject<LoadingScreen>(null);\r\n  loadingScreen$ = this.loadingScreenSource.asObservable();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  setContent(contentName: string) {\r\n    this.setLoadingScreen(false, null, null);\r\n    this.contentSource.next(contentName);\r\n  }\r\n\r\n  setPortCallForm(contentName: string) {\r\n    this.portCallFormSource.next(contentName);\r\n  }\r\n\r\n  setLoadingScreen(isLoading: boolean, loadingIcon: string, loadingText: string) {\r\n    this.loadingScreenSource.next({ isLoading, loadingIcon, loadingText });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/content.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { SearchService } from './search.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class CountryService {\r\n  constructor(private http: HttpClient) {\r\n    this.searchService = new SearchService(http);\r\n    this.searchUrl = 'api/country/search/';\r\n  }\r\n\r\n  private searchService: SearchService;\r\n  private searchUrl: string;\r\n\r\n  public search(term: string): Observable<any> {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.searchUrl, term);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/country.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { BaseService } from './base.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class DbConnectionService extends BaseService {\r\n  private connectionUrl: string;\r\n\r\n  private hasDbConnectionSource = new BehaviorSubject<boolean>(true);\r\n  hasDbConnection$ = this.hasDbConnectionSource.asObservable();\r\n\r\n  constructor(private http: HttpClient) {\r\n    super();\r\n    this.connectionUrl = 'api/connection/state';\r\n  }\r\n\r\n  getHasDbConnection(): Observable<any> {\r\n    return this.http.get(this.connectionUrl);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/db-connection.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { ConsignmentModel } from '../models/consignment-model';\r\nimport { PackageTypeModel } from '../models/package-type-model';\r\nimport { CargoItemModel } from '../models/cargo-item-model';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class FalCargoService {\r\n\r\n    private portCallUrl: string;\r\n    private consignmentsString: string;\r\n    private packageTypeUrl: string;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.portCallUrl = 'api/portCall';\r\n        this.consignmentsString = 'consignments';\r\n        this.packageTypeUrl = 'api/packageType';\r\n    }\r\n\r\n    private consignmentListSource = new BehaviorSubject<ConsignmentModel[]>(null);\r\n    consignmentListData$ = this.consignmentListSource.asObservable();\r\n\r\n    private dataIsPristineSource = new BehaviorSubject<boolean>(true);\r\n    dataIsPristine$ = this.dataIsPristineSource.asObservable();\r\n\r\n    setDataIsPristine(data: boolean) {\r\n        this.dataIsPristineSource.next(data);\r\n    }\r\n\r\n    setConsignmentListData(data: ConsignmentModel[]) {\r\n        this.consignmentListSource.next(data);\r\n    }\r\n\r\n    getConsignmentListForPortCall(portCallId: number): Observable<ConsignmentModel[]> {\r\n        const uri = [this.portCallUrl, portCallId, this.consignmentsString].join('/');\r\n        return this.http.get<ConsignmentModel[]>(uri);\r\n    }\r\n\r\n    saveConsignmentListForPortCall(consignmentList: ConsignmentModel[], portCallId: number) {\r\n        console.log(consignmentList);\r\n        const uri = [this.portCallUrl, portCallId, this.consignmentsString].join('/');\r\n        return this.http.put(uri, consignmentList);\r\n    }\r\n\r\n    getPackageTypeList(): Observable<PackageTypeModel[]> {\r\n        const uri = this.packageTypeUrl;\r\n        return this.http.get<PackageTypeModel[]>(uri);\r\n    }\r\n\r\n    formatConsignment(consignmentList: ConsignmentModel[]): ConsignmentModel[] {\r\n        let formattedList: ConsignmentModel[] = [];\r\n        if (consignmentList && consignmentList.length > 0) {\r\n            formattedList = consignmentList.map(entry => {\r\n                const formattedConsignment = new ConsignmentModel();\r\n                formattedConsignment.portCallId = entry.portCallId;\r\n                formattedConsignment.name = entry.name;\r\n                formattedConsignment.portOfLoadingId = entry.portOfLoadingId;\r\n                formattedConsignment.portOfDischargeId = entry.portOfDischargeId;\r\n                formattedConsignment.remark = entry.remark;\r\n                if (entry.cargoItem && entry.cargoItem.length > 0) {\r\n                    formattedConsignment.cargoItem = entry.cargoItem.map(item => {\r\n                        const formattedCargoItem = new CargoItemModel();\r\n                        formattedCargoItem.shippingMarks = item.shippingMarks;\r\n                        formattedCargoItem.containerIdentification = item.containerIdentification;\r\n                        formattedCargoItem.description = item.description;\r\n                        formattedCargoItem.grossVolume = item.grossVolume;\r\n                        formattedCargoItem.grossWeight = item.grossWeight;\r\n                        formattedCargoItem.hsCode = item.hsCode;\r\n                        formattedCargoItem.numberOfPackages = item.numberOfPackages;\r\n                        formattedCargoItem.packageTypeId = item.packageTypeId;\r\n                        return formattedCargoItem;\r\n                    });\r\n                }\r\n                return formattedConsignment;\r\n            });\r\n        }\r\n        return formattedList;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/fal-cargo.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { ShipStoresModel } from '../models/ship-stores-model';\r\n\r\n@Injectable()\r\nexport class FalShipStoresService {\r\n\r\n  private shipStoresUrl = 'api/falShipStores';\r\n  private portCallUrl = 'api/portCall';\r\n  private shipStoresListString = 'list';\r\n  private shipStoresString = 'falShipStores';\r\n  private measurementTypeUrl = 'api/measurementType';\r\n\r\n  constructor(private http: Http) { }\r\n\r\n  private shipStoresListSource = new BehaviorSubject<ShipStoresModel[]>(null);\r\n  shipStoresList$ = this.shipStoresListSource.asObservable();\r\n\r\n  private dataIsPristine = new BehaviorSubject<boolean>(true);\r\n  dataIsPristine$ = this.dataIsPristine.asObservable();\r\n\r\n  private sequenceNumberSource = new BehaviorSubject<number>(1);\r\n  sequenceNumber$ = this.sequenceNumberSource.asObservable();\r\n\r\n  private reportingShipStoresIsChecked = new BehaviorSubject<boolean>(false);\r\n  reportingShipStoresIsChecked$ = this.reportingShipStoresIsChecked.asObservable();\r\n\r\n  // Get ship stores object by its primary key ID\r\n  getShipStoresById(shipStoresId: number) {\r\n    const uri = [this.shipStoresUrl, shipStoresId].join('/');\r\n    return this.http.get(uri).map(res => res.json());\r\n  }\r\n\r\n  // Save ship stores list to database\r\n  saveShipStores(shipStoresList: any[], portCallId: number) {\r\n    console.log('Saving ship stores...');\r\n    console.log(shipStoresList);\r\n    const uri = [this.shipStoresUrl, portCallId, this.shipStoresListString].join('/');\r\n    return this.http.put(uri, shipStoresList);\r\n  }\r\n\r\n  // Get all ship stores for a given port call\r\n  getShipStoresByPortCallId(portCallId: number) {\r\n    let uri = [this.portCallUrl, portCallId].join('/');\r\n    uri = [uri, this.shipStoresString].join('/');\r\n\r\n    return this.http.get(uri).map(res => res.json());\r\n  }\r\n  // Get list of all measurement types\r\n  getMeasurementTypeList() {\r\n    const uri = this.measurementTypeUrl;\r\n    return this.http.get(uri).map(res => res.json());\r\n  }\r\n\r\n  // Update shipStoresInformationData\r\n  setShipStoresList(data) {\r\n    this.shipStoresListSource.next(data);\r\n  }\r\n\r\n  setDataIsPristine(isPristine: boolean) {\r\n    this.dataIsPristine.next(isPristine);\r\n  }\r\n\r\n  setCheckedInProgressBar(checked: boolean) {\r\n    this.reportingShipStoresIsChecked.next(checked);\r\n  }\r\n\r\n  setSequenceNumbers(list) {\r\n    let tempSequenceNumber = 1;\r\n    list.forEach(item => {\r\n      item.sequenceNumber = tempSequenceNumber;\r\n      tempSequenceNumber++;\r\n    });\r\n    return list;\r\n  }\r\n\r\n  formatShipStores(shipStoresList: ShipStoresModel[]): ShipStoresModel[] {\r\n    let formattedList: ShipStoresModel[] = [];\r\n    if (shipStoresList && shipStoresList.length > 0) {\r\n      formattedList = shipStoresList.map(\r\n        item => {\r\n          const formattedShipStore = new ShipStoresModel();\r\n          formattedShipStore.portCallId = item.portCallId;\r\n          formattedShipStore.sequenceNumber = item.sequenceNumber;\r\n          formattedShipStore.articleName = item.articleName;\r\n          formattedShipStore.articleCode = item.articleCode;\r\n          formattedShipStore.quantity = item.quantity;\r\n          formattedShipStore.locationOnBoardCode = item.locationOnBoardCode;\r\n          formattedShipStore.locationOnBoard = item.locationOnBoard;\r\n          formattedShipStore.measurementTypeId = item.measurementTypeId;\r\n          formattedShipStore.articleName = item.articleName;\r\n          return formattedShipStore;\r\n        }\r\n      );\r\n    }\r\n    return formattedList;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/fal-ship-stores.service.ts","import { Injectable } from '@angular/core';\r\nimport { LocationModel } from 'app/shared/models/location-model';\r\nimport 'rxjs/add/observable/of';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { SearchService } from 'app/shared/services/search.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class LocationService {\r\n  private searchService: SearchService;\r\n  private locationUrl: string;\r\n  private locationTypeUrl: string;\r\n  private countryUrl: string;\r\n  private searchUrl: string;\r\n  private searchHarbourUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.locationUrl = 'api/location';\r\n    this.locationTypeUrl = 'api/locationtype';\r\n    this.countryUrl = 'api/country';\r\n    this.searchService = new SearchService(http);\r\n    this.searchUrl = 'api/location/search';\r\n    this.searchHarbourUrl = 'api/location/harbour/search';\r\n  }\r\n\r\n  private locationDataSource = new BehaviorSubject<any>(null);\r\n  locationData$ = this.locationDataSource.asObservable();\r\n\r\n  private locationSearchDataSource = new BehaviorSubject<any>(null);\r\n  locationSearchData$ = this.locationSearchDataSource.asObservable();\r\n\r\n  setLocationSearchData(data) {\r\n    this.locationSearchDataSource.next(data);\r\n  }\r\n\r\n  clearLocationSearch() {\r\n    this.setLocationData(null);\r\n    this.setLocationSearchData(null);\r\n  }\r\n\r\n  public search(term: string, restrictTypeHarbour: boolean, amount = 10): Observable<any> {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    const uri = (restrictTypeHarbour) ? this.searchHarbourUrl : this.searchUrl;\r\n    return this.searchService.search(uri, term, amount);\r\n  }\r\n\r\n  setLocationData(data) {\r\n    this.locationDataSource.next(data);\r\n  }\r\n\r\n  public updateLocation(location: LocationModel): Observable<any> {\r\n    location.country = null;\r\n    location.locationType = null;\r\n    return this.http\r\n      .put(this.locationUrl, location);\r\n  }\r\n\r\n  public registerLocation(newLocation: LocationModel): Observable<any> {\r\n    return this.http\r\n      .post(this.locationUrl, newLocation);\r\n  }\r\n\r\n  public getLocationTypes(): Observable<any> {\r\n    return this.http.get(this.locationTypeUrl);\r\n  }\r\n\r\n  public getCountries(): Observable<any> {\r\n    return this.http.get(this.countryUrl);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/location.service.ts","import { Injectable } from '@angular/core';\r\nimport { Headers, Http, Response } from '@angular/http';\r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { ConfigService } from '../utils/config.service';\r\nimport { BaseService } from './base.service';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Credentials } from '../interfaces/credentials.interface';\r\nimport { JWTResponse } from '../interfaces/jwt-response.interface';\r\n\r\n// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/services/user.service.ts\r\n\r\n@Injectable()\r\nexport class LoginService extends BaseService {\r\n  baseUrl = '';\r\n\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n  private _loggedInSource = new BehaviorSubject<boolean>(false);\r\n  loggedIn$ = this._loggedInSource.asObservable();\r\n  private loggedIn = false;\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private configService: ConfigService,\r\n    private jwtHelperService: JwtHelperService\r\n  ) {\r\n    super();\r\n    this.loggedIn = !!localStorage.getItem('auth_token');\r\n    // ?? not sure if this the best way to broadcast the status but seems to resolve issue on page refresh where auth status is lost in\r\n    // header component resulting in authed user nav links disappearing despite the fact user is still logged in\r\n    this._authNavStatusSource.next(this.loggedIn);\r\n    this.baseUrl = configService.getApiURI();\r\n    this.jwtHelperService = new JwtHelperService({\r\n      tokenGetter: () => localStorage.getItem('')\r\n    });\r\n  }\r\n\r\n  protected /*override*/ handleError(error: HttpErrorResponse | any) {\r\n    let errMsg: any;\r\n\r\n    if (error instanceof HttpErrorResponse) {\r\n      const ERROR = error as HttpErrorResponse;\r\n      if (ERROR.status >= 500) {\r\n        errMsg = `${ERROR.status} ${ERROR.statusText}`;\r\n      } else if (ERROR.status >= 400) {\r\n        errMsg = 'Login failed';\r\n      } else if (ERROR.error.error instanceof SyntaxError) {\r\n        errMsg = 'Application error';\r\n      } else {\r\n        errMsg = error.message ? error.message : error.toString();\r\n      }\r\n      return Observable.throw(errMsg);\r\n    }\r\n  }\r\n\r\n  login(credentials: Credentials): Observable<JWTResponse> {\r\n    const headers = new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n    });\r\n\r\n    return this.http\r\n      .post<JWTResponse>(\r\n        this.baseUrl + '/auth/login',\r\n        credentials,\r\n        { headers }\r\n      )\r\n      .map(jwtResponse => {\r\n        if (jwtResponse) {\r\n          localStorage.setItem('auth_token', jwtResponse.auth_token);\r\n          this.loggedIn = true;\r\n          this._loggedInSource.next(true);\r\n          this._authNavStatusSource.next(true);\r\n        } else {\r\n          this._loggedInSource.next(false);\r\n          this._authNavStatusSource.next(false);\r\n        }\r\n        return jwtResponse;\r\n      }, error => {\r\n        console.log('error logging in', error);\r\n      })\r\n      .catch(this.handleError);\r\n      // .catch( (error: HttpErrorResponse) => this.handleError2(error) );\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('user_claims');\r\n    this.loggedIn = false;\r\n    this._loggedInSource.next(false);\r\n    this._authNavStatusSource.next(false);\r\n  }\r\n\r\n  // Tips from https://ryanchenkie.com/angular-authentication-using-route-guards\r\n  isLoggedIn() {\r\n    // Get token from localStorage\r\n    const token = localStorage.getItem('auth_token');\r\n    // Check whether the token is expired\r\n    const isExpired = this.jwtHelperService.isTokenExpired(token);\r\n\r\n    return !isExpired;\r\n  }\r\n\r\n  private tryParseAsJson(error: any): boolean {\r\n    let response: any;\r\n    try {\r\n        response = error.json();\r\n    } catch (jsonError) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/login.service.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { OrganizationModel } from '../models/organization-model';\r\nimport { SearchService } from './search.service';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class OrganizationService {\r\n  private searchService: SearchService;\r\n  private searchOrganizationUrl: string;\r\n  private organizationUrl: string;\r\n  private organizationTypeUrl: string;\r\n  private organizationUserUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.searchService = new SearchService(http);\r\n    this.organizationUrl = 'api/organization';\r\n    this.organizationTypeUrl = 'api/organizationtype';\r\n    this.organizationUserUrl = this.organizationUrl + '/user';\r\n    this.searchOrganizationUrl = this.organizationUrl + '/search';\r\n  }\r\n\r\n  private organizationDataSource = new BehaviorSubject<any>(null);\r\n  organizationData$ = this.organizationDataSource.asObservable();\r\n\r\n  private organizationSearchDataSource = new BehaviorSubject<any>(null);\r\n  organizationSearchData$ = this.organizationSearchDataSource.asObservable();\r\n\r\n  setOrganizationData(data) {\r\n    this.organizationDataSource.next(data);\r\n  }\r\n\r\n  setOrganizationSearchData(data) {\r\n    this.organizationSearchDataSource.next(data);\r\n  }\r\n\r\n  public registerOrganization(newOrganization: OrganizationModel): Observable<any> {\r\n    return this.http\r\n      .post(this.organizationUrl, newOrganization);\r\n  }\r\n\r\n  updateOrganization(organization: OrganizationModel): Observable<any> {\r\n    return this.http\r\n      .put(this.organizationUrl, organization);\r\n  }\r\n\r\n  public search(term: string, amount = 10): Observable<any> {\r\n    if (term.length < 2) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.searchService.search(this.searchOrganizationUrl, term, amount);\r\n  }\r\n\r\n  public getOrganizationTypes(): Observable<any> {\r\n    return this.http.get(this.organizationTypeUrl);\r\n  }\r\n\r\n  public getOrganizationForUser(): Observable<any> {\r\n    const uri: string = this.organizationUserUrl;\r\n    return this.http.get(uri);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/organization.service.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/observable/of';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { FormMetaData } from '../interfaces/form-meta-data.interface';\r\nimport { PortCallDetailsModel } from '../models/port-call-details-model';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable()\r\nexport class PortCallDetailsService extends BaseService {\r\n\r\n  // Global purpose\r\n  private purposePortCallUrl = 'api/purpose/portcall';\r\n  private purposeOtherNameUrl = 'api/purpose/othername';\r\n  // Global details\r\n  private detailsUrl = 'api/portcalldetails';\r\n  private detailsPortCallUrl = 'api/portcalldetails/portcall';\r\n\r\n  private crewPassengersAndDimensionsSource = new BehaviorSubject<any>(null);\r\n  crewPassengersAndDimensionsData$ = this.crewPassengersAndDimensionsSource.asObservable();\r\n\r\n  private crewPassengersAndDimensionsMeta = new BehaviorSubject<FormMetaData>({ valid: true });\r\n  crewPassengersAndDimensionsMeta$ = this.crewPassengersAndDimensionsMeta.asObservable();\r\n\r\n  private cargoBriefDescriptionSource = new BehaviorSubject<string>('');\r\n  cargoBriefDescriptionData$ = this.cargoBriefDescriptionSource.asObservable();\r\n\r\n  private reportingForThisPortCallSource = new BehaviorSubject<any>(null);\r\n  reportingForThisPortCallData$ = this.reportingForThisPortCallSource.asObservable();\r\n\r\n  private portCallPurposeDataSource = new BehaviorSubject<any>(null);\r\n  portCallPurposeData$ = this.portCallPurposeDataSource.asObservable();\r\n\r\n  private otherPurposeNameSource = new BehaviorSubject<string>('');\r\n  otherPurposeName$ = this.otherPurposeNameSource.asObservable();\r\n\r\n  private otherPurposeDataSource = new BehaviorSubject<any>(null);\r\n  otherPurposeData$ = this.otherPurposeDataSource.asObservable();\r\n\r\n  private detailsPristine = new BehaviorSubject<boolean>(true);\r\n  detailsPristine$ = this.detailsPristine.asObservable();\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) {\r\n    super();\r\n  }\r\n\r\n  setDetails(details: PortCallDetailsModel) {\r\n    this.setCrewPassengersAndDimensionsData(details);\r\n    this.setReportingForThisPortCallData(details);\r\n    this.setCargoBriefDescriptionData(details.cargoBriefDescription);\r\n    this.detailsPristine.next(true);\r\n  }\r\n\r\n  setCrewPassengersAndDimensionsData(data) {\r\n    this.detailsPristine.next(false);\r\n    this.crewPassengersAndDimensionsSource.next(data);\r\n  }\r\n\r\n  setCrewPassengersAndDimensionsMeta(metaData: FormMetaData) {\r\n    this.crewPassengersAndDimensionsMeta.next(metaData);\r\n  }\r\n\r\n  setCargoBriefDescriptionData(data) {\r\n    this.cargoBriefDescriptionSource.next(data);\r\n  }\r\n\r\n  // Reporting\r\n  // This is a list of checkboxes that specify which FAL forms to include in this port call registration\r\n\r\n  setReportingForThisPortCallData(data) {\r\n    // NEW\r\n    this.detailsPristine.next(false);\r\n    this.reportingForThisPortCallSource.next(data);\r\n  }\r\n  // Purpose\r\n\r\n  setPortCallPurposeData(data) {\r\n    // NEW\r\n    this.detailsPristine.next(false);\r\n    this.portCallPurposeDataSource.next(data);\r\n  }\r\n  // User-specified purpose of type \"Other\"\r\n  setOtherPurposeName(data) {\r\n    this.detailsPristine.next(false);\r\n    this.otherPurposeNameSource.next(data);\r\n  }\r\n\r\n  setOtherPurposeData(data) {\r\n    // NEW - try to use otherpurpose object instead of just name string, for easier id handling etc.\r\n    this.otherPurposeDataSource.next(data);\r\n  }\r\n\r\n  setDetailsPristine(isPristine: boolean) {\r\n    this.detailsPristine.next(isPristine);\r\n  }\r\n\r\n  // Get methods\r\n  getDetailsByPortCallId(portCallId: number): Observable<PortCallDetailsModel> {\r\n    const uri: string = [this.detailsPortCallUrl, portCallId].join('/');\r\n    return this.http.get<PortCallDetailsModel>(uri);\r\n  }\r\n\r\n  getPurposeByPortCallId(portCallId: number): Observable<any> {\r\n    const uri: string = [this.purposePortCallUrl, portCallId].join('/');\r\n    return this.http.get<any>(uri);\r\n  }\r\n\r\n  getOtherName(portCallId: number) {\r\n    const uri: string = [this.purposeOtherNameUrl, portCallId].join('/');\r\n    return this.http.get(uri);\r\n  }\r\n\r\n  wipeDetailsData() {\r\n    this.reportingForThisPortCallSource.next(null);\r\n    this.crewPassengersAndDimensionsSource.next(null);\r\n    this.portCallPurposeDataSource.next(null);\r\n    this.otherPurposeNameSource.next('');\r\n    this.detailsPristine.next(true);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call-details.service.ts","import { Injectable } from '@angular/core';\r\nimport { BaseRequest } from 'app/shared/utils/base.request';\r\nimport { ConfigService } from 'app/shared/utils/config.service';\r\nimport { AuthRequest } from './auth.request.service';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class PortCallOverviewService extends BaseRequest {\r\n\r\n    private portCallUrl: string;\r\n    private portCallUserUrl: string;\r\n    private overviewUrl: string;\r\n    private partialOverviewUrl: string;\r\n\r\n    private overviewDataSource = new BehaviorSubject<any>(null);\r\n    overviewData$ = this.overviewDataSource.asObservable();\r\n\r\n    private draftOverviewDataSource = new BehaviorSubject<any>(null);\r\n    draftOverviewData$ = this.draftOverviewDataSource.asObservable();\r\n\r\n    private showCancelledPortCallsSource = new BehaviorSubject<boolean>(false);\r\n    showCancelledPortCalls$ = this.showCancelledPortCallsSource.asObservable();\r\n\r\n    private showCompletedPortCallsSource = new BehaviorSubject<boolean>(false);\r\n    showCompletedPortCalls$ = this.showCompletedPortCallsSource.asObservable();\r\n\r\n    private clearedByUserAgencyDataSource = new BehaviorSubject<any>(null);\r\n    clearedByUserAgencyOverviewData$ = this.clearedByUserAgencyDataSource.asObservable();\r\n\r\n    private portCallDataSource = new BehaviorSubject<any>(null);\r\n    portCallData$ = this.portCallDataSource.asObservable();\r\n\r\n    private loadingPortCallSource = new BehaviorSubject<boolean>(false);\r\n    loadingPortCall$ = this.loadingPortCallSource.asObservable();\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        configService: ConfigService\r\n    ) {\r\n        super(configService);\r\n        this.portCallUrl = 'api/portcall';\r\n        this.partialOverviewUrl = this.portCallUrl + '/partialOverview';\r\n        this.overviewUrl = this.portCallUrl + '/overview';\r\n        this.portCallUserUrl = this.portCallUrl + '/user';\r\n    }\r\n\r\n    setLoadingPortCall(data: boolean) {\r\n        this.loadingPortCallSource.next(data);\r\n    }\r\n\r\n    setOverviewData(data) {\r\n        this.overviewDataSource.next(data);\r\n    }\r\n\r\n    setDraftData(data) {\r\n        this.draftOverviewDataSource.next(data);\r\n    }\r\n\r\n    setShowCancelledPortCalls(showCancelled) {\r\n        this.showCancelledPortCallsSource.next(showCancelled);\r\n    }\r\n\r\n    setShowCompletedPortCalls(showCompleted) {\r\n        this.showCompletedPortCallsSource.next(showCompleted);\r\n    }\r\n\r\n    setClearedData(data) {\r\n        this.clearedByUserAgencyDataSource.next(data);\r\n    }\r\n\r\n    getPartialOverview(portCallId: number): Observable<any> {\r\n        const uri: string = [this.partialOverviewUrl, portCallId].join('/');\r\n        return this.http.get(uri);\r\n    }\r\n\r\n    getOverview(portCallId: number): Observable<any> {\r\n        const uri: string = [this.overviewUrl, portCallId].join('/');\r\n        return this.http.get(uri);\r\n    }\r\n\r\n    setPortCallData(data) {\r\n        this.portCallDataSource.next(data);\r\n    }\r\n\r\n    getPortCalls(): Observable<any> {\r\n        const uri = this.portCallUserUrl;\r\n        return this.http.get(uri);\r\n    }\r\n\r\n    getOverviews(): Observable<any> {\r\n        const uri = this.overviewUrl;\r\n        return this.http.get(uri);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call-overview.service.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { FormMetaData } from '../interfaces/form-meta-data.interface';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { CountryService } from './country.service';\r\nimport { PassengerModel } from '../models/port-call-passenger-model';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Injectable()\r\nexport class PortCallPassengerListService {\r\n\r\n  personOnBoardListUrl: string;\r\n\r\n  constructor(private http: HttpClient, private countryService: CountryService) {\r\n    this.personOnBoardListUrl = 'api/personOnBoard/list';\r\n  }\r\n\r\n  private passengerListSource = new BehaviorSubject<any>(null);\r\n  passengerList$ = this.passengerListSource.asObservable();\r\n\r\n  private passengerListMeta = new BehaviorSubject<any>({\r\n    valid: true\r\n  });\r\n  passengerListMeta$ = this.passengerListMeta.asObservable();\r\n\r\n  private dataIsPristine = new BehaviorSubject<Boolean>(true);\r\n  dataIsPristine$ = this.dataIsPristine.asObservable();\r\n\r\n  private passengerModelSource = new BehaviorSubject<PassengerModel>(new PassengerModel());\r\n  passengerModel$ = this.passengerModelSource.asObservable();\r\n\r\n  // Http\r\n  registerPassengerList(passengerList: any[]): Observable<any> {\r\n    const uri = this.personOnBoardListUrl;\r\n    return this.http.post(uri, passengerList);\r\n  }\r\n\r\n  updatePassengerList(passengerList: any[]): Observable<any> {\r\n    const uri = this.personOnBoardListUrl;\r\n    return this.http.put(uri, passengerList);\r\n  }\r\n\r\n  setPassengersList(data) {\r\n    this.passengerListSource.next(data);\r\n  }\r\n\r\n  setPassengerListMeta(metaData: FormMetaData) {\r\n    this.passengerListMeta.next(metaData);\r\n  }\r\n\r\n  setDataIsPristine(isPristine) {\r\n    this.dataIsPristine.next(isPristine);\r\n  }\r\n\r\n  setPortOfEmbarkation(data) {\r\n    console.log('Set port of embarkation: ' + data);\r\n    const tempPassengerModel = this.passengerModelSource.getValue();\r\n    tempPassengerModel.portOfEmbarkation = data;\r\n    this.passengerModelSource.next(tempPassengerModel);\r\n  }\r\n\r\n  setPortOfDisembarkation(data) {\r\n    const tempPassengerModel = this.passengerModelSource.getValue();\r\n    tempPassengerModel.portOfDisembarkation = data;\r\n    this.passengerModelSource.next(tempPassengerModel);\r\n  }\r\n\r\n  setPassengerModel(data) {\r\n    this.passengerModelSource.next(data);\r\n  }\r\n\r\n  searchCountry(term: string, amount = 10): Observable<any> {\r\n    if (term.length < 1) {\r\n      return Observable.of([]);\r\n    }\r\n    return this.countryService.search(term);\r\n  }\r\n\r\n\r\n  deletePassengerEntry(data) {\r\n    let copyPassengerList = this.passengerListSource.getValue();\r\n    data = JSON.stringify(this.createComparableObject(data));\r\n\r\n    // Find clicked item\r\n    copyPassengerList.forEach((item, index) => {\r\n      item = JSON.stringify(this.createComparableObject(item));\r\n      if (item === data) {\r\n        copyPassengerList.splice(index, 1);\r\n      }\r\n    });\r\n\r\n    copyPassengerList = this.setPassengerIds(copyPassengerList);\r\n    this.setPassengersList(copyPassengerList);\r\n\r\n    this.setDataIsPristine(false);\r\n  }\r\n\r\n  createComparableObject(item) {\r\n    const object = {\r\n      familyName: item.familyName,\r\n      givenName: item.givenName,\r\n      nationality: item.nationality,\r\n      dateOfBirth: item.dateOfBirth,\r\n      placeOfBirth: item.placeOfBirth,\r\n      countryOfBirth: item.countryOfBirth,\r\n      natureOfIdentityDoc: item.natureOfIdentityDoc,\r\n      numberOfIdentityDoc: item.numberOfIdentityDoc,\r\n      permitNumber: item.permitNumber,\r\n      portOfEmbarkation: item.portOfEmbarkation,\r\n      portOfDisembarkation: item.portOfDisembarkation,\r\n      transit: item.transit,\r\n      passengerId: item.passengerId,\r\n      portCallId: item.portCallId\r\n    };\r\n    return object;\r\n  }\r\n\r\n  setPassengerIds(list) {\r\n    let tempPassengerId = 1;\r\n    list.forEach(passenger => {\r\n      passenger.passengerId = tempPassengerId;\r\n      tempPassengerId++;\r\n    });\r\n    return list;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call-passenger-list.service.ts","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport 'rxjs/add/observable/of';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LocationModel } from '../models/location-model';\r\nimport { PortCallDetailsModel } from '../models/port-call-details-model';\r\nimport { PortCallModel } from '../models/port-call-model';\r\nimport { PortCallDetailsService } from './port-call-details.service';\r\nimport { PrevAndNextPocService } from './prev-and-next-poc.service';\r\n\r\n@Injectable()\r\nexport class PortCallService {\r\n  // Global port call\r\n  private portCallUrl = 'api/portcall';\r\n  private portCallUserUrl = 'api/portcall/user';\r\n  private updatePortCallStatusAwaitingClearanceUrl = 'api/portcall/updatestatus/awaitingclearance';\r\n  private updatePortCallStatusCancelledUrl = 'api/portcall/updatestatus/cancelled';\r\n  private updatePortCallStatusClearedUrl = 'api/portcall/updatestatus/cleared';\r\n  private updatePortCallStatusCompletedUrl = 'api/portcall/updatestatus/completed';\r\n  private updatePortCallStatusDraftUrl = 'api/portCall/updateStatus/draft';\r\n\r\n  // Global details\r\n  private detailsUrl = 'api/portcalldetails';\r\n  private detailsPortCallUrl = 'api/portcalldetails/portcall';\r\n\r\n  // Global purpose\r\n  private purposePortCallUrl = 'api/purpose/portcall';\r\n  private purposeOtherNameUrl = 'api/purpose/othername';\r\n\r\n  // Global clearance\r\n  private clearanceUrl = 'api/organizationportcall';\r\n  private clearancePortCallUrl = 'api/organizationportcall/portcall';\r\n\r\n  // Data sources with observables\r\n  private updateOverviewSource = new BehaviorSubject<any>(null);\r\n  updateOverview$ = this.updateOverviewSource.asObservable();\r\n\r\n  private shipDataSource = new BehaviorSubject<any>(null);\r\n  shipData$ = this.shipDataSource.asObservable();\r\n\r\n  private locationDataSource = new BehaviorSubject<any>(null);\r\n  locationData$ = this.locationDataSource.asObservable();\r\n\r\n  private etaEtdDataSource = new BehaviorSubject<any>(null);\r\n  etaEtdData$ = this.etaEtdDataSource.asObservable();\r\n\r\n  private portCallStatusSource = new BehaviorSubject<any>(null);\r\n  portCallStatusData$ = this.portCallStatusSource.asObservable();\r\n\r\n  private portCallIdSource = new BehaviorSubject<any>(null);\r\n  portCallIdData$ = this.portCallIdSource.asObservable();\r\n\r\n  private clearanceDataSource = new BehaviorSubject<any>(null);\r\n  clearanceData$ = this.clearanceDataSource.asObservable();\r\n\r\n  private clearanceListDataSource = new BehaviorSubject<any>(null);\r\n  clearanceListData$ = this.clearanceListDataSource.asObservable();\r\n\r\n  private createdByUserDataSource = new BehaviorSubject<any>(null);\r\n  createdByUserData$ = this.createdByUserDataSource.asObservable();\r\n\r\n  constructor(\r\n    private http: HttpClient,\r\n    private prevAndNextPocService: PrevAndNextPocService,\r\n    private portCallDetailsService: PortCallDetailsService\r\n  ) { }\r\n\r\n  // Helper method for ETA/ETD formatting\r\n  etaEtdDataFormat(arrival, departure) {\r\n    const etaData = new Date(arrival);\r\n    const etdData = new Date(departure);\r\n    return {\r\n      eta: {\r\n        year: etaData.getFullYear(),\r\n        month: etaData.getMonth() + 1,\r\n        day: etaData.getDate(),\r\n        hour: etaData.getHours(),\r\n        minute: etaData.getMinutes()\r\n      },\r\n      etd: {\r\n        year: etdData.getFullYear(),\r\n        month: etdData.getMonth() + 1,\r\n        day: etdData.getDate(),\r\n        hour: etdData.getHours(),\r\n        minute: etdData.getMinutes()\r\n      }\r\n    };\r\n  }\r\n\r\n  setUpdateOverview(data) {\r\n    this.updateOverviewSource.next(data);\r\n  }\r\n\r\n  /** * * * * * * * * * * *\r\n   *                       *\r\n   *  == NEW PORT CALL ==  *\r\n   *                       *\r\n   * * * * * * * * * * * * */\r\n  // setPortCall: sets values for: Ship, Location, ETA/ETD, and Clearance list\r\n  setPortCall(overview: any) {\r\n    console.log(overview);\r\n    this.setPortCallIdData(overview.portCall.portCallId);\r\n    // Ship Location Time\r\n    this.setShipData(overview.ship);\r\n    this.setLocationData(overview.location);\r\n    const etaEtd = this.etaEtdDataFormat(\r\n      overview.portCall.locationEta,\r\n      overview.portCall.locationEtd\r\n    );\r\n    this.setEtaEtdData(etaEtd);\r\n    // Clearance list\r\n    this.setClearanceListData(overview.clearanceList);\r\n    this.setPortCallStatus(overview.status);\r\n    // User info\r\n    this.setCreatedByUserData(overview.portCall.user);\r\n  }\r\n\r\n  updatePortCall(portCall: PortCallModel): Observable<any> {\r\n    console.log('Updating port call...');\r\n    return this.http\r\n      .put(this.portCallUrl, portCall);\r\n  }\r\n  setShipData(data) {\r\n    this.shipDataSource.next(data);\r\n  }\r\n  setLocationData(data) {\r\n    this.locationDataSource.next(data);\r\n  }\r\n  setEtaEtdData(data) {\r\n    this.etaEtdDataSource.next(data);\r\n  }\r\n  setPortCallStatus(data) {\r\n    this.portCallStatusSource.next(data);\r\n  }\r\n  setPortCallIdData(data) {\r\n    this.portCallIdSource.next(data);\r\n  }\r\n  setCreatedByUserData(data) {\r\n    this.createdByUserDataSource.next(data);\r\n  }\r\n\r\n  // REGISTER NEW PORT CALL\r\n  registerNewPortCall(portCall: PortCallModel): Observable<PortCallModel> {\r\n    console.log('Registering new port call...');\r\n    const uri: string = this.portCallUrl;\r\n    this.setPortCallStatus('Draft');\r\n    return this.http.post<PortCallModel>(uri, portCall);\r\n  }\r\n  // Set port call status to awaiting clearance\r\n  updatePortCallStatusAwaitingClearance(portCallId: number) {\r\n    const uri = [\r\n      this.updatePortCallStatusAwaitingClearanceUrl,\r\n      portCallId\r\n    ].join('/');\r\n    console.log('Updating port call status to awaiting clearance...');\r\n    return this.http.post(uri, null);\r\n  }\r\n  // Set port call status to cleared\r\n  updatePortCallStatusCleared(portCallId: number): Observable<any> {\r\n    const uri = [this.updatePortCallStatusClearedUrl, portCallId].join('/');\r\n    console.log('Updating port call status to cleared...');\r\n    return this.http.post(uri, null);\r\n  }\r\n  // Set port call status to completed\r\n  updatePortCallStatusCompleted(portCallId: number): Observable<any> {\r\n    const uri = [this.updatePortCallStatusCompletedUrl, portCallId].join('/');\r\n    console.log('Updating port call status to completed...');\r\n    return this.http.post(uri, null);\r\n  }\r\n  // Set port call status to cancelled\r\n  updatePortCallStatusCancelled(portCallId: number) {\r\n    const uri = [this.updatePortCallStatusCancelledUrl, portCallId].join('/');\r\n    console.log('Updating port call status to cancelled...');\r\n    this.http\r\n      .post(uri, null)\r\n      .subscribe(updateStatusResponse => {\r\n        console.log('Port call successfully cancelled.');\r\n      });\r\n  }\r\n  // Set port call status to draft\r\n  updatePortCallStatusDraft(portCallId: number) {\r\n    const uri = [this.updatePortCallStatusDraftUrl, portCallId].join('/');\r\n    console.log('Updating port call status to draft...');\r\n    return this.http\r\n      .put(uri, null)\r\n      .map(res => res);\r\n  }\r\n\r\n  // Sets port call status to deleted\r\n  deletePortCallDraft(portCall: PortCallModel): Observable<PortCallModel> {\r\n    console.log('Deleting port call...');\r\n    const uri: string = [this.portCallUrl, 'delete', portCall.portCallId].join('/');\r\n    return this.http.put<PortCallModel>(uri, null);\r\n  }\r\n  // Get methods\r\n  getPortCallById(portCallId: number): Observable<PortCallModel> {\r\n    const uri: string = [this.portCallUrl, portCallId].join('/');\r\n\r\n    return this.http.get<PortCallModel>(uri);\r\n  }\r\n\r\n  getPortCallsByUserId(userId: number): Observable<PortCallModel[]> {\r\n    const uri: string = [this.portCallUserUrl, userId].join('/');\r\n    return this.http.get<PortCallModel[]>(uri);\r\n  }\r\n\r\n  // SAVE DETAILS\r\n  saveDetails(details: PortCallDetailsModel, purposes: any, otherName: string) {\r\n    console.log(details);\r\n    details.portCallDetailsId = details.portCallId; // To ensure one-to-one in DB\r\n    console.log('Saving port call details...');\r\n    this.http.post(this.detailsUrl, details).subscribe(detailsResponse => {\r\n      console.log('Successfully saved port call details.');\r\n      this.savePurposesForPortCall(details.portCallId, purposes, otherName);\r\n    });\r\n  }\r\n\r\n  savePurposesForPortCall(pcId: number, purposes: any, otherName: string) {\r\n    if (purposes == null || purposes.length === 0) {\r\n      const uri = [this.purposePortCallUrl, pcId.toString()].join('/');\r\n      this.http\r\n        .delete(uri)\r\n        .subscribe(removePurposeResponse => {\r\n          if (removePurposeResponse) {\r\n            this.portCallDetailsService.setDetailsPristine(true);\r\n          }\r\n        });\r\n    } else {\r\n      const pcHasPurposeList = purposes.map(p => {\r\n        return {\r\n          portCallId: pcId,\r\n          portCallPurposeId: p.portCallPurposeId,\r\n          purposeIfUnknown: p.name === 'Other' ? otherName : null\r\n        };\r\n      });\r\n      console.log('Saving port call purposes to database...');\r\n      this.http\r\n        .put(this.purposePortCallUrl, pcHasPurposeList)\r\n\r\n        .subscribe(purposeResponse => {\r\n          if (purposeResponse) {\r\n            this.portCallDetailsService.setDetailsPristine(true);\r\n          }\r\n          console.log('Purposes successfully saved.');\r\n        });\r\n    }\r\n  }\r\n\r\n  savePrevAndNextPortCall(\r\n    portCallId: number,\r\n    prevPortOfCall: LocationModel,\r\n    nextPortCall: LocationModel,\r\n    prevEtd: Date,\r\n    nextEta: Date\r\n  ) {\r\n    // const updatedPortCallData = new PortCallModel();\r\n    this.getPortCallById(portCallId).subscribe(data => {\r\n      if (data) {\r\n        const updatedPortCallData = data;\r\n        updatedPortCallData.previousLocationId =\r\n          prevPortOfCall != null ? prevPortOfCall.locationId : null;\r\n        updatedPortCallData.nextLocationId =\r\n          nextPortCall != null ? nextPortCall.locationId : null;\r\n        updatedPortCallData.previousLocationEtd = prevEtd;\r\n        updatedPortCallData.nextLocationEta = nextEta;\r\n        console.log(updatedPortCallData);\r\n        this.updatePortCall(updatedPortCallData).subscribe(\r\n          result => {\r\n            console.log(result);\r\n            this.prevAndNextPocService.setDataPristine(true);\r\n          },\r\n          error => {\r\n            console.log(error);\r\n          }\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  /** * * * * * * * * *\r\n   *                   *\r\n   *  == CLEARANCE ==  *\r\n   *                   *\r\n   * * * * * * * * * * */\r\n\r\n  setClearance(data) {\r\n    this.clearanceDataSource.next(data);\r\n  }\r\n\r\n  // Clearance agencies list\r\n\r\n  setClearanceListData(data) {\r\n    // NEW\r\n    this.clearanceListDataSource.next(data);\r\n  }\r\n\r\n  saveClearance(clearanceModel: any) {\r\n    console.log('Saving clearance to database...');\r\n    this.http\r\n      .put(this.clearanceUrl, clearanceModel)\r\n      .subscribe(\r\n        data => {\r\n          console.log('Clearance saved successfully.');\r\n        },\r\n        error => {\r\n          console.log('ERROR: ', error);\r\n        }\r\n      );\r\n  }\r\n\r\n  getClearanceListForPortCall(portCallId: number): Observable<any> {\r\n    const uri: string = [this.clearancePortCallUrl, portCallId].join('/');\r\n    return this.http.get(uri);\r\n  }\r\n\r\n  // REGISTER CLEARANCE AGENCIES FOR NEW PORT CALL\r\n  registerClearanceAgenciesForPortCall(portCall: PortCallModel) {\r\n    // NEW\r\n    this.http\r\n      .post(this.clearanceUrl, portCall)\r\n      .subscribe(clearanceData => {\r\n        console.log(\r\n          'Clearance agency information successfully added to port call.'\r\n        );\r\n        this.clearanceListDataSource.next(clearanceData);\r\n      });\r\n  }\r\n\r\n  // Wipe methods\r\n  wipeServiceData() {\r\n    this.shipDataSource.next(null);\r\n    this.locationDataSource.next(null);\r\n    this.etaEtdDataSource.next(null);\r\n    this.clearanceListDataSource.next(null);\r\n    this.createdByUserDataSource.next(null);\r\n    // Details\r\n    this.portCallDetailsService.wipeDetailsData();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call.service.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { LocationModel } from '../models/location-model';\r\nimport { BaseService } from './base.service';\r\nimport { FormMetaData } from '../interfaces/form-meta-data.interface';\r\n\r\n@Injectable()\r\nexport class PrevAndNextPocService extends BaseService {\r\n  private prevPortOfCallSource = new BehaviorSubject<LocationModel>(null);\r\n  prevPortOfCallData$ = this.prevPortOfCallSource.asObservable();\r\n\r\n  private nextPortOfCallSource = new BehaviorSubject<LocationModel>(null);\r\n  nextPortOfCallData$ = this.nextPortOfCallSource.asObservable();\r\n\r\n  private prevPortOfCallEtdSource = new BehaviorSubject<Date>(null);\r\n  prevPortOfCallEtdData$ = this.prevPortOfCallEtdSource.asObservable();\r\n\r\n  private nextPortOfCallEtaSource = new BehaviorSubject<Date>(null);\r\n  nextPortOfCallEtaData$ = this.nextPortOfCallEtaSource.asObservable();\r\n\r\n  private prevAndNextPortOfCallMeta = new BehaviorSubject<FormMetaData>({\r\n    valid: true\r\n  });\r\n  prevAndNextPortOfCallMeta$ = this.prevAndNextPortOfCallMeta.asObservable();\r\n\r\n  private dataIsPristine = new BehaviorSubject<boolean>(true);\r\n  dataIsPristine$ = this.dataIsPristine.asObservable();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  setDataPristine(data: boolean) {\r\n    this.dataIsPristine.next(data);\r\n  }\r\n\r\n  setPrevPortOfCall(prevPortOfCall: LocationModel) {\r\n    this.dataIsPristine.next(false);\r\n    this.prevPortOfCallSource.next(prevPortOfCall);\r\n  }\r\n\r\n  setNextPortOfCall(nextPortOfCall: LocationModel) {\r\n    this.dataIsPristine.next(false);\r\n    this.nextPortOfCallSource.next(nextPortOfCall);\r\n  }\r\n\r\n  setPrevPortOfCallEtd(prevPortOfCallEtd) {\r\n    this.dataIsPristine.next(false);\r\n    this.prevPortOfCallEtdSource.next(prevPortOfCallEtd);\r\n  }\r\n\r\n  setNextPortOfCallEta(nextPortOfCallEta: Date) {\r\n    this.dataIsPristine.next(false);\r\n    this.nextPortOfCallEtaSource.next(nextPortOfCallEta);\r\n  }\r\n\r\n  setPrevAndNextPortOfCallMeta(metaData: FormMetaData) {\r\n      this.prevAndNextPortOfCallMeta.next(metaData);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/prev-and-next-poc.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class PurposeService {\r\n  private purposeUrl = 'api/purpose';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getPurposes(): Observable<any> {\r\n    return this.http.get(this.purposeUrl);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/purpose.service.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class SearchService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public search(baseUrl: string, term: string, amount = 10): Observable<any> {\r\n    const encodedTerm: string = encodeURIComponent(term);\r\n    const uri: string = [baseUrl, encodedTerm, amount].join('/');\r\n\r\n    return this.http.get(uri);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/search.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { ShipContactModel } from '../models/ship-contact-model';\r\nimport { AuthRequest } from './auth.request.service';\r\nimport 'rxjs/add/observable/of';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class ShipService {\r\n  private shipUrl = 'api/ship';\r\n  private shipTypeUrl = 'api/shiptype';\r\n  private hullTypeUrl = 'api/shiphulltype';\r\n  private lengthTypeUrl = 'api/shiplengthtype';\r\n  private breadthTypeUrl = 'api/shipbreadthtype';\r\n  private powerTypeUrl = 'api/shippowertype';\r\n  private shipSourceUrl = 'api/shipsource';\r\n  private shipStatusListUrl = 'api/shipstatus';\r\n  private contactListShipUrl = 'api/shipcontact/ship';\r\n  private shipContactListUrl = 'api/shipcontact/list';\r\n\r\n  private shipDataSource = new BehaviorSubject<any>(null);\r\n  shipData$ = this.shipDataSource.asObservable();\r\n\r\n  private shipSearchDataSource = new BehaviorSubject<any>(null);\r\n  shipSearchData$ = this.shipSearchDataSource.asObservable();\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  registerShip(newShip: any): Observable<any> {\r\n    return this.http\r\n      .post(this.shipUrl, newShip);\r\n  }\r\n\r\n  getShip(id: number): Observable<any> {\r\n    const uri = [this.shipUrl, id].join('/');\r\n    return this.http.get(uri);\r\n  }\r\n\r\n  setShipData(data) {\r\n    this.shipDataSource.next(data);\r\n  }\r\n\r\n  setShipSearchData(data) {\r\n    this.shipSearchDataSource.next(data);\r\n  }\r\n\r\n  updateShip(ship: any) {\r\n    return this.http.put(this.shipUrl, ship);\r\n  }\r\n\r\n  saveShipContactList(shipContactList: ShipContactModel[]) {\r\n    return this.http.post(this.shipContactListUrl, shipContactList);\r\n  }\r\n\r\n  getShipTypes(): Observable<any> {\r\n    return this.http.get(this.shipTypeUrl);\r\n  }\r\n\r\n  getHullTypes(): Observable<any> {\r\n    return this.http.get(this.hullTypeUrl);\r\n  }\r\n\r\n  getLengthTypes(): Observable<any> {\r\n    return this.http.get(this.lengthTypeUrl);\r\n  }\r\n\r\n  getBreadthTypes(): Observable<any> {\r\n    return this.http.get(this.breadthTypeUrl);\r\n  }\r\n\r\n  getPowerTypes(): Observable<any> {\r\n    return this.http.get(this.powerTypeUrl);\r\n  }\r\n\r\n  getShipSources(): Observable<any> {\r\n    return this.http.get(this.shipSourceUrl);\r\n  }\r\n\r\n  getShipStatusList(): Observable<any> {\r\n    return this.http.get(this.shipStatusListUrl);\r\n  }\r\n\r\n  getContactList(shipId: number): Observable<any> {\r\n    const uri: string = [this.contactListShipUrl, shipId].join('/');\r\n    return this.http.get(uri);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/ship.service.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { OrganizationButtonRowComponent } from 'app/shared/components/organization-smart-table/organization-button-row/organization-button-row.component';\r\nimport { OrganizationSmartTableComponent } from 'app/shared/components/organization-smart-table/organization-smart-table.component';\r\nimport { ShipButtonRowComponent } from 'app/shared/components/ship-smart-table/ship-button-row/ship-button-row.component';\r\nimport { DbConnectionService } from 'app/shared/services/db-connection.service';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { ConfirmationModalComponent } from './components/confirmation-modal/confirmation-modal.component';\r\nimport { ClearancesComponent } from './components/confirmation-view/clearances/clearances.component';\r\nimport { ConfirmationViewComponent } from './components/confirmation-view/confirmation-view.component';\r\nimport { PortCallDetailsComponent } from './components/confirmation-view/port-call-details/port-call-details.component';\r\nimport { SelectedPurposesComponent } from './components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component';\r\nimport { ContactSelectComponent } from './components/contact-select/contact-select.component';\r\nimport { DateTimePickerComponent } from './components/date-time-picker/date-time-picker.component';\r\nimport { LocationInfoTableComponent } from './components/location-info-table/location-info-table.component';\r\nimport { LocationTimeInfoTableComponent } from './components/location-time-info-table/location-time-info-table.component';\r\nimport { PrevAndNextPocTableComponent } from './components/prev-and-next-poc-table/prev-and-next-poc-table.component';\r\nimport { SearchLocationComponent } from './components/search-location/search-location.component';\r\nimport { SearchOrganizationComponent } from './components/search-organization/search-organization.component';\r\nimport { SearchShipFlagCodeComponent } from './components/search-ship-flag-code/search-ship-flag-code.component';\r\nimport { SearchShipComponent } from './components/search-ship/search-ship.component';\r\nimport { SelectShipContactComponent } from './components/select-ship-contact/select-ship-contact.component';\r\nimport { SelectedContactMediumsComponent } from './components/selected-contact-mediums/selected-contact-mediums.component';\r\nimport { ShipInfoTableComponent } from './components/ship-info-table/ship-info-table.component';\r\nimport { ShipSmartTableComponent } from './components/ship-smart-table/ship-smart-table.component';\r\nimport { SsnBgComponent } from './components/ssn-bg/ssn-bg.component';\r\nimport { SsnCardComponent } from './components/ssn-card/ssn-card.component';\r\nimport { SsnTableComponent } from './components/ssn-table/ssn-table.component';\r\nimport { TableCardComponent } from './components/table-card/table-card.component';\r\nimport { LocationService } from './services/location.service';\r\nimport { OrganizationService } from './services/organization.service';\r\nimport { ShipService } from './services/ship.service';\r\nimport { IntegerValidator } from './utils/custom-validators/integer-validator.directive';\r\nimport { NumberValidator } from './utils/custom-validators/number-validator.directive';\r\nimport { PositiveNumberValidator } from './utils/custom-validators/positive-number-validator.directive';\r\nimport { CargoInfoTableComponent } from './components/confirmation-view/cargo-info-table/cargo-info-table.component';\r\nimport { FeedbackComponent } from './components/feedback/feedback.component';\r\nimport { UserInfoTableComponent } from './components/confirmation-view/user-info-table/user-info-table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    Ng2SmartTableModule,\r\n    NgbModule,\r\n    NgSelectModule,\r\n  ],\r\n  declarations: [\r\n    ClearancesComponent,\r\n    ConfirmationModalComponent,\r\n    ConfirmationViewComponent,\r\n    IntegerValidator,\r\n    LocationInfoTableComponent,\r\n    LocationTimeInfoTableComponent,\r\n    NumberValidator,\r\n    OrganizationButtonRowComponent,\r\n    OrganizationSmartTableComponent,\r\n    PortCallDetailsComponent,\r\n    PositiveNumberValidator,\r\n    SearchLocationComponent,\r\n    SearchOrganizationComponent,\r\n    SearchShipComponent,\r\n    SelectedContactMediumsComponent,\r\n    SelectedPurposesComponent,\r\n    SelectShipContactComponent,\r\n    ShipButtonRowComponent,\r\n    ShipInfoTableComponent,\r\n    ShipSmartTableComponent,\r\n    SsnBgComponent,\r\n    SsnCardComponent,\r\n    TableCardComponent,\r\n    DateTimePickerComponent,\r\n    SsnTableComponent,\r\n    PrevAndNextPocTableComponent,\r\n    SearchShipFlagCodeComponent,\r\n    ContactSelectComponent,\r\n    FeedbackComponent,\r\n    CargoInfoTableComponent,\r\n    UserInfoTableComponent,\r\n  ],\r\n  exports: [\r\n    ConfirmationModalComponent,\r\n    ConfirmationViewComponent,\r\n    IntegerValidator,\r\n    LocationInfoTableComponent,\r\n    LocationTimeInfoTableComponent,\r\n    NumberValidator,\r\n    OrganizationSmartTableComponent,\r\n    PositiveNumberValidator,\r\n    SearchLocationComponent,\r\n    SearchOrganizationComponent,\r\n    SearchShipComponent,\r\n    SelectedContactMediumsComponent,\r\n    SelectShipContactComponent,\r\n    ShipInfoTableComponent,\r\n    ShipSmartTableComponent,\r\n    SsnBgComponent,\r\n    SsnCardComponent,\r\n    TableCardComponent,\r\n    DateTimePickerComponent,\r\n    SsnTableComponent,\r\n    PrevAndNextPocTableComponent,\r\n    SearchShipFlagCodeComponent,\r\n    ContactSelectComponent,\r\n    FeedbackComponent\r\n  ],\r\n  providers: [\r\n    LocationService,\r\n    OrganizationService,\r\n    ShipService,\r\n    DbConnectionService\r\n  ],\r\n  entryComponents: [\r\n    ConfirmationModalComponent,\r\n    ShipButtonRowComponent,\r\n    OrganizationButtonRowComponent,\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { BaseService } from 'app/shared/services/base.service';\r\nimport { ConfigService } from './config.service';\r\n\r\nexport abstract class BaseRequest extends BaseService {\r\n  protected baseUrl: string;\r\n\r\n  constructor(\r\n    private configService: ConfigService\r\n  ) {\r\n    super();\r\n    this.baseUrl = this.configService.getApiURI();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/base.request.ts","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/utils/config.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class ConfigService {\r\n  _apiURI: string;\r\n\r\n  constructor() {\r\n    this._apiURI = 'api';\r\n  }\r\n\r\n  getApiURI() {\r\n    return this._apiURI;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/config.service.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector:\r\n    // tslint:disable-next-line:directive-selector\r\n    '[integerValidator][formControlName],[integerValidator][formControl],[integerValidator][ngModel]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => IntegerValidator),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class IntegerValidator implements Validator {\r\n  constructor() {}\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (\r\n      c.value !== undefined &&\r\n      (isNaN(c.value) || c.value - Math.floor(c.value) !== 0)\r\n    ) {\r\n      return { notIntegerError: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/integer-validator.directive.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector:\r\n    // tslint:disable-next-line:directive-selector\r\n    '[numberValidator][formControlName],[numberValidator][formControl],[numberValidator][ngModel]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => NumberValidator),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class NumberValidator implements Validator {\r\n  constructor() {}\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (c.value !== undefined && c.value === null) {\r\n      return { notNumberError: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/number-validator.directive.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector:\r\n    // tslint:disable-next-line:directive-selector\r\n    '[positiveNumberValidator][formControlName],[positiveNumberValidator][formControl],[positiveNumberValidator][ngModel]',\r\n  providers: [\r\n    {\r\n      provide: NG_VALIDATORS,\r\n      useExisting: forwardRef(() => PositiveNumberValidator),\r\n      multi: true\r\n    }\r\n  ]\r\n})\r\nexport class PositiveNumberValidator implements Validator {\r\n  constructor() {}\r\n\r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (c.value !== undefined && (isNaN(c.value) || c.value < 0)) {\r\n      return { notPositiveNumberError: true };\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/positive-number-validator.directive.ts","import { Request, XHRBackend, BrowserXhr, ResponseOptions, XSRFStrategy, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport { Injectable } from '@angular/core';\r\n\r\n// sweet global way to handle 401s - works in tandem with existing AuthGuard route checks\r\n// http://stackoverflow.com/questions/34934009/handling-401s-globally-with-angular-2\r\n@Injectable()\r\nexport class AuthenticateXHRBackend extends XHRBackend {\r\n\r\n    constructor(\r\n        _browserXhr: BrowserXhr,\r\n        _baseResponseOptions: ResponseOptions,\r\n        _xsrfStrategy: XSRFStrategy\r\n    ) {\r\n        super(_browserXhr, _baseResponseOptions, _xsrfStrategy);\r\n    }\r\n\r\n    createConnection(request: Request) {\r\n        const xhrConnection = super.createConnection(request);\r\n        xhrConnection.response = xhrConnection.response.catch((error: Response) => {\r\n            if ((error.status === 401 || error.status === 403) && (window.location.href.match(/\\?/g) || []).length < 2) {\r\n\r\n                console.log('The authentication session expired or the user is not authorized. Force refresh of the current page.');\r\n                /* Great solution for bundling with Auth Guard!\r\n                1. Auth Guard checks authorized user (e.g. by looking into LocalStorage).\r\n                2. On 401/403 response you clean authorized user for the Guard (e.g. by removing coresponding parameters in LocalStorage).\r\n                3. As at this early stage you can't access the Router for forwarding to the login page,\r\n                4. refreshing the same page will trigger the Guard checks, which will forward you to the login screen */\r\n                localStorage.removeItem('auth_token');\r\n                localStorage.removeItem('user_claims');\r\n                const loc = window.location;\r\n                const baseUrl = loc.protocol + '//' + loc.hostname + (loc.port ? (':' + loc.port) : '') + '/';\r\n                window.location.href = baseUrl + '?' + new Date().getMilliseconds();\r\n                // window.location.href = window.location.href + '?' + new Date().getMilliseconds();\r\n            }\r\n            return Observable.throw(error);\r\n        });\r\n        return xhrConnection;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/authenticate-xhr.backend.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Injectable } from '@angular/core';\r\nimport { PreloadingStrategy, Route } from '@angular/router';\r\n// import { Observable } from 'rxjs';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\n\r\n\r\n@Injectable()\r\nexport class SelectivePreloadingStrategy implements PreloadingStrategy {\r\n  preloadedModules: string[] = [];\r\n\r\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\r\n    if (route.data && route.data['preload']) {\r\n      // add the route path to the preloaded module array\r\n      this.preloadedModules.push(route.path);\r\n\r\n      // log the route path to the console\r\n      console.log('Preloaded: ' + route.path);\r\n\r\n      return load();\r\n    } else {\r\n      return of(null);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/selective-preloading-strategy.ts"],"sourceRoot":"webpack:///"}