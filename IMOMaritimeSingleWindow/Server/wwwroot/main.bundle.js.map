{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/auth/guards/auth.guard.ts","./src/app/auth/guards/login-auth.guard.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/main-content/content-container/basis-data/basis-data.module.ts","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html","./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.ts","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html","./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.ts","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html","./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.ts","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html","./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.ts","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html","./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.ts","./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.css","./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.html","./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.ts","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html","./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.ts","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html","./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.ts","./src/app/main-content/content-container/content-container.component.css","./src/app/main-content/content-container/content-container.component.html","./src/app/main-content/content-container/content-container.component.ts","./src/app/main-content/content-container/content-container.module.ts","./src/app/main-content/content-container/port-call/clearance/clearance.component.css","./src/app/main-content/content-container/port-call/clearance/clearance.component.html","./src/app/main-content/content-container/port-call/clearance/clearance.component.ts","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html","./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.ts","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html","./src/app/main-content/content-container/port-call/confirmation/confirmation.component.ts","./src/app/main-content/content-container/port-call/confirmation/confirmation.module.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.ts","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html","./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.ts","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html","./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.ts","./src/app/main-content/content-container/port-call/overview/overview.component.css","./src/app/main-content/content-container/port-call/overview/overview.component.html","./src/app/main-content/content-container/port-call/overview/overview.component.ts","./src/app/main-content/content-container/port-call/port-call.component.css","./src/app/main-content/content-container/port-call/port-call.component.html","./src/app/main-content/content-container/port-call/port-call.component.ts","./src/app/main-content/content-container/port-call/port-call.module.ts","./src/app/main-content/content-container/port-call/registration/forms/forms.component.css","./src/app/main-content/content-container/port-call/registration/forms/forms.component.html","./src/app/main-content/content-container/port-call/registration/forms/forms.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.ts","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html","./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.ts","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html","./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.ts","./src/app/main-content/content-container/port-call/registration/registration.component.css","./src/app/main-content/content-container/port-call/registration/registration.component.html","./src/app/main-content/content-container/port-call/registration/registration.component.ts","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html","./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.ts","./src/app/main-content/header/header.component.css","./src/app/main-content/header/header.component.html","./src/app/main-content/header/header.component.ts","./src/app/main-content/header/menu.service.ts","./src/app/main-content/main-content.component.css","./src/app/main-content/main-content.component.html","./src/app/main-content/main-content.component.ts","./src/app/rxjs-operators.js","./src/app/shared/components/confirmation-modal/confirmation-modal.component.css","./src/app/shared/components/confirmation-modal/confirmation-modal.component.html","./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","./src/app/shared/components/confirmation-view/clearances/clearances.component.css","./src/app/shared/components/confirmation-view/clearances/clearances.component.html","./src/app/shared/components/confirmation-view/clearances/clearances.component.ts","./src/app/shared/components/confirmation-view/confirmation-view.component.css","./src/app/shared/components/confirmation-view/confirmation-view.component.html","./src/app/shared/components/confirmation-view/confirmation-view.component.ts","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html","./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.ts","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html","./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.ts","./src/app/shared/components/contact-select/contact-select.component.css","./src/app/shared/components/contact-select/contact-select.component.html","./src/app/shared/components/contact-select/contact-select.component.ts","./src/app/shared/components/location-info-table/location-info-table.component.css","./src/app/shared/components/location-info-table/location-info-table.component.html","./src/app/shared/components/location-info-table/location-info-table.component.ts","./src/app/shared/components/location-time-info-table/location-time-info-table.component.css","./src/app/shared/components/location-time-info-table/location-time-info-table.component.html","./src/app/shared/components/location-time-info-table/location-time-info-table.component.ts","./src/app/shared/components/search-harbour/search-harbour.component.css","./src/app/shared/components/search-harbour/search-harbour.component.html","./src/app/shared/components/search-harbour/search-harbour.component.ts","./src/app/shared/components/search-location/search-location.component.css","./src/app/shared/components/search-location/search-location.component.html","./src/app/shared/components/search-location/search-location.component.ts","./src/app/shared/components/search-organization/search-organization.component.css","./src/app/shared/components/search-organization/search-organization.component.html","./src/app/shared/components/search-organization/search-organization.component.ts","./src/app/shared/components/search-ship/search-ship.component.css","./src/app/shared/components/search-ship/search-ship.component.html","./src/app/shared/components/search-ship/search-ship.component.ts","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html","./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.ts","./src/app/shared/components/ship-info-table/ship-info-table.component.css","./src/app/shared/components/ship-info-table/ship-info-table.component.html","./src/app/shared/components/ship-info-table/ship-info-table.component.ts","./src/app/shared/components/ssn-card/ssn-card.component.css","./src/app/shared/components/ssn-card/ssn-card.component.html","./src/app/shared/components/ssn-card/ssn-card.component.ts","./src/app/shared/components/table-card/table-card.component.css","./src/app/shared/components/table-card/table-card.component.html","./src/app/shared/components/table-card/table-card.component.ts","./src/app/shared/constants/content-names.ts","./src/app/shared/constants/location-properties.ts","./src/app/shared/constants/location-time-properties.ts","./src/app/shared/constants/menu-claims.ts","./src/app/shared/constants/organization-properties.ts","./src/app/shared/constants/organization-types.ts","./src/app/shared/constants/port-call-claims.ts","./src/app/shared/constants/port-call-status-types.ts","./src/app/shared/constants/ship-properties.ts","./src/app/shared/models/clearance-model.ts","./src/app/shared/models/contact-model.ts","./src/app/shared/models/location-model.ts","./src/app/shared/models/organization-model.ts","./src/app/shared/models/port-call-details-model.ts","./src/app/shared/models/port-call-model.ts","./src/app/shared/models/ship-contact-model.ts","./src/app/shared/models/ship-model.ts","./src/app/shared/models/user-model.ts","./src/app/shared/services/account.service.ts","./src/app/shared/services/auth-service.ts","./src/app/shared/services/auth.request.service.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/constants.service.ts","./src/app/shared/services/contact.service.ts","./src/app/shared/services/content.service.ts","./src/app/shared/services/location.service.ts","./src/app/shared/services/login.service.ts","./src/app/shared/services/organization.service.ts","./src/app/shared/services/port-call-overview.service.ts","./src/app/shared/services/port-call.service.ts","./src/app/shared/services/purpose.service.ts","./src/app/shared/services/search.service.ts","./src/app/shared/services/ship-flag-code.service.ts","./src/app/shared/services/ship.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/utils/base.request.ts","./src/app/shared/utils/config.service.ts","./src/app/shared/utils/custom-validators/integer-validator.directive.ts","./src/app/shared/utils/custom-validators/number-validator.directive.ts","./src/app/shared/utils/custom-validators/positive-number-validator.directive.ts","./src/authenticate-xhr.backend.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"app/admin/admin.module\": [\n\t\t\"./src/app/admin/admin.module.ts\",\n\t\t\"admin.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { NgModule, Directive }             from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent }       from './login/login.component';\r\nimport { MainContentComponent } from './main-content/main-content.component';\r\nimport { AuthGuard } from './auth/guards/auth.guard';\r\nimport { LoginAuthGuard } from './auth/guards/login-auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login', component: LoginComponent,\r\n    canActivate: [LoginAuthGuard]\r\n  },\r\n  {\r\n    path: '', component: MainContentComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'admin', loadChildren: 'app/admin/admin.module#AdminModule'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [ \r\n    RouterModule.forRoot(\r\n      routes, \r\n//      { enableTracing: true } // <-- debugging purposes only\r\n    )\r\n  ],\r\n  exports: [ RouterModule ]\r\n})\r\nexport class AppRoutingModule {}\r\nexport const routedComponents = [MainContentComponent, LoginComponent];\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\n\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\n\r\nexport class AppComponent implements OnInit {\r\n  \r\n  \r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule, XHRBackend } from '@angular/http';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { JwtHelperService, JwtModule } from '@auth0/angular-jwt';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { AuthenticateXHRBackend } from '../authenticate-xhr.backend';\r\nimport { AppRoutingModule, routedComponents } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AuthGuard } from './auth/guards/auth.guard';\r\nimport { LoginAuthGuard } from './auth/guards/login-auth.guard';\r\nimport { ContentContainerModule } from './main-content/content-container/content-container.module';\r\nimport { HeaderComponent } from './main-content/header/header.component';\r\nimport { AccountService } from './shared/services/account.service';\r\nimport { AuthService } from './shared/services/auth-service';\r\nimport { AuthRequest } from './shared/services/auth.request.service';\r\nimport { ConstantsService } from './shared/services/constants.service';\r\nimport { ContentService } from './shared/services/content.service';\r\nimport { LoginService } from './shared/services/login.service';\r\nimport { ConfigService } from './shared/utils/config.service';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    routedComponents\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    ContentContainerModule,\r\n    AppRoutingModule,\r\n    JwtModule.forRoot({\r\n      config: {\r\n        tokenGetter: tokenGetter,\r\n        whitelistedDomains: ['localhost:4200'],\r\n        blacklistedRoutes: ['localhost:4200/login']\r\n      }\r\n    }),\r\n    NgbModule.forRoot()\r\n  ],\r\n  providers: [\r\n    { provide: XHRBackend, useClass: AuthenticateXHRBackend },\r\n    ConfigService,\r\n    LoginService,\r\n    AccountService,\r\n    ContentService,\r\n    ConstantsService,\r\n    AuthService,\r\n    AuthRequest,\r\n    AuthGuard,\r\n    LoginAuthGuard,\r\n    JwtHelperService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n\r\nexport function tokenGetter() {\r\n  return localStorage.getItem('auth_token');\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LoginService } from '../../shared/services/login.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService)\r\n    {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      \r\n      let isLoggedIn = this.loginService.isLoggedIn();\r\n\r\n      if(!isLoggedIn){\r\n        this.router.navigate(['/login']);\r\n        return false;\r\n      }\r\n\r\n      return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/guards/auth.guard.ts","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { LoginService } from '../../shared/services/login.service';\r\n\r\n@Injectable()\r\nexport class LoginAuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private loginService: LoginService\r\n  ) {}\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n\r\n      let isLoggedIn = this.loginService.isLoggedIn();\r\n      if(isLoggedIn){\r\n        this.router.navigate(['']);\r\n        return false;\r\n      }\r\n      return true;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/guards/login-auth.guard.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"jumbotron bg-ssn-light text-ssn mt-5\\\">\\r\\n    <h2>LOGIN</h2>\\r\\n    <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"login(f)\\\">\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"email\\\" class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-2 col-lg-2\\\">Email address:</label>\\r\\n        <div class=\\\"col my-auto\\\">\\r\\n          <input id=\\\"email\\\" name=\\\"userName\\\" type=\\\"email\\\" class=\\\"form-control form-control-sm\\\" required placeholder=\\\"Enter email address\\\"\\r\\n            [(ngModel)]=\\\"credentials.userName\\\" #email=\\\"ngModel\\\" tmFocus>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group row\\\">\\r\\n        <label for=\\\"password\\\" class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-2 col-lg-2\\\">Password:</label>\\r\\n        <div class=\\\"col my-auto\\\">\\r\\n          <input id=\\\"password\\\" name=\\\"password\\\" type=\\\"password\\\" #pw class=\\\"form-control form-control-sm\\\" required placeholder=\\\"Enter password\\\"\\r\\n            [(ngModel)]=\\\"credentials.password\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <button type=\\\"submit\\\" (click)=\\\"pw.select()\\\" class=\\\"btn btn-light\\\" [disabled]=\\\"f.invalid || isRequesting\\\">SIGN IN</button>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"errors\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <span>{{errors}}</span>\\r\\n      </div>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/account/login-form/login-form.component.ts\r\n\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { Credentials } from '../shared/models/credentials.interface';\r\nimport { AccountService } from '../shared/services/account.service';\r\nimport { AuthService } from '../shared/services/auth-service';\r\nimport { ContentService } from '../shared/services/content.service';\r\nimport { LoginService } from '../shared/services/login.service';\r\nimport { CONTENT_NAMES } from '../shared/constants/content-names';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\n\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  login_title = \"LOGIN\";\r\n\r\n  private subscription: Subscription;\r\n\r\n  brandNew: boolean;\r\n  errors: string;\r\n  isRequesting: boolean;\r\n  submitted: boolean = false;\r\n  credentials: Credentials = { userName: '', password: '' }\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private contentService: ContentService,\r\n    private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private authService: AuthService,\r\n    private accountService: AccountService\r\n  ) { }\r\n\r\n  login({ value, valid }: { value: Credentials, valid: boolean }) {\r\n    this.submitted = true;\r\n    this.errors = '';\r\n    if (valid) {\r\n      this.isRequesting = true;\r\n      this.loginService.login(value.userName, value.password)\r\n        .finally(() => {\r\n          this.isRequesting = false;\r\n        })\r\n        .subscribe(result => {\r\n          // Login succeeded\r\n          if (result) {\r\n            // Set user claims observable so they are\r\n            // available for the entire application\r\n            this.accountService.getUserClaims()\r\n              // Navigate to root when done\r\n              .finally(() => {\r\n                this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n                this.router.navigate(['']);\r\n              })\r\n              .subscribe(result => {\r\n                if (result) {\r\n                  this.accountService.setUserClaims(result);\r\n                  localStorage.setItem(\"user-claims\", JSON.stringify(result));\r\n                }\r\n              })\r\n          }\r\n          // Login failed\r\n        }, error => {\r\n          this.errors = error;\r\n          this.credentials.password = '';\r\n          }\r\n        )\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    // subscribe to router event\r\n    this.subscription = this.activatedRoute.queryParams.subscribe(\r\n      (param: any) => {\r\n        this.brandNew = param['brandNew'];\r\n        //this.credentials.userName = param['userName'];\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { RegisterLocationComponent } from './location/register-location/register-location.component';\r\nimport { ViewLocationInfoComponent } from './location/view-location-info/view-location-info.component';\r\nimport { RegisterOrganizationComponent } from './organization/register-organization/register-organization.component';\r\nimport { ViewOrganizationInfoComponent } from './organization/view-organization-info/view-organization-info.component';\r\nimport { RegisterShipComponent } from './ship/register-ship/register-ship.component';\r\nimport { SearchShipFlagCodeComponent } from './ship/search-ship-flag-code/search-ship-flag-code.component';\r\nimport { ViewShipInfoComponent } from './ship/view-ship-info/view-ship-info.component';\r\nimport { RegisterUserComponent } from './user/register-user/register-user.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    NgSelectModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    RegisterUserComponent,\r\n    RegisterShipComponent,\r\n    SearchShipFlagCodeComponent,\r\n    ViewShipInfoComponent,\r\n    RegisterOrganizationComponent,\r\n    ViewOrganizationInfoComponent,\r\n    RegisterLocationComponent,\r\n    ViewLocationInfoComponent,\r\n  ],\r\n  exports: [\r\n    RegisterUserComponent,\r\n    ViewShipInfoComponent,\r\n    RegisterShipComponent,\r\n    RegisterLocationComponent,\r\n    RegisterOrganizationComponent,\r\n    ViewOrganizationInfoComponent,\r\n    ViewLocationInfoComponent\r\n  ]\r\n})\r\nexport class BasisDataModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/basis-data.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light text-center\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/location.png\\\" height=\\\"64px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <h3 class=\\\"text-ssn display-4\\\">REGISTER LOCATION</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"Location Information\\\" icon=\\\"pax.png\\\">\\r\\n        <form>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"location_type_dropdown\\\">Location Type</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"location_type_dropdown\\\" ngbDropdownToggle> {{ locationTypeDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"location_type_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let locationType of locationTypeList\\\" (click)=\\\"selectLocationType(locationType)\\\">{{ locationType.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"location_name\\\">Location Name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"locationModel.name\\\" name=\\\"locationName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_name\\\"\\r\\n                    placeholder=\\\"Enter location name\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"location_code\\\">Location Code</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"locationModel.locationCode\\\" name=\\\"locationCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_code\\\"\\r\\n                    placeholder=\\\"Enter location code\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"!countrySelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-2 col-xl-2\\\" for=\\\"country_typeahead\\\">Country</label>\\r\\n                <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">{{ r.name }}</ng-template>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"country_typeahead\\\" name=\\\"country_typeahead\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"selectedCountry\\\"\\r\\n                    [ngbTypeahead]=\\\"countrySearch\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" placeholder=\\\"Search for country name\\\"\\r\\n                    (selectItem)=\\\"selectCountry($event)\\\" #cst />\\r\\n                </div>\\r\\n                <div *ngIf=\\\"countrySearchFailed && cst.value != ''\\\" class=\\\"col-3 text-center\\\">\\r\\n                  <small class=\\\"no-wrap\\\">No</small>\\r\\n                  <small class=\\\"no-wrap\\\">results</small>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"countrySelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-2 col-xl-2\\\" for=\\\"country\\\">Country</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input id=\\\"country\\\" name=\\\"country\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"selectedCountry.name\\\" disabled=\\\"true\\\"\\r\\n                    />\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"deselectCountry()\\\">\\r\\n                        <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-3\\\" for=\\\"location_post_code\\\">Post Code</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"locationModel.postCode\\\" name=\\\"locationPostCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"location_post_code\\\"\\r\\n                    placeholder=\\\"Enter location post code\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <ssn-card header=\\\"Confirm Location Registration\\\" icon=\\\"checkmark.png\\\">\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"!(locationTypeSelected && locationModel.name && countrySelected)\\\">\\r\\n            <p *ngIf=\\\"!locationTypeSelected\\\" class=\\\"no-wrap mb-0\\\">Location type not selected.</p>\\r\\n            <p *ngIf=\\\"!locationModel.name\\\" class=\\\"no-wrap mb-0\\\">Location name not set.</p>\\r\\n            <p *ngIf=\\\"!countrySelected\\\" class=\\\"no-wrap\\\">Country not selected.</p>\\r\\n            <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Register Location</button>\\r\\n          </div>\\r\\n          <div class=\\\"text-center\\\" *ngIf=\\\"locationTypeSelected && locationModel.name && countrySelected\\\">\\r\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerLocation()\\\">\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Register Location</button>\\r\\n          </div>\\r\\n        </ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ConfirmationModalComponent } from '../../../../../shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { LocationModel } from '../../../../../shared/models/location-model';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { LocationService } from '../../../../../shared/services/location.service';\r\n\r\nconst RESULT_SUCCES: string = \"Location was successfully saved to the database.\";\r\nconst RESULT_FAILURE: string = \"There was a problem when trying to save the location to the database. Please try again later.\";\r\n\r\n@Component({\r\n  selector: 'app-register-location',\r\n  templateUrl: './register-location.component.html',\r\n  styleUrls: ['./register-location.component.css'],\r\n  providers: [LocationModel, LocationService]\r\n})\r\nexport class RegisterLocationComponent implements OnInit {\r\n  locationTypeList: any[];\r\n  locationTypeSelected: boolean;\r\n  selectedLocationType: any;\r\n  locationTypeDropdownString: string = \"Select location type\";\r\n\r\n  countryList: any[]\r\n  countrySelected: boolean = false;\r\n  selectedCountry: any;\r\n  countrySearchFailed: boolean = false;\r\n\r\n\r\n  constructor(public locationModel: LocationModel, private locationService: LocationService,\r\n    private contentService: ContentService, private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.locationService.getLocationTypes().subscribe(\r\n      results => {\r\n        this.locationTypeList = results;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n    this.locationService.getCountries().subscribe(\r\n      results => {\r\n        this.countryList = results;\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    )\r\n  }\r\n\r\n  countrySearch = (text$: Observable<string>) =>\r\n    text$\r\n      .debounceTime(30)\r\n      .distinctUntilChanged()\r\n      .do(() => {\r\n        this.countrySearchFailed = false;\r\n      })\r\n      .map(term => term.length < 1 ? []\r\n        : this.countryList.filter(v => v.name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10)\r\n      )\r\n      .do((text$) => {\r\n        if (text$.length == 0) {\r\n          this.countrySearchFailed = true;\r\n        }\r\n      });\r\n  formatter = (x: { name: string }) => x.name;\r\n\r\n  selectCountry($event) {\r\n    this.selectedCountry = $event.item;\r\n    this.locationModel.countryId = $event.item.countryId;\r\n    this.countrySelected = true;\r\n  }\r\n  deselectCountry() {\r\n    this.selectedCountry = null;\r\n    this.locationModel.countryId = null;\r\n    this.selectedCountry = null;\r\n    this.countrySelected = false;\r\n  }\r\n\r\n  selectLocationType(locationType: any) {\r\n    this.locationModel.locationTypeId = locationType.locationTypeId;\r\n    this.selectedLocationType = locationType;\r\n    this.locationTypeDropdownString = locationType.name;\r\n    this.locationTypeSelected = true;\r\n  }\r\n\r\n  registerLocation() {\r\n    this.locationService.registerLocation(this.locationModel).subscribe(\r\n      result => {\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCES);\r\n      }, error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n      }\r\n    );\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.LOCATIONS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      },\r\n      reason => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/register-location/register-location.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <ssn-card header='Register New Location' icon='location.png'>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewLocation()\\\">Register New Location</button>\\r\\n      </div>\\r\\n    </ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ssn-card header=\\\"Location Search\\\" icon=\\\"location.png\\\">\\r\\n  <div *ngIf=\\\"!locationFound\\\">\\r\\n    <app-search-location></app-search-location>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"locationFound\\\" class=\\\"text-center\\\">\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectLocation()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"jumbotron bg-ssn-light\\\" *ngIf=\\\"locationFound\\\">\\r\\n    <div class=\\\"row mb-3\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-location-info-table></app-location-info-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { LocationService } from '../../../../../shared/services/location.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-view-location-info',\r\n  templateUrl: './view-location-info.component.html',\r\n  styleUrls: ['./view-location-info.component.css']\r\n})\r\nexport class ViewLocationInfoComponent implements OnInit {\r\n\r\n  locationFound: boolean = false;\r\n\r\n  deselectLocation() {\r\n    this.locationFound = false;\r\n    this.locationService.setLocationData(null);\r\n  }\r\n\r\n  registerNewLocation() {\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_LOCATION);\r\n  }\r\n\r\n  constructor(private locationService: LocationService, private contentService: ContentService) { }\r\n\r\n  ngOnInit() {\r\n    this.locationService.setLocationData(null);\r\n    this.locationService.locationData$.subscribe(\r\n      locationResult => {\r\n        if (locationResult) {\r\n          this.locationFound = true;\r\n        } else {\r\n          this.locationFound = false;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/location/view-location-info/view-location-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css\n// module id = ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light text-center\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/pax.png\\\" height=\\\"64px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <h3 class=\\\"text-ssn display-4\\\">REGISTER ORGANIZATION</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"Organization Information\\\" icon=\\\"pax.png\\\">\\r\\n        <form>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-4 col-xl-3\\\" for=\\\"organization_type_dropdown\\\">Organization Type</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"organization_type_dropdown\\\" ngbDropdownToggle> {{ organizationTypeDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"organization_type_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let organizationType of organizationTypeList\\\" (click)=\\\"selectOrganizationType(organizationType)\\\">{{ organizationType.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-4 col-xl-3\\\" for=\\\"organization_name\\\">Organization Name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"organizationModel.name\\\" name=\\\"organizationName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"organization_name\\\"\\r\\n                    placeholder=\\\"Enter organization name\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4 col-xl-3\\\" for=\\\"organization_no\\\">Organization Number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"organizationModel.organizationNo\\\" name=\\\"organizationNo\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"organization_no\\\" placeholder=\\\"Enter organization number\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3 col-xl-2\\\" for=\\\"description\\\">Description</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"organizationModel.description\\\" name=\\\"description\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"description\\\"\\r\\n                    placeholder=\\\"Enter description\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"Confirm Organization Registration\\\" icon=\\\"checkmark.png\\\">\\r\\n        <div *ngIf=\\\"!organizationTypeSelected || !organizationModel.name || !organizationModel.organizationNo\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p *ngIf=\\\"!organizationTypeSelected\\\" class=\\\"no-wrap mb-0\\\">No organization type selected.</p>\\r\\n            <p *ngIf=\\\"!organizationModel.name\\\" class=\\\"no-wrap mb-0\\\">Organization name not set.</p>\\r\\n            <p *ngIf=\\\"!organizationModel.organizationNo\\\" class=\\\"no-wrap mb-0\\\">Organization number not set.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Register Organization</button>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationTypeSelected && organizationModel.name && organizationModel.organizationNo\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Type</th>\\r\\n                  <th>Organization Number</th>\\r\\n                  <th *ngIf=\\\"organizationModel.description\\\">Description</th>\\r\\n                  <th *ngIf=\\\"organizationModel.invoiceReceiverNo\\\">Invoice Receiver Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ selectedOrganizationType.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                  <td *ngIf=\\\"organizationModel.description\\\">{{organizationModel.description}}</td>\\r\\n                  <td *ngIf=\\\"organizationModel.invoiceReceiverNo\\\">{{ organizationModel.invoiceReceiverNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerOrganization()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Register Organization</button>\\r\\n        </div>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html\n// module id = ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from '../../../../../shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { OrganizationModel } from '../../../../../shared/models/organization-model';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { OrganizationService } from '../../../../../shared/services/organization.service';\r\n\r\nconst RESULT_SUCCES: string = \"Organization was successfully saved to the database.\";\r\nconst RESULT_FAILURE: string = \"There was a problem when trying to save the organization to the database. Please try again later.\";\r\n\r\n@Component({\r\n  selector: 'app-register-organization',\r\n  templateUrl: './register-organization.component.html',\r\n  styleUrls: ['./register-organization.component.css'],\r\n  providers: [OrganizationModel, OrganizationService]\r\n})\r\nexport class RegisterOrganizationComponent implements OnInit {\r\n  organizationTypeSelected: boolean;\r\n  organizationTypeList: any[];\r\n  selectedOrganizationType: any;\r\n  organizationTypeDropdownString: string = \"Select organization type\";\r\n\r\n  constructor(public organizationModel: OrganizationModel, private organizationService: OrganizationService,\r\n    private contentService: ContentService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.getOrganizationTypes().subscribe(\r\n      organizationTypesData => {\r\n        this.organizationTypeList = organizationTypesData;\r\n      }\r\n    );\r\n  }\r\n\r\n  registerOrganization() {\r\n    this.organizationService.registerOrganization(this.organizationModel).subscribe(\r\n      result => {\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCES);\r\n      }, error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n      }\r\n    );\r\n  }\r\n\r\n  selectOrganizationType(organizationType: any) {\r\n    this.organizationModel.organizationTypeId = organizationType.organizationTypeId;\r\n    this.organizationTypeDropdownString = organizationType.name;\r\n    this.selectedOrganizationType = organizationType;\r\n    this.organizationTypeSelected = true;\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_ORGANIZATIONS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      },\r\n      reason => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/organization/register-organization/register-organization.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <ssn-card header='Register New Organization' icon='pax.png'>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewOrganization()\\\">Register New Organization</button>\\r\\n      </div>\\r\\n    </ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ssn-card header=\\\"Organization Search\\\" icon=\\\"pax.png\\\">\\r\\n  <div *ngIf=\\\"!organizationFound\\\">\\r\\n    <app-search-organization></app-search-organization>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"organizationFound\\\" class=\\\"text-center\\\">\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"jumbotron bg-ssn-light\\\" *ngIf=\\\"organizationFound\\\">\\r\\n    <div class=\\\"row mb-3\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <table-card header=\\\"Organization Information\\\" icon=\\\"pax.png\\\">\\r\\n          <tbody>\\r\\n            <tr>\\r\\n              <td *ngFor=\\\"let entry of organizationInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n                <tr>\\r\\n                  <small>{{ entry.description }}:</small>\\r\\n                </tr>\\r\\n                <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n                <tr *ngIf=\\\"!entry.data\\\">\\r\\n                  <div class=\\\"font-italic\\\">Not provided.</div>\\r\\n                </tr>\\r\\n              </td>\\r\\n            </tr>\\r\\n          </tbody>\\r\\n        </table-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { OrganizationProperties } from '../../../../../shared/constants/organization-properties';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { OrganizationService } from '../../../../../shared/services/organization.service';\r\n\r\n@Component({\r\n  selector: 'app-view-organization-info',\r\n  templateUrl: './view-organization-info.component.html',\r\n  styleUrls: ['./view-organization-info.component.css']\r\n})\r\nexport class ViewOrganizationInfoComponent implements OnInit {\r\n\r\n  organizationFound: boolean = false;\r\n  organizationProperties = OrganizationProperties.PROPERTIES;\r\n  organizationInfo: any[];\r\n\r\n  constructor(private organizationService: OrganizationService, private contentService: ContentService) { }\r\n\r\n  registerNewOrganization() {\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_ORGANIZATION);\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.organizationFound = false;\r\n    this.organizationService.setOrganizationData(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.setOrganizationData(null);\r\n    this.organizationService.organizationData$.subscribe(\r\n      organizationResult => {\r\n        if (organizationResult) {\r\n          this.organizationProperties.ORGANIZATION_TYPE.data = (organizationResult.organizationType) ? organizationResult.organizationType.name : null;\r\n          this.organizationProperties.ORGANIZATION_NAME.data = organizationResult.name;\r\n          this.organizationProperties.ORGANIZATION_NO.data = organizationResult.organizationNo;\r\n          this.organizationProperties.ORGANIZATION_DESCRIPTION.data = organizationResult.description;\r\n          this.organizationFound = true;\r\n        } else {\r\n          this.organizationFound = false;\r\n          this.organizationProperties = OrganizationProperties.PROPERTIES;\r\n        }\r\n        this.organizationInfo = Object.values(this.organizationProperties);\r\n      }\r\n    )\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/organization/view-organization-info/view-organization-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light text-center\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/ship.png\\\" height=\\\"64px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <h3 class=\\\"text-ssn display-4\\\">REGISTER SHIP</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form #form=\\\"ngForm\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <ssn-card header=\\\"Ship Identification\\\" icon=\\\"ship.png\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_name\\\">Ship Name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.name\\\" name=\\\"shipName\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_name\\\" placeholder=\\\"Enter ship name\\\"\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-2 col-xl-2\\\" for=\\\"call_sign\\\">Call Sign</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.callSign\\\" name=\\\"callSign\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"call_sign\\\" placeholder=\\\"Enter call sign\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"imo_no\\\">IMO Number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.imoNo\\\" name=\\\"imoNo\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"imo_no\\\" placeholder=\\\"Enter IMO number\\\"\\r\\n                    #imoNo=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!imoNo.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"imoNo.hasError('notNumberError')\\\">\\r\\n                  <small>IMO number must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"imoNo.hasError('notIntegerError')\\\">\\r\\n                  <small>IMO number must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"imoNo.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>IMO number must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"mmsi_no\\\">MMSI Number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.mmsiNo\\\" name=\\\"mmsiNo\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"mmsi_no\\\" placeholder=\\\"Enter MMSI number\\\"\\r\\n                    #mmsiNo=\\\"ngModel\\\" integerValidator positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!mmsiNo.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"mmsiNo.hasError('notIntegerError')\\\">\\r\\n                  <small>MMSI number must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"mmsiNo.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>MMSI number must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <ssn-card header=\\\"Ship Details\\\" icon=\\\"ship.png\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"!shipTypeSelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_type_typeahead\\\">Ship Type</label>\\r\\n                <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">{{ r.name }}</ng-template>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"ship_type_typeahead\\\" name=\\\"ship_type_typeahead\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"selectedShipType\\\"\\r\\n                    [ngbTypeahead]=\\\"shipTypeSearch\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" placeholder=\\\"Search for a ship type\\\"\\r\\n                    (selectItem)=\\\"selectShipType($event)\\\" #stt />\\r\\n                </div>\\r\\n                <div *ngIf=\\\"shipTypeSearchFailed && stt.value != ''\\\" class=\\\"col-3 text-center\\\">\\r\\n                  <small class=\\\"no-wrap\\\">No</small>\\r\\n                  <small class=\\\"no-wrap\\\">results</small>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\" *ngIf=\\\"shipTypeSelected\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_type\\\">Ship Type</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <input id=\\\"ship_type\\\" name=\\\"ship_type\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" [ngModel]=\\\"selectedShipType.name\\\"\\r\\n                      disabled=\\\"true\\\" />\\r\\n                    <div class=\\\"input-group-append\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"deselectShipType()\\\">\\r\\n                        <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"16px\\\">\\r\\n                      </button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"year_of_build\\\">Year of Build</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.yearOfBuild\\\" name=\\\"yearOfBuild\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"year_of_build\\\"\\r\\n                    placeholder=\\\"Enter year of build\\\" #yearOfBuild=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!yearOfBuild.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notNumberError')\\\">\\r\\n                  <small>Year of build must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notIntegerError')\\\">\\r\\n                  <small>Year of build must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"yearOfBuild.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Year of build must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_length\\\">Length</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"lengthTypeDropdown\\\" ngbDropdownToggle> {{ lengthTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"lengthTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let lengthType of lengthTypeList\\\" (click)=\\\"selectLengthType(lengthType)\\\">{{ lengthType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.length\\\" name=\\\"shipLength\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_length\\\"\\r\\n                      placeholder=\\\"Enter ship length\\\" [disabled]=\\\"!lengthTypeSelected\\\" #shipLength=\\\"ngModel\\\" numberValidator\\r\\n                      positiveNumberValidator />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipLength.valid && lengthTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipLength.hasError('notNumberError')\\\">\\r\\n                  <small>Ship length must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipLength.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship length must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_breadth\\\">Breadth</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"breadthTypeDropdown\\\" ngbDropdownToggle> {{ breadthTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"breadthTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let breadthType of breadthTypeList\\\" (click)=\\\"selectBreadthType(breadthType)\\\">{{ breadthType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.breadth\\\" name=\\\"breadth\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_breadth\\\"\\r\\n                      placeholder=\\\"Enter ship breadth\\\" [disabled]=\\\"!breadthTypeSelected\\\" #shipBreadth=\\\"ngModel\\\" numberValidator\\r\\n                      positiveNumberValidator />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipBreadth.valid && breadthTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipBreadth.hasError('notNumberError')\\\">\\r\\n                  <small>Ship breadth must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipBreadth.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship breadth must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_power\\\">Power</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div class=\\\"input-group\\\">\\r\\n                    <div ngbDropdown class=\\\"input-group-prepend\\\">\\r\\n                      <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"powerTypeDropdown\\\" ngbDropdownToggle> {{ powerTypeDropdownString }} </button>\\r\\n                      <div ngbDropdownMenu aria-labelledby=\\\"powerTypeDropdown\\\">\\r\\n                        <button class=\\\"dropdown-item\\\" *ngFor=\\\"let powerType of powerTypeList\\\" (click)=\\\"selectPowerType(powerType)\\\">{{ powerType.name }}</button>\\r\\n                      </div>\\r\\n                    </div>\\r\\n                    <input [(ngModel)]=\\\"shipModel.power\\\" name=\\\"power\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_power\\\" placeholder=\\\"Enter ship power\\\"\\r\\n                      [disabled]=\\\"!powerTypeSelected\\\" #shipPower=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator\\r\\n                    />\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipPower.valid && powerTypeSelected\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipPower.hasError('notNumberError')\\\">\\r\\n                  <small>Ship power must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipPower.hasError('notIntegerError')\\\">\\r\\n                  <small>Ship power must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipPower.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship power must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"hull_type_dropdown\\\">Hull Type</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"hull_type_dropdown\\\" ngbDropdownToggle> {{ hullTypeDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"hull_type_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let hullType of hullTypeList\\\" (click)=\\\"selectHullType(hullType)\\\">{{ hullType.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_status_dropdown\\\">Ship Status</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <div ngbDropdown>\\r\\n                    <button class=\\\"btn btn-sm btn-ssn\\\" id=\\\"ship_status_dropdown\\\" ngbDropdownToggle> {{ shipStatusDropdownString }}</button>\\r\\n                    <div ngbDropdownMenu aria-labelledby=\\\"ship_status_dropdown\\\">\\r\\n                      <button class=\\\"dropdown-item\\\" *ngFor=\\\"let shipStatus of shipStatusList\\\" (click)=\\\"selectShipStatus(shipStatus)\\\">{{ shipStatus.name }}</button>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_height\\\">Height</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.height\\\" #shipHeight=\\\"ngModel\\\" numberValidator positiveNumberValidator name=\\\"height\\\" type=\\\"number\\\"\\r\\n                    class=\\\"form-control form-control-sm\\\" id=\\\"height\\\" placeholder=\\\"Enter ship height\\\" />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipHeight.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipHeight.hasError('notNumberError')\\\">\\r\\n                  <small>Ship height must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipHeight.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship height must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"ship_draught\\\">Draught</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.draught\\\" name=\\\"draught\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"ship_draught\\\"\\r\\n                    placeholder=\\\"Enter ship draught\\\" #shipDraught=\\\"ngModel\\\" numberValidator positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!shipDraught.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"shipDraught.hasError('notNumberError')\\\">\\r\\n                  <small>Ship draught must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"shipDraught.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Ship draught must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-3 col-md-3 col-lg-3\\\" for=\\\"gross_tonnage\\\">Gross Tonnage</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.grossTonnage\\\" name=\\\"grossTonnage\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"gross_tonnage\\\"\\r\\n                    placeholder=\\\"Enter gross tonnage\\\" #grossTonnage=\\\"ngModel\\\" numberValidator integerValidator positiveNumberValidator\\r\\n                  />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!grossTonnage.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notNumberError')\\\">\\r\\n                  <small>Gross tonnage must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notIntegerError')\\\">\\r\\n                  <small>Gross tonnage must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"grossTonnage.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Gross tonnage must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"deadweight_tonnage\\\">Deadweight Tonnage</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input [(ngModel)]=\\\"shipModel.deadweightTonnage\\\" name=\\\"deadweightTonnage\\\" type=\\\"number\\\" class=\\\"form-control form-control-sm\\\"\\r\\n                    id=\\\"deadweight_tonnage\\\" placeholder=\\\"Enter deadweight tonnage\\\" #dwt=\\\"ngModel\\\" numberValidator integerValidator\\r\\n                    positiveNumberValidator />\\r\\n                </div>\\r\\n              </div>\\r\\n              <div *ngIf=\\\"!dwt.valid\\\" class=\\\"alert alert-danger\\\">\\r\\n                <li *ngIf=\\\"dwt.hasError('notNumberError')\\\">\\r\\n                  <small>Deadweight tonnage must be a valid number.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"dwt.hasError('notIntegerError')\\\">\\r\\n                  <small>Deadweight tonnage must be an integer.</small>\\r\\n                </li>\\r\\n                <li *ngIf=\\\"dwt.hasError('notPositiveNumberError')\\\">\\r\\n                  <small>Deadweight tonnage must be a positive number.</small>\\r\\n                </li>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-form-label-sm\\\" for=\\\"has_side_thrusters\\\">Side thrusters</label>\\r\\n            <div class=\\\"card pt-2\\\" id=\\\"has_side_thrusters\\\">\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrusters\\\" name=\\\"hasSideThrusters\\\" type=\\\"checkbox\\\" value=\\\"\\\"> Side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrustersFront\\\" name=\\\"hasSideThrustersFront\\\" type=\\\"checkbox\\\" value=\\\"\\\"> Front side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"checkbox row\\\">\\r\\n                <div class=\\\"col ml-2\\\">\\r\\n                  <label class=\\\"col-form-label-sm\\\">\\r\\n                    <input [(ngModel)]=\\\"shipModel.hasSideThrustersBack\\\" name=\\\"hasSideThrustersBack\\\" type=\\\"checkbox\\\" value=\\\"\\\"> Back side thrusters</label>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"form-group\\\">\\r\\n            <label class=\\\"col-form-label-sm\\\" for=\\\"remark\\\">Remark</label>\\r\\n            <textarea [(ngModel)]=\\\"shipModel.remark\\\" name=\\\"remark\\\" class=\\\"form-control form-control-sm\\\" rows=\\\"4\\\" id=\\\"remark\\\"></textarea>\\r\\n          </div>\\r\\n        </ssn-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </form>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-search-ship-flag-code></app-search-ship-flag-code>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-contact-select></app-contact-select>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"Organization\\\" icon=\\\"pax.png\\\">\\r\\n        <div *ngIf=\\\"!organizationSelected\\\">\\r\\n          <app-search-organization></app-search-organization>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n\\r\\n\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"Confirm Ship Registration\\\" icon=\\\"checkmark.png\\\">\\r\\n\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"!form.valid || !(shipModel.name && shipModel.callSign && shipModel.imoNo && shipTypeSelected && shipModel.yearOfBuild && shipModel.length && lengthTypeSelected && shipModel.breadth && breadthTypeSelected && shipModel.power && powerTypeSelected && hullTypeSelected && shipModel.height && shipModel.draught && shipModel.grossTonnage && shipModel.deadweightTonnage && shipFlagCodeSelected && contactSelected && organizationSelected)\\\">\\r\\n          <div *ngIf=\\\"!form.valid\\\" class=\\\"text-center\\\">\\r\\n            <div class=\\\"alert alert-danger\\\">\\r\\n              There are errors in the form that needs to be resolved.\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.name\\\">Ship name not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.callSign\\\">Call sign not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.imoNo\\\">IMO number not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipTypeSelected\\\">Ship type not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.yearOfBuild\\\">Year of build not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.length || !lengthTypeSelected\\\">Ship length not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.breadth || !breadthTypeSelected\\\">Ship breadth not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.power || !powerTypeSelected\\\">Ship power not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!hullTypeSelected\\\">Hull type not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipStatusSelected\\\">Ship status not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.height\\\">Ship height not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.draught\\\">Ship draught not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.grossTonnage\\\">Gross tonnage not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipModel.deadweightTonnage\\\">Deadweight tonnage not set.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!shipFlagCodeSelected\\\">Flag code not selected.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!contactSelected\\\">At least one contact medium must be provided.</p>\\r\\n            <p class=\\\"no-wrap mb-0\\\" *ngIf=\\\"!organizationSelected\\\">Organization not selected.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Register Ship</button>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"form.valid && shipModel.name && shipModel.callSign && shipModel.imoNo && shipTypeSelected && shipModel.yearOfBuild && shipModel.length && lengthTypeSelected && shipModel.breadth && breadthTypeSelected && shipModel.power && powerTypeSelected && hullTypeSelected && shipModel.height && shipModel.draught && shipModel.grossTonnage && shipModel.deadweightTonnage && shipFlagCodeSelected && contactSelected && organizationSelected\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Ship Name</th>\\r\\n                  <th>Call Sign</th>\\r\\n                  <th>IMO Number</th>\\r\\n                  <th *ngIf=\\\"shipModel.mmsiNo\\\">MMSI Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ shipModel.name }}</td>\\r\\n                  <td>{{ shipModel.callSign }}</td>\\r\\n                  <td>{{ shipModel.imoNo }}</td>\\r\\n                  <td *ngIf=\\\"shipModel.mmsiNo\\\">{{ shipModel.mmsiNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Ship Type</th>\\r\\n                  <th>Year of Build</th>\\r\\n                  <th>Length</th>\\r\\n                  <th>Breadth</th>\\r\\n                  <th>Power</th>\\r\\n                  <th>Hull Type</th>\\r\\n                  <th>Status</th>\\r\\n                  <th>Height</th>\\r\\n                  <th>Draught</th>\\r\\n                  <th>Gross Tonnage</th>\\r\\n                  <th>Deadweight Tonnage</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td *ngIf=\\\"shipTypeSelected\\\">{{ selectedShipType.name }}</td>\\r\\n                  <td>{{ shipModel.yearOfBuild }}</td>\\r\\n                  <td>{{ lengthTypeDropdownString }}\\r\\n                    <br>{{ shipModel.length }}</td>\\r\\n                  <td>{{ breadthTypeDropdownString }}\\r\\n                    <br>{{ shipModel.breadth }}</td>\\r\\n                  <td>{{ powerTypeDropdownString }}\\r\\n                    <br>{{ shipModel.power }}</td>\\r\\n                  <td>{{ hullTypeDropdownString }}</td>\\r\\n                  <td>{{ shipStatusDropdownString }}</td>\\r\\n                  <td>{{ shipModel.height }}</td>\\r\\n                  <td>{{ shipModel.draught }}</td>\\r\\n                  <td>{{ shipModel.grossTonnage }}</td>\\r\\n                  <td>{{ shipModel.deadweightTonnage }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrusters\\\">Ship has side thrusters.</p>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrustersFront\\\">Ship has front side thrusters.</p>\\r\\n          <p *ngIf=\\\"shipModel.hasSideThrustersBack\\\">Ship has back side thrusters.</p>\\r\\n\\r\\n          <div *ngIf=\\\"shipModel.remark\\\">\\r\\n            <span>Remark:</span>\\r\\n            <div class=\\\"card p-1 pt-3 text-left mb-3\\\">\\r\\n              <pre>{{ shipModel.remark }}</pre>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Country Flag</th>\\r\\n                  <th>Ship Flag Code</th>\\r\\n                  <th>Country</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                    <img src=\\\"assets/images/Flags/{{ shipFlagCodeModel.country.twoCharCode | lowercase }}.png\\\" height=\\\"20px\\\" />\\r\\n                  </td>\\r\\n                  <td>{{ shipFlagCodeModel.shipFlagCode.name }}</td>\\r\\n                  <td>{{ shipFlagCodeModel.country.name }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <app-selected-contact-mediums></app-selected-contact-mediums>\\r\\n\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerShip()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Register Ship</button>\\r\\n        </div>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { ConfirmationModalComponent } from '../../../../../shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { ContactModel } from '../../../../../shared/models/contact-model';\r\nimport { ShipContactModel } from '../../../../../shared/models/ship-contact-model';\r\nimport { ShipModel } from '../../../../../shared/models/ship-model';\r\nimport { ContactService } from '../../../../../shared/services/contact.service';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { OrganizationService } from '../../../../../shared/services/organization.service';\r\nimport { ShipService } from '../../../../../shared/services/ship.service';\r\n\r\nconst RESULT_SUCCES: string = \"Ship was successfully saved to the database.\";\r\nconst RESULT_FAILURE: string = \"There was a problem when trying to save the ship to the database. Please try again later.\";\r\nconst RESULT_SAVED_WITHOUT_CONTACT: string = \"Ship was saved to the database, but there was an error when trying to save the ship's contact information. Please provide this information later.\";\r\n\r\n@Component({\r\n  selector: 'app-register-ship',\r\n  templateUrl: './register-ship.component.html',\r\n  styleUrls: ['./register-ship.component.css'],\r\n  providers: [ShipModel, ShipService]\r\n})\r\nexport class RegisterShipComponent implements OnInit {\r\n\r\n  hullTypeSelected = false;\r\n  lengthTypeSelected = false;\r\n  breadthTypeSelected = false;\r\n  powerTypeSelected = false;\r\n  shipStatusSelected = false;\r\n\r\n  shipTypeList: any[];\r\n  hullTypeList: any[];\r\n  lengthTypeList: any[];\r\n  breadthTypeList: any[];\r\n  powerTypeList: any[];\r\n  shipStatusList: any[];\r\n\r\n  selectedShipType: any;\r\n  shipTypeSelected: boolean = false;\r\n  shipTypeSearchFailed: boolean = false;\r\n\r\n  hullTypeDropdownString: string = \"Select hull type\";\r\n  lengthTypeDropdownString: string = \"Select type\";\r\n  breadthTypeDropdownString: string = \"Select type\";\r\n  powerTypeDropdownString: string = \"Select type\";\r\n  shipStatusDropdownString: string = \"Select status\";\r\n\r\n  shipFlagCodeModel: any;\r\n  organizationModel: any;\r\n  selectedContactModels: ContactModel[];\r\n\r\n  shipFlagCodeSelected: boolean;\r\n  organizationSelected: boolean;\r\n  contactSelected: boolean;\r\n\r\n  // shipModel should be private, but Angular's AoT compilation can't handle it. Will be fixed in Angular 6.0\r\n  constructor(public shipModel: ShipModel, private shipService: ShipService, private contactService: ContactService,\r\n    private contentService: ContentService, private modalService: NgbModal, private organizationService: OrganizationService) { }\r\n\r\n  ngOnInit() {\r\n    this.shipService.getShipTypes().subscribe(\r\n      data => this.shipTypeList = data\r\n    );\r\n    this.shipService.getHullTypes().subscribe(\r\n      data => this.hullTypeList = data\r\n    );\r\n    this.shipService.getLengthTypes().subscribe(\r\n      data => this.lengthTypeList = data\r\n    );\r\n    this.shipService.getBreadthTypes().subscribe(\r\n      data => this.breadthTypeList = data\r\n    );\r\n    this.shipService.getPowerTypes().subscribe(\r\n      data => this.powerTypeList = data\r\n    );\r\n    this.shipService.getShipStatusList().subscribe(\r\n      data => this.shipStatusList = data\r\n    );\r\n\r\n    this.shipService.shipFlagCodeData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.shipFlagCodeModel = data;\r\n          this.shipModel.shipFlagCodeId = data.shipFlagCode.shipFlagCodeId;\r\n          this.shipFlagCodeSelected = true;\r\n        } else {\r\n          this.shipFlagCodeSelected = false;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.organizationService.setOrganizationData(null);\r\n    this.organizationService.organizationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.organizationModel = data;\r\n          this.shipModel.organizationId = data.organizationId;\r\n          this.organizationSelected = true;\r\n        } else {\r\n          this.organizationSelected = false;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.contactService.wipeServiceData();\r\n    this.contactService.contactData$.subscribe(\r\n      data => {\r\n        if (data && data.length !== 0) {\r\n          this.selectedContactModels = data;\r\n          this.contactSelected = true;\r\n        } else {\r\n          this.contactSelected = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  shipTypeSearch = (text$: Observable<string>) =>\r\n    text$\r\n      .debounceTime(50)\r\n      .distinctUntilChanged()\r\n      .do(() => {\r\n        this.shipTypeSearchFailed = false;\r\n      })\r\n      .map(term => term.length < 1 ? []\r\n        : this.shipTypeList.filter(v => v.name.toLowerCase().indexOf(term.toLowerCase()) > -1).slice(0, 10)\r\n      )\r\n      .do((text$) => {\r\n        if (text$.length == 0) {\r\n          this.shipTypeSearchFailed = true;\r\n        }\r\n      });\r\n\r\n  formatter = (x: { name: string }) => x.name;\r\n\r\n  selectShipType($event: any) {\r\n    this.shipModel.shipTypeId = $event.item.shipTypeId;\r\n    this.shipTypeSelected = true;\r\n  }\r\n\r\n  deselectShipType() {\r\n    this.shipModel.shipTypeId = null;\r\n    this.selectedShipType = null;\r\n    this.shipTypeSelected = false;\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.shipModel.organizationId = null;\r\n    this.organizationModel = null;\r\n    this.organizationSelected = false;\r\n  }\r\n\r\n  selectHullType(hullType: any) {\r\n    this.shipModel.shipHullTypeId = hullType.shipHullTypeId;\r\n    this.hullTypeDropdownString = hullType.name;\r\n    this.hullTypeSelected = true;\r\n  }\r\n\r\n  selectLengthType(lengthType: any) {\r\n    this.shipModel.shipLengthTypeId = lengthType.shipLengthTypeId;\r\n    this.lengthTypeDropdownString = lengthType.name;\r\n    this.lengthTypeSelected = true;\r\n  }\r\n\r\n  selectBreadthType(breadthType: any) {\r\n    this.shipModel.shipBreadthTypeId = breadthType.shipBreadthTypeId;\r\n    this.breadthTypeDropdownString = breadthType.name;\r\n    this.breadthTypeSelected = true;\r\n  }\r\n\r\n  selectPowerType(powerType: any) {\r\n    this.shipModel.shipPowerTypeId = powerType.shipPowerTypeId;\r\n    this.powerTypeDropdownString = powerType.name;\r\n    this.powerTypeSelected = true;\r\n  }\r\n\r\n  selectShipStatus(shipStatus: any) {\r\n    this.shipModel.shipStatusId = shipStatus.shipStatusId;\r\n    this.shipStatusDropdownString = shipStatus.name;\r\n    this.shipStatusSelected = true;\r\n  }\r\n\r\n  registerShip() {\r\n    this.shipService.registerShip(this.shipModel).subscribe(\r\n      result => {\r\n        this.shipModel.shipId = result.shipId;\r\n        var shipContactList = this.selectedContactModels.map(contactModel => {\r\n          var shipContact = new ShipContactModel();\r\n          shipContact.shipId = this.shipModel.shipId;\r\n          shipContact.contactMediumId = contactModel.contactMedium.contactMediumId;\r\n          shipContact.contactValue = contactModel.contactValue;\r\n          shipContact.isPreferred = contactModel.isPreferred;\r\n          shipContact.comments = contactModel.comments;\r\n          return shipContact;\r\n        });\r\n        this.saveShipContactList(shipContactList);\r\n      }, error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n      }\r\n    );\r\n  }\r\n\r\n  saveShipContactList(shipContactList: ShipContactModel[]) {\r\n    this.shipService.saveShipContactList(shipContactList).subscribe(\r\n      result => {\r\n        if (result) {\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCES);\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_WARNING, RESULT_SAVED_WITHOUT_CONTACT);\r\n      }\r\n    );\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_SHIPS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      },\r\n      reason => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/register-ship/register-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Flag Code\\\" icon=\\\"flag.png\\\">\\r\\n    <div class=\\\"card-body\\\">\\r\\n        <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n            <img *ngIf=\\\"r.country.twoCharCode\\\" src=\\\"assets/images/Flags/{{ r.country.twoCharCode.toLowerCase() }}.png\\\" height=\\\"16px\\\"\\r\\n            />\\r\\n            <strong *ngIf=\\\"r.shipFlagCode.name\\\">Code: </strong> {{ r.shipFlagCode.name }}\\r\\n            <strong *ngIf=\\\"r.country.name\\\">Country: </strong> {{ r.country.name }}\\r\\n        </ng-template>\\r\\n\\r\\n        <div *ngIf=\\\"!shipFlagCodeSelected\\\" class=\\\"text-center\\\">\\r\\n            <label for=\\\"search-shipFlagCode\\\">Search using flag code or name of country</label>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-2\\\"></div>\\r\\n                <div class=\\\"col-8\\\">\\r\\n                    <input id=\\\"search-shipFlagCode\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipFlagCodeModel\\\"\\r\\n                        [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectShipFlagCode($event)\\\"\\r\\n                        placeholder=\\\"Enter search here...\\\" />\\r\\n                </div>\\r\\n                <div class=\\\"col-2\\\">\\r\\n                    <div *ngIf=\\\"searching\\\">\\r\\n                        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/flag.gif\\\" height=\\\"32px\\\">\\r\\n                        <p>Searching</p>\\r\\n                    </div>\\r\\n                    <div *ngIf=\\\"searchFailed\\\">\\r\\n                        <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n                        <p>No results</p>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"shipFlagCodeSelected\\\" class=\\\"text-center\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table table-bordered\\\">\\r\\n                    <thead>\\r\\n                        <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                            <th>Country Flag</th>\\r\\n                            <th>Ship Flag Code</th>\\r\\n                            <th>Country</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr>\\r\\n                            <td>\\r\\n                                <img src=\\\"assets/images/Flags/{{ shipFlagCodeModel.country.twoCharCode | lowercase }}.png\\\" height=\\\"20px\\\" />\\r\\n                            </td>\\r\\n                            <td>{{ shipFlagCodeModel.shipFlagCode.name }}</td>\\r\\n                            <td>{{ shipFlagCodeModel.country.name }}</td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n            </div>\\r\\n            <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShipFlagCode()\\\">\\r\\n                <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { ShipFlagCodeService } from '../../../../../shared/services/ship-flag-code.service';\r\nimport { ShipService } from '../../../../../shared/services/ship.service';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-search-ship-flag-code',\r\n    templateUrl: './search-ship-flag-code.component.html',\r\n    styleUrls: ['./search-ship-flag-code.component.css'],\r\n    providers: [ShipFlagCodeService]\r\n})\r\nexport class SearchShipFlagCodeComponent implements OnInit {\r\n\r\n    shipFlagCodeModel: any;\r\n    shipFlagCodeSelected = false;\r\n\r\n    searching = false;\r\n    searchFailed = false;\r\n    hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);\r\n\r\n    constructor(private shipService: ShipService) { }\r\n\r\n    search = (text$: Observable<string>) =>\r\n        text$.pipe(\r\n            debounceTime(50),\r\n            distinctUntilChanged(),\r\n            tap((term) => {\r\n                this.searchFailed = false;\r\n                this.searching = (term.length >= 1)\r\n            }),\r\n            switchMap(term =>\r\n                this.shipService.searchFlagCode(term).pipe(\r\n                    tap(() => this.searchFailed = false),\r\n                    catchError(() => {\r\n                        this.searchFailed = true;\r\n                        return of([]);\r\n                    }))\r\n            ),\r\n            tap((res) => {\r\n                this.searching = false;\r\n                this.searchFailed = (this.shipFlagCodeModel.length >= 1 && res.length === 0);\r\n            }),\r\n            merge(this.hideSearchingWhenUnsubscribed)\r\n        );\r\n\r\n    formatter = (x: { shipFlagCodeId: string }) => x.shipFlagCodeId;\r\n\r\n    selectShipFlagCode($event) {\r\n        this.shipFlagCodeSelected = true;\r\n        this.shipService.setShipFlagCodeData($event.item);\r\n    }\r\n\r\n    deselectShipFlagCode() {\r\n        this.shipFlagCodeSelected = false;\r\n        this.shipFlagCodeModel = null;\r\n        this.shipService.setShipFlagCodeData(this.shipFlagCodeModel);\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/search-ship-flag-code/search-ship-flag-code.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css\n// module id = ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n    <ssn-card header='Register New Ship' icon='ship.png'>\\r\\n      <div class=\\\"text-center\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerNewShip()\\\">Register New Ship</button>\\r\\n      </div>\\r\\n    </ssn-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ssn-card header=\\\"Ship Search\\\" icon=\\\"ship.png\\\">\\r\\n  <div *ngIf=\\\"!shipFound\\\">\\r\\n    <app-search-ship></app-search-ship>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"shipFound\\\" class=\\\"text-center\\\">\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShip()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n  </div>\\r\\n\\r\\n  <br>\\r\\n\\r\\n  <div class=\\\"jumbotron bg-ssn-light\\\" *ngIf=\\\"shipFound\\\">\\r\\n    <div class=\\\"row mb-3\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <app-ship-info-table></app-ship-info-table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html\n// module id = ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { ShipProperties } from '../../../../../shared/constants/ship-properties';\r\nimport { ConstantsService } from '../../../../../shared/services/constants.service';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { ShipService } from '../../../../../shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-view-ship-info',\r\n  templateUrl: './view-ship-info.component.html',\r\n  styleUrls: ['./view-ship-info.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class ViewShipInfoComponent implements OnInit {\r\n\r\n  shipFound: boolean = false;\r\n\r\n  shipProperties: any = ShipProperties.PROPERTIES;\r\n  shipInfo: any[];\r\n\r\n  deselectShip() {\r\n    this.shipFound = false;\r\n    this.shipService.setShipOverviewData(null);\r\n  }\r\n\r\n  registerNewShip() {\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_SHIP);\r\n  }\r\n\r\n  constructor(private shipService: ShipService, private contentService: ContentService) { }\r\n\r\n  ngOnInit() {\r\n    this.shipService.setShipOverviewData(null);\r\n    this.shipService.shipOverviewData$.subscribe(\r\n      shipResult => {\r\n        if (shipResult) {\r\n          this.shipFound = true;\r\n        } else {\r\n          this.shipFound = false;\r\n        }\r\n      }\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/ship/view-ship-info/view-ship-info.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css\n// module id = ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light\\\">\\r\\n  <div class=\\\"row card-ssn text-center\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/user.png\\\" height=\\\"64px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <h3 class=\\\"text-ssn display-4\\\">REGISTER USER</h3>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card *ngIf=\\\"!isDrafted\\\" header=\\\"Personalia\\\" icon=\\\"user-info.png\\\" id=\\\"personalia\\\">\\r\\n        <form #f=\\\"ngForm\\\" novalidate>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-1 col-md-1 col-lg-2 col-xl-1\\\" for=\\\"email\\\">Email</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"email\\\" name=\\\"email\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.email\\\" #email=\\\"ngModel\\\" [email]=\\\"true\\\"\\r\\n                    tmFocus validateEmail (blur)=\\\"userExists(email.valid)\\\" (ngModelChange)=\\\"emailChecked = false\\\" placeholder=\\\"Enter email\\\">\\r\\n                  <small *ngIf=\\\"!email.valid && !email.pristine\\\" class=\\\"text-danger\\\">Please enter a valid email</small>\\r\\n                  <div *ngIf=\\\"emailChecked && !emailTaken\\\">\\r\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/Validation/32x32/icon-valid-ok.png\\\">\\r\\n                    <small class=\\\"text-success\\\">email available</small>\\r\\n                  </div>\\r\\n                  <div *ngIf=\\\"emailChecked && emailTaken\\\">\\r\\n                    <img height=\\\"16px\\\" src=\\\"assets/images/Validation/32x32/icon-alert-warning.png\\\">\\r\\n                    <small class=\\\"text-danger\\\">email is already in use</small>\\r\\n                  </div>\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-2 col-xl-2\\\" for=\\\"password\\\">Password</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"password\\\" type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.password\\\" required\\r\\n                    placeholder=\\\"Enter password\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"first_name\\\">First name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"first_name\\\" name=\\\"firstName\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.firstName\\\" placeholder=\\\"Enter first name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-2 col-xl-2\\\" for=\\\"last_name\\\">Last name</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"last_name\\\" name=\\\"lastName\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.lastName\\\" placeholder=\\\"Enter last name\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-lg-6\\\">\\r\\n              <div class=\\\"form-group row\\\">\\r\\n                <label class=\\\"col-form-label-sm no-wrap col-sm-2 col-md-2 col-lg-3 col-xl-2\\\" for=\\\"phone_number\\\">Phone number</label>\\r\\n                <div class=\\\"col\\\">\\r\\n                  <input id=\\\"phone_number\\\" name=\\\"phoneNumber\\\" class=\\\"form-control form-control-sm\\\" [(ngModel)]=\\\"user.phoneNumber\\\" placeholder=\\\"Enter phone number\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n        </form>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"Select Organization\\\" icon=\\\"pax.png\\\">\\r\\n        <div *ngIf=\\\"!organizationSelected\\\">\\r\\n          <app-search-organization></app-search-organization>\\r\\n        </div>\\r\\n\\r\\n        <div *ngIf=\\\"organizationSelected\\\" class=\\\"text-center\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th>Organization Name</th>\\r\\n                  <th>Organization Number</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ organizationModel.organizationNo }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectOrganization()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n        </div>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"User rights\\\" icon=\\\"verification-clipboard.png\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <div class=\\\"text-center\\\">\\r\\n            <span class=\\\"no-wrap\\\">Select a role for this user</span>\\r\\n          </div>\\r\\n          <ng-select id=\\\"roleSelected\\\" [items]=\\\"roleList\\\" [multiple]=\\\"false\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select role\\\"\\r\\n            [(ngModel)]=\\\"user.roleName\\\">\\r\\n          </ng-select>\\r\\n        </div>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"Confirm User Registration\\\">\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"!(user.email && emailChecked && !emailTaken && user.password && organizationSelected && user.roleName)\\\">\\r\\n          <div class=\\\"mb-3\\\">\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.email\\\">Email not set.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"user.email && emailChecked && emailTaken\\\">Selected email is already in use.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.password\\\">Password not set.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!organizationSelected\\\">Organization not selected.</p>\\r\\n            <p class=\\\"mb-0\\\" *ngIf=\\\"!user.roleName\\\">Role not assigned.</p>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" disabled>Register User</button>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\" *ngIf=\\\"user.email && emailChecked && !emailTaken && user.password && organizationSelected && user.roleName\\\">\\r\\n          <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n              <thead>\\r\\n                <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n                  <th *ngIf=\\\"user.firstName\\\">First name</th>\\r\\n                  <th *ngIf=\\\"user.lastName\\\">Last name</th>\\r\\n                  <th>Email</th>\\r\\n                  <th *ngIf=\\\"user.phoneNumber\\\">Phone number</th>\\r\\n                  <th>Organization</th>\\r\\n                  <th>Role</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody>\\r\\n                <tr>\\r\\n                  <td *ngIf=\\\"user.firstName\\\">{{ user.firstName }}</td>\\r\\n                  <td *ngIf=\\\"user.lastName\\\">{{ user.lastName }}</td>\\r\\n                  <td> {{ user.email }} </td>\\r\\n                  <td *ngIf=\\\"user.phoneNumber\\\">{{ user.phoneNumber }}</td>\\r\\n                  <td>{{ organizationModel.name }}</td>\\r\\n                  <td>{{ user.roleName }}</td>\\r\\n                </tr>\\r\\n              </tbody>\\r\\n            </table>\\r\\n          </div>\\r\\n          <button class=\\\"btn btn-ssn\\\" (click)=\\\"registerUserWithPassword()\\\">Register User</button>\\r\\n        </div>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html\n// module id = ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { UserModelWithPassword } from '../../../../../shared/models/UserModelWithPassword';\r\nimport { UserModel } from '../../../../../shared/models/user-model';\r\nimport { AccountService } from '../../../../../shared/services/account.service';\r\nimport { AuthService } from '../../../../../shared/services/auth-service';\r\nimport { LoginService } from '../../../../../shared/services/login.service';\r\nimport { OrganizationService } from '../../../../../shared/services/organization.service';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from '../../../../../shared/components/confirmation-modal/confirmation-modal.component';\r\n\r\nconst RESULT_SUCCES: string = \"User was successfully registered.\";\r\nconst RESULT_FAILURE: string = \"There was a problem when trying to register the user. Please try again later.\";\r\n\r\n@Component({\r\n  selector: 'app-register-user',\r\n  templateUrl: './register-user.component.html',\r\n  styleUrls: ['./register-user.component.css'],\r\n  providers: [UserModel, AccountService]\r\n})\r\nexport class RegisterUserComponent implements OnInit {\r\n\r\n  user: UserModelWithPassword = {\r\n    email: '',\r\n    phoneNumber: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    password: '',\r\n    roleName: '',\r\n    organizationId: ''\r\n  };\r\n  emailTaken: boolean;\r\n  emailChecked: boolean;\r\n\r\n  organizationModel: any;\r\n  organizationSelected: boolean;\r\n\r\n  roleList: any[];\r\n  selectedRole: any;\r\n\r\n  constructor(\r\n    private userModel: UserModel,\r\n    private accountService: AccountService,\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService,\r\n    private modalService: NgbModal\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.accountService.getAllRoles().subscribe(\r\n      data => this.roleList = data\r\n    );\r\n\r\n    this.organizationService.setOrganizationData(null);\r\n    this.organizationService.organizationData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.organizationModel = data;\r\n          this.user.organizationId = data.organizationId;\r\n          this.organizationSelected = true;\r\n        } else {\r\n          this.organizationSelected = false;\r\n        }\r\n      }\r\n    )\r\n  }\r\n\r\n  userExists(emailValid: boolean) {\r\n    if (emailValid) {\r\n      return this.accountService.userExistsByEmail(this.user.email).subscribe(userExists => {\r\n        if (userExists) {\r\n          this.emailTaken = true;\r\n        } else {\r\n          this.emailTaken = false;\r\n        }\r\n        this.emailChecked = true;\r\n      });\r\n    }\r\n  }\r\n\r\n  registerUserWithPassword() {\r\n    this.accountService.registerUserWithPassword(this.user)\r\n      .subscribe(\r\n        result => {\r\n          if (result) {\r\n            console.log(result);\r\n            this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCES);\r\n          }\r\n        },\r\n        error => {\r\n          console.log(error);\r\n          this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n        }\r\n      );\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.user.organizationId = null;\r\n    this.organizationModel = null;\r\n    this.organizationSelected = false;\r\n  }\r\n\r\n  private goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      },\r\n      reason => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      }\r\n    );\r\n  }\r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/basis-data/user/register-user/register-user.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/content-container.component.css\n// module id = ./src/app/main-content/content-container/content-container.component.css\n// module chunks = main","module.exports = \"<div [ngSwitch]=\\\"selectedComponent\\\">\\r\\n  <app-register-user *ngSwitchCase=\\\"cn.REGISTER_USER\\\"></app-register-user>\\r\\n  <app-view-ship-info *ngSwitchCase=\\\"cn.VIEW_SHIPS\\\"></app-view-ship-info>\\r\\n  <app-register-ship *ngSwitchCase=\\\"cn.REGISTER_SHIP\\\"></app-register-ship>\\r\\n  <app-view-location-info *ngSwitchCase=\\\"cn.LOCATIONS\\\"></app-view-location-info>\\r\\n  <app-register-location *ngSwitchCase=\\\"cn.REGISTER_LOCATION\\\"></app-register-location>\\r\\n  <app-view-organization-info *ngSwitchCase=\\\"cn.VIEW_ORGANIZATIONS\\\"></app-view-organization-info>\\r\\n  <app-register-organization *ngSwitchCase=\\\"cn.REGISTER_ORGANIZATION\\\"></app-register-organization>\\r\\n  <app-port-call *ngSwitchCase=\\\"cn.VIEW_PORT_CALLS\\\"></app-port-call>\\r\\n  <app-new-port-call-draft *ngSwitchCase=\\\"cn.REGISTER_PORT_CALL_DRAFT\\\"></app-new-port-call-draft>\\r\\n  <app-registration *ngSwitchCase=\\\"cn.REGISTER_PORT_CALL\\\"></app-registration>\\r\\n  <app-view-port-call *ngSwitchCase=\\\"cn.VIEW_PORT_CALL\\\"></app-view-port-call>\\r\\n  <app-clearance *ngSwitchCase=\\\"cn.PORT_CALL_CLEARANCE\\\"></app-clearance>\\r\\n  <div class=\\\"alert alert-danger\\\" *ngSwitchDefault>Oops, something went wrong. Please reload the page.</div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/content-container.component.html\n// module id = ./src/app/main-content/content-container/content-container.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Http } from '@angular/http';\r\nimport { ContentService } from '../../shared/services/content.service';\r\nimport { CONTENT_NAMES } from '../../shared/constants/content-names';\r\n\r\n@Component({\r\n  selector: 'app-content-container',\r\n  templateUrl: './content-container.component.html',\r\n  styleUrls: ['./content-container.component.css']\r\n})\r\nexport class ContentContainerComponent implements OnInit {\r\n\r\n  cn = CONTENT_NAMES;\r\n  selectedComponent: string;\r\n\r\n  constructor(private contentService: ContentService) {}\r\n\r\n  ngOnInit() {\r\n    this.contentService.contentName$.subscribe((content) => {\r\n      this.selectedComponent = content;\r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/content-container.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../../shared/shared.module';\r\nimport { BasisDataModule } from './basis-data/basis-data.module';\r\nimport { ContentContainerComponent } from './content-container.component';\r\nimport { PortCallModule } from './port-call/port-call.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    PortCallModule,\r\n    BasisDataModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ContentContainerComponent\r\n  ],\r\n  exports: [ContentContainerComponent]\r\n})\r\nexport class ContentContainerModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/content-container.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.css\n// module id = ./src/app/main-content/content-container/port-call/clearance/clearance.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light\\\">\\r\\n  <div class=\\\"row mb-3 text-center\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/stamp.png\\\" height=\\\"64px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <h3 class=\\\"text-ssn display-4\\\">\\r\\n        <span class=\\\"no-wrap\\\">PORT CALL</span>\\r\\n        <span class=\\\"no-wrap\\\">CLEARANCE</span>\\r\\n      </h3>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <button class=\\\"btn btn-light\\\" (click)=\\\"goBack()\\\">\\r\\n        <img src=\\\"assets/images/VoyageIcons/128x128/left-arrow.png\\\" height=\\\"32px\\\">\\r\\n        <br>\\r\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ssn-card header=\\\"Clearance\\\" icon=\\\"stamp.png\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"remarks\\\">Remarks</label>\\r\\n          <textarea class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"remarks\\\" [(ngModel)]=\\\"clearanceModel.remark\\\"></textarea>\\r\\n        </div>\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"showWarningBox(content, true)\\\">\\r\\n            <div class=\\\"mx-auto\\\">\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"32px\\\">\\r\\n            </div>\\r\\n            <small>Accept</small>\\r\\n          </button>\\r\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"showWarningBox(content, false)\\\">\\r\\n            <div class=\\\"mx-auto\\\">\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"32px\\\">\\r\\n            </div>\\r\\n            <small>Reject</small>\\r\\n          </button>\\r\\n        </div>\\r\\n      </ssn-card>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-light\\\" (click)=\\\"goBack()\\\">\\r\\n        <img src=\\\"assets/images/VoyageIcons/128x128/left-arrow.png\\\" height=\\\"32px\\\">\\r\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #content let-close=\\\"close\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Confirm Clearance</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div *ngIf=\\\"clearanceModel.remark\\\">\\r\\n      <span>Are you sure you want to submit a response with the following remarks:</span>\\r\\n      <br>\\r\\n      <pre>{{ clearanceModel.remark }}</pre>\\r\\n    </div>\\r\\n    <div *ngIf=\\\"!clearanceModel.remark\\\">\\r\\n      Are you sure you want to submit a clearance response with no remarks?\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-success\\\" *ngIf=\\\"givingClearance\\\" (click)=\\\"saveClearance(); close()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\">\\r\\n      <span>Give Clearance</span>\\r\\n    </button>\\r\\n    <button class=\\\"btn btn-danger\\\" *ngIf=\\\"!givingClearance\\\" (click)=\\\"saveClearance(); close()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Reject Clearance</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close()\\\">\\r\\n      <span>Cancel</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.html\n// module id = ./src/app/main-content/content-container/port-call/clearance/clearance.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { CONTENT_NAMES } from '../../../../shared/constants/content-names';\r\nimport { ClearanceModel } from '../../../../shared/models/clearance-model';\r\nimport { ContentService } from '../../../../shared/services/content.service';\r\nimport { PortCallService } from '../../../../shared/services/port-call.service';\r\nimport { ShipService } from '../../../../shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-clearance',\r\n  templateUrl: './clearance.component.html',\r\n  styleUrls: ['./clearance.component.css']\r\n})\r\nexport class ClearanceComponent implements OnInit {\r\n\r\n  clearanceModel: ClearanceModel = new ClearanceModel();\r\n\r\n  clearanceList: any[] = [];\r\n\r\n  givingClearance: boolean;\r\n\r\n  constructor(private contentService: ContentService, private modalService: NgbModal, private portCallService: PortCallService, private shipService: ShipService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.clearanceListData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.clearanceList = data;\r\n          this.portCallService.clearanceData$.subscribe(\r\n            clearanceUser => {\r\n              if (clearanceUser) {\r\n                this.clearanceModel = this.clearanceList.find(cl => cl.organizationId === clearanceUser.organizationId);\r\n              }\r\n            }\r\n          )\r\n        }\r\n      }\r\n    );\r\n\r\n    this.portCallService.shipData$.subscribe(\r\n      shipResult => {\r\n        this.shipService.setShipOverviewData(shipResult);\r\n      }\r\n    );\r\n  }\r\n\r\n  showWarningBox(content: any, clearance: boolean) {\r\n    this.givingClearance = clearance;\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  saveClearance() {\r\n    this.clearanceModel.cleared = this.givingClearance;\r\n    this.portCallService.saveClearance(this.clearanceModel);\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/clearance/clearance.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Activate Port Call\\\" icon=\\\"save.png\\\" class=\\\"text-center\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <div *ngIf=\\\"!detailsDataIsPristine\\\" class=\\\"row\\\">\\r\\n\\r\\n      <div *ngIf=\\\"detailsMeta.valid\\\" class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-warning\\\">\\r\\n          <span>Warning: Port Call Details are unsaved.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"saveDetails()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Details</button>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div *ngIf=\\\"!detailsMeta.valid\\\" class=\\\"col\\\">\\r\\n        <div class=\\\"alert alert-danger\\\">\\r\\n          <span>Error: Port Call Details contains invalid data.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\"> Save Details</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"!portCallIsDraft\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <div class=\\\"text-center\\\">\\r\\n          <span>Port call is already active. You can still update the information.</span>\\r\\n          <br>\\r\\n          <button class=\\\"btn btn-ssn mt-2\\\" (click)=\\\"goBack()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/left-arrow.png\\\" height=\\\"24px\\\"> Return to overview</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"portCallIsDraft\\\">\\r\\n      <div *ngIf=\\\"detailsDataIsPristine && detailsMeta.valid\\\" class=\\\"col\\\">\\r\\n        <p class=\\\"mb-0\\\">After activating the port call, it will no longer be a draft, and it will be visble for government agencies to review.</p>\\r\\n        <p>This action cannot be undone.</p>\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"send()\\\">\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\"> Activate</button>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!(detailsDataIsPristine && detailsMeta.valid)\\\" class=\\\"col\\\">\\r\\n        <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n          <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\"> Activate</button>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from '../../../../../shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { FormMetaData } from '../../../../../shared/models/form-meta-data.interface';\r\nimport { PortCallDetailsModel } from '../../../../../shared/models/port-call-details-model';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { PortCallService } from '../../../../../shared/services/port-call.service';\r\n\r\nconst RESULT_SUCCES: string = \"This port call has been activated, and is now awaiting clearance.\";\r\nconst RESULT_FAILURE: string = \"There was a problem when trying to activate this port call. Please try again later.\";\r\n\r\n@Component({\r\n  selector: 'app-activate-port-call',\r\n  templateUrl: './activate-port-call.component.html',\r\n  styleUrls: ['./activate-port-call.component.css']\r\n})\r\nexport class ActivatePortCallComponent implements OnInit {\r\n\r\n  detailsDataIsPristine: boolean = true;\r\n  detailsIdentificationModel: any;\r\n  crewPassengersAndDimensionsModel: any;\r\n  purposeModel: any;\r\n  reportingModel: any;\r\n  otherPurposeName: string = \"\";\r\n  detailsMeta: FormMetaData;\r\n  detailsModel: PortCallDetailsModel = new PortCallDetailsModel();\r\n\r\n  portCallStatus: string;\r\n  portCallIsActive: boolean = false;\r\n  portCallIsDraft: boolean = false;\r\n  STATUS_ACTIVE = \"Active\";\r\n  STATUS_DRAFT = \"Draft\";\r\n\r\n  constructor(private contentService: ContentService, private portCallService: PortCallService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.detailsPristine$.subscribe(\r\n      detailsDataIsPristine => {\r\n        this.detailsDataIsPristine = detailsDataIsPristine;\r\n      }\r\n    );\r\n    this.portCallService.detailsIdentificationData$.subscribe(\r\n      detailsIdentificationData => {\r\n        if (detailsIdentificationData) this.detailsIdentificationModel = detailsIdentificationData;\r\n      }\r\n    );\r\n    this.portCallService.crewPassengersAndDimensionsData$.subscribe(\r\n      cpadData => {\r\n        if (cpadData) this.crewPassengersAndDimensionsModel = cpadData;\r\n      }\r\n    );\r\n    this.portCallService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData) this.reportingModel = reportingData;\r\n      }\r\n    );\r\n    this.portCallService.portCallPurposeData$.subscribe(\r\n      purposeData => {\r\n        if (purposeData) this.purposeModel = purposeData;\r\n      }\r\n    );\r\n    this.portCallService.otherPurposeName$.subscribe(\r\n      otherPurposeNameData => {\r\n        if (otherPurposeNameData) this.otherPurposeName = otherPurposeNameData;\r\n      }\r\n    );\r\n    this.portCallService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      metaData => {\r\n        this.detailsMeta = metaData;\r\n      }\r\n    );\r\n    this.portCallService.portCallStatusData$.subscribe(\r\n      statusData => {\r\n        if (statusData) {\r\n          if (statusData == this.STATUS_DRAFT) {\r\n            this.portCallIsDraft = true;\r\n          } else {\r\n            this.portCallIsDraft = false;\r\n          }\r\n          this.portCallStatus = statusData;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  saveDetails() {\r\n    this.detailsModel.portCallDetailsId = this.detailsIdentificationModel.portCallDetailsId;\r\n    this.detailsModel.portCallId = this.detailsIdentificationModel.portCallId;\r\n    this.detailsModel.numberOfCrew = this.crewPassengersAndDimensionsModel.numberOfCrew;\r\n    this.detailsModel.numberOfPassengers = this.crewPassengersAndDimensionsModel.numberOfPassengers;\r\n    this.detailsModel.airDraught = this.crewPassengersAndDimensionsModel.airDraught;\r\n    this.detailsModel.actualDraught = this.crewPassengersAndDimensionsModel.actualDraught;\r\n    this.detailsModel.reportingBunkers = this.reportingModel.reportingBunkers;\r\n    this.detailsModel.reportingCargo = this.reportingModel.reportingCargo;\r\n    this.detailsModel.reportingCrew = this.reportingModel.reportingCrew;\r\n    this.detailsModel.reportingHazmat = this.reportingModel.reportingHazmat;\r\n    this.detailsModel.reportingPax = this.reportingModel.reportingPax;\r\n    this.detailsModel.reportingShipStores = this.reportingModel.reportingShipStores;\r\n    this.detailsModel.reportingWaste = this.reportingModel.reportingWaste;\r\n    this.portCallService.saveDetails(this.detailsModel, this.purposeModel, this.otherPurposeName);\r\n    console.log(\"META: \", this.detailsMeta.valid, \"\\nPRISTINE: \", this.detailsDataIsPristine);\r\n  }\r\n\r\n  send() {\r\n    this.portCallService.updatePortCallStatusActive(this.detailsIdentificationModel.portCallId).subscribe(\r\n      updateStatusResponse => {\r\n        console.log(\"Status successfully updated.\");\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCES);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n      }\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      },\r\n      reason => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goBack();\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/activate-port-call/activate-port-call.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css\n// module id = ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.css\n// module chunks = main","module.exports = \"<app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-activate-port-call></app-activate-port-call>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html\n// module id = ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from '../../../../shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-confirmation',\r\n  templateUrl: './confirmation.component.html',\r\n  styleUrls: ['./confirmation.component.css']\r\n})\r\nexport class ConfirmationComponent implements OnInit {\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SharedModule } from '../../../../shared/shared.module';\r\nimport { ConfirmationComponent } from './confirmation.component';\r\nimport { ActivatePortCallComponent } from './activate-port-call/activate-port-call.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    SharedModule\r\n  ],\r\n  declarations: [\r\n    ConfirmationComponent,\r\n    ActivatePortCallComponent\r\n  ],\r\n  exports: [\r\n    ConfirmationComponent\r\n  ]\r\n})\r\nexport class ConfirmationModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/confirmation/confirmation.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light\\\">\\r\\n  <div class=\\\"row mb-3 text-center\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/portcall.png\\\" height=\\\"64px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <h3 class=\\\"text-ssn display-4\\\">\\r\\n        <span class=\\\"no-wrap\\\">NEW PORT</span>\\r\\n        <span class=\\\"no-wrap\\\">CALL DRAFT</span>\\r\\n      </h3>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-location-time></app-ship-location-time>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-port-call-draft',\r\n  templateUrl: './new-port-call-draft.component.html',\r\n  styleUrls: ['./new-port-call-draft.component.css']\r\n})\r\nexport class NewPortCallDraftComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/new-port-call-draft.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Confirm Port Call Draft\\\" icon=\\\"checkmark.png\\\">\\r\\n  <div *ngIf=\\\"!shipFound || !locationFound || !dateTimeFound\\\" class=\\\"text-center\\\">\\r\\n    <p *ngIf=\\\"!shipFound\\\" class=\\\"no-wrap mb-0\\\">No ship selected.</p>\\r\\n    <p *ngIf=\\\"!locationFound\\\" class=\\\"no-wrap mb-0\\\">No location selected.</p>\\r\\n    <p *ngIf=\\\"!dateTimeFound\\\" class=\\\"no-wrap\\\">ETA and ETD not set.</p>\\r\\n    <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Create Port Call Draft</button>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"shipFound && locationFound && dateTimeFound\\\" class=\\\"text-center\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-bordered\\\">\\r\\n        <thead>\\r\\n          <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n            <th>Ship flag</th>\\r\\n            <th>Ship name</th>\\r\\n            <th>Location Name</th>\\r\\n            <th>Location Code</th>\\r\\n            <th>ETA</th>\\r\\n            <th>ETD</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr>\\r\\n            <td>\\r\\n              <img src=\\\"assets/images/Flags/128x128/{{shipModel.country.twoCharCode | lowercase}}.png\\\" height=\\\"20px\\\" />\\r\\n            </td>\\r\\n            <td>{{ shipModel.ship.name }}</td>\\r\\n            <td>{{ locationModel.location.name }}</td>\\r\\n            <td>{{ locationModel.location.locationCode }}</td>\\r\\n            <td>{{ etaEtdModel.eta.year }}-{{ dateTimeFormat(etaEtdModel.eta.month) }}-{{ dateTimeFormat(etaEtdModel.eta.day)\\r\\n              }} {{ dateTimeFormat(etaEtdModel.eta.hour) }}:{{ dateTimeFormat(etaEtdModel.eta.minute) }}</td>\\r\\n            <td>{{ etaEtdModel.etd.year }}-{{ dateTimeFormat(etaEtdModel.etd.month) }}-{{ dateTimeFormat(etaEtdModel.etd.day)\\r\\n              }} {{ dateTimeFormat(etaEtdModel.etd.hour) }}:{{ dateTimeFormat(etaEtdModel.etd.minute) }}</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"startPortCallRegistration()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/checkmark.png\\\" height=\\\"24px\\\" /> Create Port Call Draft</button>\\r\\n  </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ConfirmationModalComponent } from '../../../../../../shared/components/confirmation-modal/confirmation-modal.component';\r\nimport { CONTENT_NAMES } from '../../../../../../shared/constants/content-names';\r\nimport { PortCallStatusTypes } from '../../../../../../shared/constants/port-call-status-types';\r\nimport { EtaEtdDateTime } from '../../../../../../shared/models/eta-etd-interface';\r\nimport { LocationOverviewModel } from '../../../../../../shared/models/location-overview-model';\r\nimport { PortCallDetailsModel } from '../../../../../../shared/models/port-call-details-model';\r\nimport { PortCallModel } from '../../../../../../shared/models/port-call-model';\r\nimport { ShipOverviewModel } from '../../../../../../shared/models/ship-overview-model';\r\nimport { ContentService } from '../../../../../../shared/services/content.service';\r\nimport { PortCallService } from '../../../../../../shared/services/port-call.service';\r\n\r\nconst RESULT_SUCCESS: string = \"The port call draft was successfully created. You will now be taken to the wizard for registering the rest of the information and activating the port call.\";\r\nconst RESULT_FAILURE: string = \"There was a problem when trying to create the new port call draft. Please try again later.\";\r\n\r\n@Component({\r\n  selector: 'app-confirm-data',\r\n  templateUrl: './confirm-data.component.html',\r\n  styleUrls: ['./confirm-data.component.css']\r\n})\r\nexport class ConfirmDataComponent implements OnInit {\r\n  shipModel: ShipOverviewModel;\r\n  locationModel: LocationOverviewModel;\r\n  etaEtdModel: EtaEtdDateTime;\r\n  portCallModel: PortCallModel = new PortCallModel();\r\n\r\n  shipFound: boolean;\r\n  locationFound: boolean;\r\n  dateTimeFound: boolean;\r\n\r\n  constructor(private portCallService: PortCallService, private contentService: ContentService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.portCallService.shipData$.subscribe(\r\n      shipData => {\r\n        if (shipData) {\r\n          this.shipFound = true;\r\n          this.shipModel = shipData;\r\n        } else {\r\n          this.shipFound = false;\r\n        }\r\n      }\r\n    );\r\n    this.portCallService.locationData$.subscribe(\r\n      locationData => {\r\n        if (locationData) {\r\n          this.locationFound = true;\r\n          this.locationModel = locationData;\r\n        } else {\r\n          this.locationFound = false;\r\n        }\r\n      }\r\n    );\r\n    this.portCallService.etaEtdData$.subscribe(\r\n      etaEtdData => {\r\n        if (etaEtdData) {\r\n          this.dateTimeFound =\r\n            this.etaEtdModel = etaEtdData;\r\n        } else {\r\n          this.dateTimeFound = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  dateTimeFormat(number: number) {\r\n    if (number <= 9) {\r\n      return \"0\" + number;\r\n    } else {\r\n      return number;\r\n    }\r\n  }\r\n\r\n  startPortCallRegistration() {\r\n    this.portCallModel.shipId = this.shipModel.ship.shipId;\r\n    this.portCallModel.portCallStatusId = PortCallStatusTypes.DRAFT_ID;\r\n    this.portCallModel.locationId = this.locationModel.location.locationId;\r\n    let eta = new Date(this.etaEtdModel.eta.year, (this.etaEtdModel.eta.month - 1), this.etaEtdModel.eta.day, this.etaEtdModel.eta.hour, this.etaEtdModel.eta.minute);\r\n    let etd = new Date(this.etaEtdModel.etd.year, (this.etaEtdModel.etd.month - 1), this.etaEtdModel.etd.day, this.etaEtdModel.etd.hour, this.etaEtdModel.etd.minute);\r\n    this.portCallModel.locationEta = eta;\r\n    this.portCallModel.locationEtd = etd;\r\n    this.portCallService.registerNewPortCall(this.portCallModel).subscribe(\r\n      result => {\r\n        console.log(\"New port call successfully registered.\");\r\n        // add list of government agencies for clearance\r\n        console.log(\"Registering government clearance agencies to port call...\");\r\n        this.portCallService.registerClearanceAgenciesForPortCall(result);\r\n        // Set details\r\n        let portCallDetails = new PortCallDetailsModel();\r\n        portCallDetails.portCallId = result.portCallId;\r\n        portCallDetails.portCallDetailsId = result.portCallId;\r\n        this.portCallService.setDetails(portCallDetails);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_SUCCESS, RESULT_SUCCESS);\r\n      },\r\n      error => {\r\n        console.log(error);\r\n        this.openConfirmationModal(ConfirmationModalComponent.TYPE_FAILURE, RESULT_FAILURE);\r\n      }\r\n    )\r\n  }\r\n\r\n  private openConfirmationModal(modalType: string, bodyText: string) {\r\n    const modalRef = this.modalService.open(ConfirmationModalComponent);\r\n    modalRef.componentInstance.modalType = modalType;\r\n    modalRef.componentInstance.bodyText = bodyText;\r\n    modalRef.result.then(\r\n      result => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goToPortCallWizard();\r\n      },\r\n      reason => {\r\n        if (modalType != ConfirmationModalComponent.TYPE_FAILURE) this.goToPortCallWizard();\r\n      }\r\n    );\r\n  }\r\n\r\n  private goToPortCallWizard() {\r\n    this.contentService.setPortCallForm(\"Port Call Details\");\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_PORT_CALL);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/confirm-data/confirm-data.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Select Arrival and Departure Time\\\" icon=\\\"time.png\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"eta_date_input\\\">ETA</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"eta.toggle()\\\" type=\\\"button\\\">\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/calendar.png\\\" height=\\\"24px\\\" />\\r\\n            </button>\\r\\n          </div>\\r\\n          <input id=\\\"eta_date_input\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-MM-dd\\\" name=\\\"dp-eta\\\" [showWeekNumbers]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"etaDateModel\\\" ngbDatepicker #eta=\\\"ngbDatepicker\\\" (ngModelChange)=\\\"etaDateChanged($event)\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!validEtaDateFormat\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <strong>Invalid date format!</strong> Format must be yyyy-MM-dd\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label for=\\\"etd_date_input\\\">ETD</label>\\r\\n        <div class=\\\"input-group\\\">\\r\\n          <div class=\\\"input-group-prepend\\\">\\r\\n            <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"etd.toggle()\\\" type=\\\"button\\\">\\r\\n              <img src=\\\"assets/images/VoyageIcons/128x128/white/calendar.png\\\" height=\\\"24px\\\" />\\r\\n            </button>\\r\\n          </div>\\r\\n          <input id=\\\"etd_date_input\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"yyyy-MM-dd\\\" name=\\\"dp-etd\\\" [showWeekNumbers]=\\\"true\\\"\\r\\n            [(ngModel)]=\\\"etdDateModel\\\" ngbDatepicker #etd=\\\"ngbDatepicker\\\" (ngModelChange)=\\\"etdDateChanged($event)\\\">\\r\\n        </div>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"!validEtdDateFormat\\\" class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        <strong>Invalid date format!</strong> Format must be yyyy-MM-dd\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"dateSequenceError\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8 alert alert-danger\\\" role=\\\"alert\\\">\\r\\n      <strong>Departure date can not be before arrival date!</strong>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <ngb-timepicker [(ngModel)]=\\\"etaTimeModel\\\" (ngModelChange)=\\\"etaTimeChanged($event)\\\"></ngb-timepicker>\\r\\n    </div>\\r\\n    <div class=\\\"col\\\">\\r\\n      <ngb-timepicker [(ngModel)]=\\\"etdTimeModel\\\" (ngModelChange)=\\\"etdTimeChanged($event)\\\"></ngb-timepicker>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\" *ngIf=\\\"timeSequenceError\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8 alert alert-danger\\\" role=\\\"alert\\\">\\r\\n      <strong>Departure time must be after arrival time!</strong>\\r\\n    </div>\\r\\n  </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { NgbDateStruct, NgbTimeStruct } from '@ng-bootstrap/ng-bootstrap';\r\nimport { PortCallService } from '../../../../../../shared/services/port-call.service';\r\nimport { EtaEtdDateTime } from './eta-etd-date-time.interface';\r\n\r\nconst equals = (one: NgbDateStruct, two: NgbDateStruct) =>\r\n  one && two && two.year === one.year && two.month === one.month && two.day === one.day;\r\n\r\nconst before = (one: NgbDateStruct, two: NgbDateStruct) =>\r\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\r\n    ? false : one.day < two.day : one.month < two.month : one.year < two.year;\r\n\r\nconst after = (one: NgbDateStruct, two: NgbDateStruct) =>\r\n  !one || !two ? false : one.year === two.year ? one.month === two.month ? one.day === two.day\r\n    ? false : one.day > two.day : one.month > two.month : one.year > two.year;\r\n\r\n\r\n@Component({\r\n  selector: 'app-eta-etd',\r\n  templateUrl: './eta-etd.component.html',\r\n  styleUrls: ['./eta-etd.component.css']\r\n})\r\nexport class EtaEtdComponent implements OnInit {\r\n\r\n  etaEtdModel: EtaEtdDateTime = {\r\n    eta: { year: null, month: null, day: null, hour: null, minute: null },\r\n    etd: { year: null, month: null, day: null, hour: null, minute: null }\r\n  };\r\n\r\n  etaDateModel: NgbDateStruct;\r\n  etdDateModel: NgbDateStruct;\r\n\r\n  etaTimeModel: NgbTimeStruct;\r\n  etdTimeModel: NgbTimeStruct;\r\n\r\n  validEtaDateFormat: boolean = true;\r\n  validEtdDateFormat: boolean = true;\r\n  dateSequenceError: boolean = false;\r\n  timeSequenceError: boolean = false;\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  etaDateChanged($event): void {\r\n    this.updateDateModel(this.etaEtdModel.eta, $event, \"eta\");\r\n  }\r\n\r\n  etdDateChanged($event): void {\r\n    this.updateDateModel(this.etaEtdModel.etd, $event, \"etd\");\r\n  }\r\n\r\n  private updateDateModel(model, $event, dateType: string): void {\r\n    if ($event != null) {\r\n      if (this.hasValidDateFormat($event)) {\r\n        this.updateValidDate(dateType, true);\r\n        model.year = $event.year;\r\n        model.month = $event.month;\r\n        model.day = $event.day;\r\n        this.validateData();\r\n        return;\r\n      } else {\r\n        this.updateValidDate(dateType, false);\r\n      }\r\n    } else {\r\n      this.updateValidDate(dateType, true);\r\n    }\r\n    model.year = null;\r\n    model.month = null;\r\n    model.day = null;\r\n    this.validateData();\r\n  }\r\n\r\n  private updateValidDate(dateType: string, valid: boolean) {\r\n    if (dateType == \"eta\") {\r\n      this.validEtaDateFormat = valid;\r\n    } else if (dateType == \"etd\") {\r\n      this.validEtdDateFormat = valid;\r\n    }\r\n  }\r\n\r\n  private hasValidDateFormat(model): boolean {\r\n    return typeof model != \"string\";\r\n  }\r\n\r\n  private validateData(): void {\r\n    if ((this.etaDateModel != null && this.etaDateModel.year != null) && (this.etdDateModel != null && this.etdDateModel.year != null)) {\r\n      this.dateSequenceError = after(this.etaDateModel, this.etdDateModel);\r\n      if (equals(this.etaDateModel, this.etdDateModel)) {\r\n        if ((this.etaTimeModel != null && this.etaTimeModel.hour != null) && (this.etdTimeModel != null && this.etdTimeModel.hour != null)) {\r\n          this.timeSequenceError = (this.etaTimeModel.hour > this.etdTimeModel.hour)\r\n            || ((this.etaTimeModel.hour == this.etdTimeModel.hour) && (this.etaTimeModel.minute >= this.etdTimeModel.minute));\r\n        } else {\r\n          this.timeSequenceError = false;\r\n        }\r\n      } else {\r\n        this.timeSequenceError = false;\r\n      }\r\n    } else {\r\n      this.dateSequenceError = false;\r\n      this.timeSequenceError = false;\r\n    }\r\n\r\n    if (!this.dateSequenceError && !this.timeSequenceError && this.hasRequiredData(this.etaEtdModel)) {\r\n      this.portCallService.setEtaEtdData(this.etaEtdModel);\r\n    } else {\r\n      this.portCallService.setEtaEtdData(null);\r\n    }\r\n  }\r\n\r\n  private hasRequiredData(model: EtaEtdDateTime): boolean {\r\n    return model.eta.year != null && model.eta.hour != null && model.etd.year != null && model.etd.hour != null;\r\n  }\r\n\r\n  etaTimeChanged($event): void {\r\n    this.updateTimeModel(this.etaEtdModel.eta, $event);\r\n  }\r\n\r\n  etdTimeChanged($event): void {\r\n    this.updateTimeModel(this.etaEtdModel.etd, $event);\r\n  }\r\n\r\n  private updateTimeModel(model, $event): void {\r\n    if ($event != null) {\r\n      model.hour = $event.hour;\r\n      model.minute = $event.minute;\r\n    } else {\r\n      model.hour = null;\r\n      model.minute = null;\r\n    }\r\n    this.validateData();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.etaEtdData$.subscribe((etaEtdData) => {\r\n      if (etaEtdData != null) {\r\n        this.etaEtdModel = etaEtdData;\r\n      }\r\n    });\r\n\r\n    if (this.etaEtdModel != null) {\r\n      this.etaDateModel = { year: this.etaEtdModel.eta.year, month: this.etaEtdModel.eta.month, day: this.etaEtdModel.eta.day };\r\n      this.etaTimeModel = { hour: this.etaEtdModel.eta.hour, minute: this.etaEtdModel.eta.minute, second: 0 };\r\n\r\n      this.etdDateModel = { year: this.etaEtdModel.etd.year, month: this.etaEtdModel.etd.month, day: this.etaEtdModel.etd.day };\r\n      this.etdTimeModel = { hour: this.etaEtdModel.etd.hour, minute: this.etaEtdModel.etd.minute, second: 0 };\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/eta-etd/eta-etd.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Select Location\\\" icon=\\\"location.png\\\">\\r\\n\\r\\n    <div *ngIf=\\\"!locationFound\\\" class=\\\"text-center\\\">\\r\\n        <app-search-harbour></app-search-harbour>\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"locationFound\\\" class=\\\"text-center\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered\\\">\\r\\n                <thead>\\r\\n                    <th *ngIf=\\\"locationFlag\\\" class=\\\"bg-ssn text-ssn\\\">Flag</th>\\r\\n                    <th *ngFor=\\\"let entry of locationInfo\\\" class=\\\"bg-ssn text-ssn\\\">{{ entry.description }}</th>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <td *ngIf=\\\"locationFlag\\\">\\r\\n                        <img src=\\\"assets/images/Flags/128x128/{{locationFlag | lowercase}}.png\\\" height=\\\"20px\\\">\\r\\n                    </td>\\r\\n                    <td *ngFor=\\\"let entry of locationInfo\\\">\\r\\n                        <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n                        <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n                    </td>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n        <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectLocation()\\\">\\r\\n            <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" /> Clear selection</button>\\r\\n    </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport { LocationProperties } from '../../../../../../shared/constants/location-properties';\r\nimport { LocationService } from '../../../../../../shared/services/location.service';\r\nimport { PortCallService } from '../../../../../../shared/services/port-call.service';\r\n\r\n\r\n\r\n@Component({\r\n    selector: 'app-find-location',\r\n    templateUrl: './find-location.component.html',\r\n    styleUrls: ['./find-location.component.css'],\r\n    providers: [LocationService]\r\n})\r\nexport class FindLocationComponent implements OnInit {\r\n\r\n    locationFound: boolean = false;\r\n\r\n    locationFlag: string;\r\n    locationProperties = LocationProperties.PROPERTIES;\r\n    locationInfo: any[];\r\n    constructor(private portCallService: PortCallService, private locationService: LocationService) { }\r\n\r\n    deselectLocation() {\r\n        this.locationFound = false;\r\n        this.locationService.setLocationData(null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.locationService.locationData$.subscribe(\r\n            locationResult => {\r\n                if (locationResult) {\r\n                    this.locationFlag = (locationResult.country) ? locationResult.country.twoCharCode.toLowerCase() : null;\r\n                    this.locationProperties.COUNTRY.data = (locationResult.country) ? locationResult.country.name : null;\r\n                    this.locationProperties.LOCATION_TYPE.data = locationResult.location.locationType.name;\r\n                    this.locationProperties.LOCATION_NAME.data = locationResult.location.name;\r\n                    this.locationProperties.LOCATION_CODE.data = locationResult.location.locationCode;\r\n\r\n                    this.locationFound = true;\r\n                    this.portCallService.setLocationData(locationResult);\r\n                } else {\r\n                    this.locationFound = false;\r\n                    this.portCallService.setLocationData(null);\r\n                }\r\n                this.locationInfo = Object.values(this.locationProperties);\r\n            }\r\n        );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-location/find-location.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Select Ship\\\" icon=\\\"ship.png\\\">\\r\\n\\r\\n  <div *ngIf=\\\"!shipFound\\\">\\r\\n    <app-search-ship></app-search-ship>\\r\\n  </div>\\r\\n\\r\\n  <div *ngIf=\\\"shipFound\\\" class=\\\"text-center\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-bordered\\\">\\r\\n        <thead>\\r\\n          <th *ngIf=\\\"shipFlag\\\" class=\\\"bg-ssn text-ssn\\\">Flag</th>\\r\\n          <th *ngFor=\\\"let entry of shipInfo\\\" class=\\\"bg-ssn text-ssn\\\">{{ entry.description }}</th>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <td *ngIf=\\\"shipFlag\\\">\\r\\n            <img src=\\\"assets/images/Flags/128x128/{{shipFlag | lowercase}}.png\\\" height=\\\"20px\\\">\\r\\n          </td>\\r\\n          <td *ngFor=\\\"let entry of shipInfo\\\">\\r\\n            <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n            <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n          </td>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"deselectShip()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\" />Clear selection</button>\\r\\n  </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ShipProperties } from '../../../../../../shared/constants/ship-properties';\r\nimport { PortCallService } from '../../../../../../shared/services/port-call.service';\r\nimport { ShipService } from '../../../../../../shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-find-ship',\r\n  templateUrl: './find-ship.component.html',\r\n  styleUrls: ['./find-ship.component.css'],\r\n  providers: [ShipService]\r\n})\r\nexport class FindShipComponent implements OnInit {\r\n\r\n  shipFlag: string;\r\n  shipFound: boolean = false;\r\n\r\n  shipProperties: any = ShipProperties.PROPERTIES;\r\n  shipInfo: any[];\r\n\r\n  constructor(private portCallService: PortCallService, private shipService: ShipService) { }\r\n\r\n  deselectShip() {\r\n    this.shipFound = false;\r\n    this.shipService.setShipOverviewData(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.shipService.setShipOverviewData(null);\r\n    this.shipService.shipOverviewData$.subscribe(\r\n      shipResult => {\r\n        if (shipResult) {\r\n          this.shipFlag = (shipResult.country) ? shipResult.country.twoCharCode.toLowerCase() : null;\r\n          this.shipProperties.SHIP_TYPE.data = (shipResult.shipType) ? shipResult.shipType.name : null;\r\n          this.shipProperties.SHIP_STATUS.data = (shipResult.shipStatus) ? shipResult.shipStatus.name : null;\r\n          this.shipProperties.SHIP_NAME.data = shipResult.ship.name;\r\n          this.shipProperties.CALL_SIGN.data = shipResult.ship.callSign;\r\n          this.shipProperties.IMO_NO.data = shipResult.ship.imoNo;\r\n          this.shipProperties.MMSI_NO.data = shipResult.ship.mmsiNo;\r\n          this.shipProperties.GROSS_TONNAGE.data = shipResult.ship.grossTonnage;\r\n          this.shipProperties.LENGTH.data = shipResult.ship.length;\r\n\r\n          this.shipFound = true;\r\n          this.portCallService.setShipData(shipResult);\r\n\r\n        } else {\r\n          this.shipFound = false;\r\n          this.shipProperties = ShipProperties.PROPERTIES;\r\n          this.portCallService.setShipData(null);\r\n        }\r\n        this.shipInfo = Object.values(this.shipProperties);\r\n      }\r\n    )\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/find-ship/find-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-find-ship></app-find-ship>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-find-location></app-find-location>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-eta-etd></app-eta-etd>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-confirm-data></app-confirm-data>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html\n// module id = ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-ship-location-time',\r\n  templateUrl: './ship-location-time.component.html',\r\n  styleUrls: ['./ship-location-time.component.css']\r\n})\r\nexport class ShipLocationTimeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/new-port-call-draft/ship-location-time/ship-location-time.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.css\n// module chunks = main","module.exports = \"<div class=\\\"d-table\\\">\\r\\n  <div class=\\\"d-table-row\\\">\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.view\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onViewClick()\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/eye.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">VIEW</small>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.edit\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"portCallIsCancelled\\\" disabled>\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/edit.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">EDIT</small>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onEditClick()\\\" *ngIf=\\\"!portCallIsCancelled\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/edit.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">EDIT</small>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.clearance\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"portCallIsCancelled\\\" disabled>\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/stamp.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">CLEAR</small>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onClearanceClick()\\\" *ngIf=\\\"!portCallIsCancelled\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/stamp.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">CLEAR</small>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.cancel && !portCallIsDraft\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"portCallIsDraft || portCallIsCancelled\\\" disabled>\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/cancel.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">CANCEL</small>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onCancelClick(cancelModal)\\\" *ngIf=\\\"!(portCallIsDraft || portCallIsCancelled)\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/cancel.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">CANCEL</small>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"d-table-cell pl-1\\\" *ngIf=\\\"permissions.delete && portCallIsDraft && !portCallIsCancelled\\\">\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" *ngIf=\\\"!portCallIsDraft || portCallIsCancelled\\\" disabled>\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/trash.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">DELETE</small>\\r\\n      </button>\\r\\n\\r\\n      <button class=\\\"btn btn-sm btn-ssn\\\" (click)=\\\"onDeleteClick(deleteModal)\\\" *ngIf=\\\"!(!portCallIsDraft || portCallIsCancelled)\\\">\\r\\n        <div class=\\\"mx-auto\\\">\\r\\n          <img src='assets/images/VoyageIcons/128x128/white/trash.png' height='20px' />\\r\\n        </div>\\r\\n        <small class=\\\"text-center text-white\\\">DELETE</small>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<ng-template #cancelModal let-close=\\\"close\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Cancel Port Call</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      <span>Are you sure you wish to cancel this port call?</span>\\r\\n      <br>\\r\\n      <span>This action cannot be undone.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"cancelPortCall(); close()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Cancel Port Call</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close()\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\\r\\n\\r\\n<ng-template #deleteModal let-close=\\\"close\\\">\\r\\n  <div class=\\\"modal-header\\\">\\r\\n    <h4 class=\\\"modal-title\\\">Delete Port Call</h4>\\r\\n    <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"close()\\\">\\r\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n    </button>\\r\\n  </div>\\r\\n  <div class=\\\"modal-body\\\">\\r\\n    <div>\\r\\n      <span>Are you sure you wish to delete this port call?</span>\\r\\n      <br>\\r\\n      <span>This action cannot be undone.</span>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"modal-footer\\\">\\r\\n    <button class=\\\"btn btn-danger\\\" (click)=\\\"deletePortCall(); close()\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/cancel.png\\\" height=\\\"24px\\\">\\r\\n      <span>Delete Port Call</span>\\r\\n    </button>\\r\\n    <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"close()\\\">\\r\\n      <span>Exit</span>\\r\\n    </button>\\r\\n  </div>\\r\\n</ng-template>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.html\n// module chunks = main","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport { ViewCell } from 'ng2-smart-table';\r\nimport { CONTENT_NAMES } from '../../../../../shared/constants/content-names';\r\nimport { PortCallClaims } from '../../../../../shared/constants/port-call-claims';\r\nimport { PortCallStatusTypes } from '../../../../../shared/constants/port-call-status-types';\r\nimport { PortCallDetailsModel } from '../../../../../shared/models/port-call-details-model';\r\nimport { AccountService } from '../../../../../shared/services/account.service';\r\nimport { ConstantsService } from '../../../../../shared/services/constants.service';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { PortCallOverviewService } from '../../../../../shared/services/port-call-overview.service';\r\nimport { PortCallService } from '../../../../../shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-button-row',\r\n  templateUrl: './button-row.component.html',\r\n  styleUrls: ['./button-row.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class ButtonRowComponent implements ViewCell, OnInit {\r\n\r\n  @Input() value: string | number;\r\n  @Input() rowData: any;\r\n\r\n  @Output() edit: EventEmitter<any> = new EventEmitter();\r\n\r\n  overviewData: any[];\r\n  draftOverviewData: any[];\r\n  clearedOverviewData: any[];\r\n\r\n  permissions = PortCallClaims.buttonRowPermissions;\r\n  portCallIsDraft: boolean = false;\r\n  portCallIsCancelled: boolean = false;\r\n\r\n  constructor(private constantsService: ConstantsService, private accountService: AccountService, private overviewService: PortCallOverviewService, private contentService: ContentService, private portCallService: PortCallService, private modalService: NgbModal) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallIsDraft = (this.rowData.overviewModel.status == PortCallStatusTypes.DRAFT);\r\n    this.portCallIsCancelled = (this.rowData.overviewModel.status == PortCallStatusTypes.CANCELLED);\r\n    this.accountService.userClaimsData$.subscribe(\r\n      userClaims => {\r\n        if (userClaims) {\r\n          let userClaimsTypePortCall = userClaims.filter(claim => claim.type == PortCallClaims.TYPE); // Find user claims where claim type is Port Call\r\n          var keys = Object.keys(this.permissions);\r\n          keys.forEach(key => {\r\n            this.permissions[key] = (userClaimsTypePortCall.some(claim => claim.value.toUpperCase() == key.toString().toUpperCase()));\r\n          });\r\n        }\r\n      }\r\n    );\r\n\r\n    this.overviewService.overviewData$.subscribe(\r\n      results => {\r\n        if (results) this.overviewData = results;\r\n      }\r\n    );\r\n    this.overviewService.draftOverviewData$.subscribe(\r\n      results => {\r\n        if (results) this.draftOverviewData = results;\r\n      }\r\n    );\r\n    this.overviewService.clearedByUserAgencyOverviewData$.subscribe(\r\n      results => {\r\n        if (results) this.clearedOverviewData = results;\r\n      }\r\n    )\r\n  }\r\n\r\n  onViewClick() {\r\n    this.setContent(CONTENT_NAMES.VIEW_PORT_CALL);\r\n  }\r\n\r\n  onEditClick() {\r\n    this.setContent(CONTENT_NAMES.REGISTER_PORT_CALL);\r\n  }\r\n\r\n  onClearanceClick() {\r\n    this.setContent(CONTENT_NAMES.PORT_CALL_CLEARANCE);\r\n  }\r\n\r\n  onCancelClick(content: any) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  onDeleteClick(content: any) {\r\n    this.modalService.open(content);\r\n  }\r\n\r\n  cancelPortCall() {\r\n    let pcId = this.rowData.overviewModel.portCall.portCallId;\r\n    this.rowData.overviewModel.status = PortCallStatusTypes.CANCELLED;\r\n    var htmlStatus = `<div class=\"text-danger\">` + this.rowData.overviewModel.status + `</div>`;\r\n    if (this.overviewData.find(r => r.overviewModel.portCall.portCallId == pcId)) {\r\n      this.overviewData.find(r => r.overviewModel.portCall.portCallId == pcId).status = htmlStatus;\r\n      this.overviewService.setOverviewData(this.overviewData);\r\n    }\r\n    if (this.draftOverviewData.find(r => r.overviewModel.portCallId == pcId)) {\r\n      this.draftOverviewData.find(r => r.overviewModel.portCall.portCallId == pcId).status = htmlStatus;\r\n      this.overviewService.setDraftData(this.draftOverviewData);\r\n    }\r\n    if (this.clearedOverviewData.find(r => r.overviewModel.portCallId == pcId)) {\r\n      this.clearedOverviewData.find(r => r.overviewModel.portCall.portCallId == pcId).status = htmlStatus;\r\n      this.overviewService.setClearedData(this.clearedOverviewData);\r\n    }\r\n    this.portCallService.updatePortCallStatusCancelled(this.rowData.overviewModel.portCall.portCallId);\r\n\r\n  }\r\n\r\n  deletePortCall() {\r\n    this.portCallService.deletePortCallDraft(this.rowData.overviewModel.portCall).subscribe(\r\n      deleteResponse => {\r\n        if (deleteResponse) {\r\n          let newOverviewData = this.overviewData.filter(row => row != this.rowData);\r\n          let newDraftData = this.draftOverviewData.filter(row => row != this.rowData);\r\n          let newClearedData = this.clearedOverviewData.filter(row => row != this.rowData);\r\n          this.overviewService.setOverviewData(newOverviewData);\r\n          this.overviewService.setDraftData(newDraftData);\r\n          this.overviewService.setClearedData(newClearedData);\r\n          console.log(deleteResponse);\r\n        }\r\n      }, error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  private setContent(content: string) {  // NEW CLEANUP\r\n    this.setPortCall(content);\r\n  }\r\n\r\n  // NEW CLEANUP - Set methods\r\n  setPortCall(content) {\r\n    this.portCallService.setPortCall(this.rowData.overviewModel);\r\n    this.setPurpose(content);\r\n  }\r\n  setPurpose(content) {\r\n    this.portCallService.getPurposeByPortCallId(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      purposeData => {\r\n        if (purposeData) {\r\n          if (purposeData.find(p => p.name == \"Other\")) {\r\n            this.portCallService.getOtherName(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n              otherNameData => {\r\n                this.portCallService.setOtherPurposeName(otherNameData);\r\n                this.portCallService.setPortCallPurposeData(purposeData);\r\n                this.setDetails(content)\r\n              }\r\n            );\r\n          } else {\r\n            this.portCallService.setPortCallPurposeData(purposeData);\r\n            this.setDetails(content);\r\n          }\r\n        } else {\r\n          console.log(\"No purpose information has been registered for this port call.\");\r\n        }\r\n      },\r\n      error => {\r\n        console.log(\"Get Purpose Error: \", error);\r\n      }\r\n    );\r\n  }\r\n  setDetails(content) {\r\n    this.portCallService.getDetailsByPortCallId(this.rowData.overviewModel.portCall.portCallId).subscribe(\r\n      detailsData => {\r\n        if (detailsData) {\r\n          this.portCallService.setDetails(detailsData)\r\n        }\r\n        else {\r\n          console.log(\"No details information has been registered for this port call.\");\r\n          let portCallDetails = new PortCallDetailsModel();\r\n          portCallDetails.portCallDetailsId = this.rowData.overviewModel.portCall.portCallId;\r\n          portCallDetails.portCallId = this.rowData.overviewModel.portCall.portCallId;\r\n          this.portCallService.setDetails(portCallDetails);\r\n        }\r\n        this.contentService.setContent(content);\r\n\r\n      },\r\n      error => {\r\n        console.log(\"Get Details Error: \", error);\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/button-row/button-row.component.ts","module.exports = \"/* Smart table */\\r\\n:root {\\r\\n    --color-primary: #002d50;\\r\\n    --color-primary-light: #37557c;\\r\\n    --color-primary-dark: #000128;\\r\\n    --color-primary-text: #ffffff;\\r\\n}\\r\\n:host /deep/ ng2-smart-table thead {\\r\\n    background-color: var(--color-primary);\\r\\n    color: white;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort::after {\\r\\n    content: '';\\r\\n    display: inline-block;\\r\\n    width: 0;\\r\\n    height: 0;\\r\\n    border-bottom: 4px solid white;\\r\\n    border-top: 4px solid transparent;\\r\\n    border-left: 4px solid transparent;\\r\\n    border-right: 4px solid transparent;\\r\\n    -webkit-transform: rotate(90deg);\\r\\n            transform: rotate(90deg);\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.asc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n    margin-bottom: 2px;\\r\\n}\\r\\n:host /deep/ a.ng2-smart-sort-link.sort.desc::after {\\r\\n    border-bottom: 4px solid white;\\r\\n    -webkit-transform: rotate(180deg);\\r\\n            transform: rotate(180deg);\\r\\n    margin-bottom: -2px;\\r\\n}\\r\\n:host /deep/ ng2-smart-table a { \\r\\n    color:var(--color-primary-text); \\r\\n}\\r\\n:host /deep/ a.ng2-smart-page-link.page-link {  \\r\\n    color: var(--color-primary-dark);\\r\\n    border-color: #dee2e6;\\r\\n}\\r\\n:host /deep/ span.ng2-smart-page-link.page-link { \\r\\n    color: var(--color-primary-dark); \\r\\n    background-color: #dee2e6;\\r\\n    border-color: #dee2e6;        \\r\\n}\\r\\n/* Loading screen */\\r\\n#overlay {\\r\\n    position: fixed;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    z-index: 1010;\\r\\n    background-color: rgba(255, 255, 255, 0.5);\\r\\n}\\r\\n#loading-box {\\r\\n    position: fixed;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n    height: 200px;\\r\\n    width: 400px;\\r\\n    margin-left: -200px;\\r\\n    margin-top: -100px;\\r\\n    z-index: 1011;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/overview.component.css\n// module id = ./src/app/main-content/content-container/port-call/overview/overview.component.css\n// module chunks = main","module.exports = \"<div id=\\\"overlay\\\" *ngIf=\\\"!overviewFound\\\">\\r\\n    <div id=\\\"loading-box\\\" class=\\\"text-center\\\">\\r\\n        <img src='assets/images/animations/portcall.gif' />\\r\\n        <h1>LOADING PORT CALLS</h1>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th>Active Port Calls</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"!(overviewList.length > 0)\\\">\\r\\n            <tr>\\r\\n                <img src=\\\"assets/images/VoyageIcons/128x128/warning.png\\\" height=\\\"24px\\\">\\r\\n                <span>There are no active port calls.</span>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"(overviewList.length > 0)\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"overviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\" *ngIf=\\\"permissions.edit\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th>Port Call Drafts</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"!(draftOverviewList.length > 0)\\\">\\r\\n            <tr>\\r\\n                <img src=\\\"assets/images/VoyageIcons/128x128/warning.png\\\" height=\\\"24px\\\">\\r\\n                <span>There are no port call drafts.</span>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"(draftOverviewList.length > 0)\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"draftOverviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mb-3\\\" *ngIf=\\\"userIsGovernmentAgency\\\">\\r\\n    <table class=\\\"table table-bordered text-center mx-auto mb-0\\\">\\r\\n        <thead class=\\\"bg-ssn text-white\\\">\\r\\n            <tr>\\r\\n                <th>Cleared Port Calls</th>\\r\\n            </tr>\\r\\n        </thead>\\r\\n        <tbody *ngIf=\\\"!(clearedByUserAgencyOverviewList.length > 0)\\\">\\r\\n            <tr>\\r\\n                <img src=\\\"assets/images/VoyageIcons/128x128/warning.png\\\" height=\\\"24px\\\">\\r\\n                <span>There are no cleared port calls.</span>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n    <div class=\\\"table-responsive\\\" *ngIf=\\\"(clearedByUserAgencyOverviewList.length > 0)\\\">\\r\\n        <ng2-smart-table [settings]=\\\"tableSettings\\\" [source]=\\\"clearedByUserAgencyOverviewSource\\\"></ng2-smart-table>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/overview/overview.component.html\n// module id = ./src/app/main-content/content-container/port-call/overview/overview.component.html\n// module chunks = main","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { LocalDataSource } from 'ng2-smart-table';\r\nimport { OrganizationTypes } from '../../../../shared/constants/organization-types';\r\nimport { PortCallClaims } from '../../../../shared/constants/port-call-claims';\r\nimport { PortCallStatusTypes } from '../../../../shared/constants/port-call-status-types';\r\nimport { AccountService } from '../../../../shared/services/account.service';\r\nimport { ContentService } from '../../../../shared/services/content.service';\r\nimport { OrganizationService } from '../../../../shared/services/organization.service';\r\nimport { PortCallOverviewService } from '../../../../shared/services/port-call-overview.service';\r\nimport { PortCallService } from '../../../../shared/services/port-call.service';\r\nimport { ButtonRowComponent } from './button-row/button-row.component';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.css'],\r\n  providers: [PortCallOverviewService, OrganizationService, DatePipe]\r\n})\r\nexport class OverviewComponent implements OnInit {\r\n\r\n  permissions = PortCallClaims.portCallPermissions;\r\n  overviewList = [];\r\n  draftOverviewList = [];\r\n  clearedByUserAgencyOverviewList = [];\r\n  userOrganization: any;\r\n  userIsGovernmentAgency: boolean = false;\r\n  overviewSource: LocalDataSource = new LocalDataSource();\r\n  draftOverviewSource: LocalDataSource = new LocalDataSource();\r\n  clearedByUserAgencyOverviewSource: LocalDataSource = new LocalDataSource();\r\n\r\n  overviewFound: boolean = false;\r\n\r\n  // Smart table\r\n  tableSettings = {\r\n    mode: 'external',\r\n    actions: false,\r\n    attr: {\r\n      class: 'table table-bordered',\r\n    },\r\n    noDataMessage: '',\r\n\r\n    columns: {\r\n      shipName: {\r\n        title: 'Ship Name',\r\n        type: 'html',\r\n      },\r\n      callSign: {\r\n        title: 'Call Sign',\r\n        type: 'html',\r\n      },\r\n      locationName: {\r\n        title: 'Location Name',\r\n        type: 'html'\r\n      },\r\n      eta: {\r\n        title: 'ETA',\r\n      },\r\n      etd: {\r\n        title: 'ETD'\r\n      },\r\n      status: {\r\n        title: 'Status',\r\n        type: 'html'\r\n      },\r\n      actions: {\r\n        title: 'Actions',\r\n        type: 'custom',\r\n        filter: false,\r\n        sort: false,\r\n        renderComponent: ButtonRowComponent\r\n      },\r\n\r\n    }\r\n  }\r\n\r\n  overviewRow(ov, isCancelled: boolean) {\r\n    let row = {\r\n      overviewModel: ov,\r\n      shipName: `<div hidden>` + ov.shipOverview.ship.name // ugly fix for alphabetical sorting but it works\r\n        + `</div> <div> <img src='assets/images/Flags/128x128/` + ov.shipOverview.country.twoCharCode.toLowerCase() + `.png' height='20px'/> ` + ov.shipOverview.ship.name + `</div>`,\r\n      callSign: ov.shipOverview.ship.callSign || `<div class=\"font-italic\">Not provided.</div>`,\r\n      locationName: `<div hidden>` + ov.locationOverview.location.name // same ugly fix as ship name\r\n        + `</div> <div> <img src='assets/images/Flags/128x128/` + ov.locationOverview.country.twoCharCode.toLowerCase() + `.png' height='20px'/> ` + ov.locationOverview.location.name + `</div>`,\r\n      eta: this.datePipe.transform(ov.portCall.locationEta, 'yyyy-MM-dd HH:mm'),\r\n      etd: this.datePipe.transform(ov.portCall.locationEtd, 'yyyy-MM-dd HH:mm'),\r\n      status: (isCancelled) ? `<div class=\"text-danger\">` + ov.status + `</div>` : ov.status,\r\n      actions: 'btn'\r\n    }\r\n    return row;\r\n  }\r\n\r\n  loadOverview() {\r\n    this.overviewService.overviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.overviewSource.load(results);\r\n        }\r\n      }\r\n    );\r\n    this.overviewService.draftOverviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.draftOverviewSource.load(results);\r\n        }\r\n      }\r\n    );\r\n    this.overviewService.clearedByUserAgencyOverviewData$.subscribe(\r\n      results => {\r\n        if (results) {\r\n          this.clearedByUserAgencyOverviewSource.load(results);\r\n        }\r\n      }\r\n    )\r\n    this.overviewService.getPortCalls().subscribe(\r\n      pcData => {\r\n        if (pcData) {\r\n          if (pcData.length === 0) {\r\n            this.overviewFound = true;\r\n          } else {\r\n            let index = 0;\r\n            let finalIndex = pcData.length - 1;\r\n            pcData.forEach((pc) => {\r\n              this.overviewService.getOverview(pc.portCallId).subscribe(\r\n                ov => {\r\n                  if (ov) {\r\n                    let row = this.overviewRow(ov, ov.status == PortCallStatusTypes.CANCELLED);\r\n                    // Case: port call is incomplete (status: draft)\r\n                    if (ov.status == PortCallStatusTypes.DRAFT) {\r\n                      this.draftOverviewList.push(row);\r\n                    }\r\n                    // Case: user is a government clearance agency and the port call has already been cleared by the agency\r\n                    else if (this.userIsGovernmentAgency\r\n                      && ov.clearanceList\r\n                      && ov.clearanceList.some(clearance => clearance.organizationId == this.userOrganization.organizationId && clearance.cleared != null)) {\r\n                      this.clearedByUserAgencyOverviewList.push(row);\r\n                    }\r\n                    // Case: default\r\n                    else {\r\n                      this.overviewList.push(row);\r\n                    }\r\n                    this.overviewService.setOverviewData(this.overviewList);\r\n                    this.overviewService.setDraftData(this.draftOverviewList);\r\n                    this.overviewService.setClearedData(this.clearedByUserAgencyOverviewList);\r\n                  }\r\n                }, undefined, () => {\r\n                  if (index++ >= finalIndex) this.overviewFound = true;\r\n                }\r\n              )\r\n            });\r\n          }\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  constructor(\r\n    private datePipe: DatePipe,\r\n    private accountService: AccountService,\r\n    private organizationService: OrganizationService,\r\n    private contentService: ContentService,\r\n    private portCallService: PortCallService,\r\n    private overviewService: PortCallOverviewService) { }\r\n\r\n  ngOnInit() {\r\n    this.accountService.userClaimsData$.subscribe(\r\n      userClaims => {\r\n        if (userClaims) {\r\n          let userClaimsTypePortCall = userClaims.filter(claim => claim.type == PortCallClaims.TYPE); // Find user claims where claim type is Port Call\r\n          var keys = Object.keys(this.permissions);\r\n          keys.forEach(key => {\r\n            this.permissions[key] = (userClaimsTypePortCall.some(claim => claim.value.toUpperCase() == key.toString().toUpperCase()));\r\n          });\r\n        }\r\n      }\r\n    )\r\n    this.organizationService.getOrganizationForUser().subscribe(\r\n      organizationResult => {\r\n        if (organizationResult) {\r\n          this.userIsGovernmentAgency = (organizationResult.organizationType && organizationResult.organizationType.name == OrganizationTypes.GOVERNMENT_AGENCY_STRING);\r\n          if (this.userIsGovernmentAgency) {\r\n            this.portCallService.setClearance(organizationResult);\r\n          }\r\n        }\r\n        this.userOrganization = organizationResult;\r\n        this.loadOverview();\r\n      }\r\n    );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/overview/overview.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/port-call.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\" *ngIf=\\\"permissions.register\\\">\\r\\n    <div class=\\\"col-sm col-md-6 col-lg-4\\\">\\r\\n        <ssn-card header=\\\"New Port Call\\\" icon=\\\"portcall.png\\\">\\r\\n            <div class=\\\"text-center\\\">\\r\\n                <p>To register a new port call, you have to create a port call draft, and then activate it.</p>\\r\\n                <button class=\\\"btn btn-ssn\\\" (click)=\\\"selectRegister()\\\">New Port Call Draft</button>\\r\\n            </div>\\r\\n        </ssn-card>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-overview></app-overview>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/port-call.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContentService } from '../../../shared/services/content.service';\r\nimport { PortCallService } from '../../../shared/services/port-call.service';\r\nimport { PortCallOverviewModel } from '../../../shared/models/port-call-overview-model';\r\nimport { AccountService } from '../../../shared/services/account.service';\r\nimport { PortCallClaims } from '../../../shared/constants/port-call-claims';\r\nimport { CONTENT_NAMES } from '../../../shared/constants/content-names';\r\n\r\n@Component({\r\n  selector: 'app-port-call',\r\n  templateUrl: './port-call.component.html',\r\n  styleUrls: ['./port-call.component.css'],\r\n})\r\nexport class PortCallComponent implements OnInit {\r\n\r\n  selectedComponent: string;\r\n  permissions = PortCallClaims.portCallPermissions;\r\n  constructor(private accountService: AccountService, private contentService: ContentService, private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.accountService.userClaimsData$.subscribe(\r\n      userClaims => {\r\n        if (userClaims) {\r\n          let userClaimsTypePortCall = userClaims.filter(claim => claim.type == PortCallClaims.TYPE);\r\n          var keys = Object.keys(this.permissions);\r\n          keys.forEach(key => {\r\n            this.permissions[key] = (userClaimsTypePortCall.some(claim => claim.value.toUpperCase() == key.toString().toUpperCase()));\r\n          })\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  selectRegister() {\r\n    this.portCallService.wipeServiceData();\r\n    this.contentService.setContent(CONTENT_NAMES.REGISTER_PORT_CALL_DRAFT);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/port-call.component.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpModule } from '@angular/http';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { Ng2SmartTableModule } from 'ng2-smart-table';\r\nimport { PortCallService } from '../../../shared/services/port-call.service';\r\nimport { SharedModule } from '../../../shared/shared.module';\r\nimport { ClearanceComponent } from './clearance/clearance.component';\r\nimport { ConfirmationModule } from './confirmation/confirmation.module';\r\nimport { NewPortCallDraftComponent } from './new-port-call-draft/new-port-call-draft.component';\r\nimport { ConfirmDataComponent } from './new-port-call-draft/ship-location-time/confirm-data/confirm-data.component';\r\nimport { EtaEtdComponent } from './new-port-call-draft/ship-location-time/eta-etd/eta-etd.component';\r\nimport { FindLocationComponent } from './new-port-call-draft/ship-location-time/find-location/find-location.component';\r\nimport { FindShipComponent } from './new-port-call-draft/ship-location-time/find-ship/find-ship.component';\r\nimport { ShipLocationTimeComponent } from './new-port-call-draft/ship-location-time/ship-location-time.component';\r\nimport { ButtonRowComponent } from './overview/button-row/button-row.component';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { PortCallComponent } from './port-call.component';\r\nimport { FormsComponent } from './registration/forms/forms.component';\r\nimport { CrewPassengersDimensionsComponent } from './registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component';\r\nimport { PortCallDetailsComponent } from './registration/forms/port-call-details/port-call-details.component';\r\nimport { PurposeComponent } from './registration/forms/port-call-details/purpose/purpose.component';\r\nimport { ReportingComponent } from './registration/forms/port-call-details/reporting/reporting.component';\r\nimport { SaveDetailsComponent } from './registration/forms/port-call-details/save-details/save-details.component';\r\nimport { ProgressBarComponent } from './registration/progress-bar/progress-bar.component';\r\nimport { RegistrationComponent } from './registration/registration.component';\r\nimport { ViewPortCallComponent } from './view-port-call/view-port-call.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgbModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    HttpModule,\r\n    Ng2SmartTableModule,\r\n    NgSelectModule,\r\n    ConfirmationModule,\r\n    SharedModule\r\n  ],\r\n  entryComponents: [ButtonRowComponent],\r\n  declarations: [\r\n    RegistrationComponent,\r\n    ProgressBarComponent,\r\n    FormsComponent,\r\n    ShipLocationTimeComponent,\r\n    FindShipComponent,\r\n    FindLocationComponent,\r\n    EtaEtdComponent,\r\n    ConfirmDataComponent,\r\n    PortCallDetailsComponent,\r\n    ReportingComponent,\r\n    CrewPassengersDimensionsComponent,\r\n    PurposeComponent,\r\n    OverviewComponent,\r\n    PortCallComponent,\r\n    ButtonRowComponent,\r\n    ViewPortCallComponent,\r\n    ClearanceComponent,\r\n    SaveDetailsComponent,\r\n    NewPortCallDraftComponent,\r\n  ],\r\n  exports: [\r\n    PortCallComponent,\r\n    NewPortCallDraftComponent,\r\n    RegistrationComponent,\r\n    ViewPortCallComponent,\r\n    ClearanceComponent\r\n  ],\r\n  providers: [\r\n    PortCallService\r\n  ]\r\n})\r\nexport class PortCallModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/port-call.module.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/forms.component.css\n// module chunks = main","module.exports = \"<app-progress-bar></app-progress-bar>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<div [ngSwitch]=\\\"selectedComponent\\\">\\r\\n    <app-port-call-details *ngSwitchCase=\\\"'Port Call Details'\\\"></app-port-call-details>\\r\\n\\r\\n    <app-confirmation *ngSwitchCase=\\\"'Confirm Port Call'\\\"></app-confirmation>\\r\\n    <div *ngSwitchDefault class=\\\"alert alert-danger\\\" role=\\\"alert\\\">\\r\\n        This page is not implemented yet.\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/forms.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { PortCallService } from '../../../../../shared/services/port-call.service';\r\nimport { ShipService } from '../../../../../shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-forms',\r\n  templateUrl: './forms.component.html',\r\n  styleUrls: ['./forms.component.css']\r\n})\r\nexport class FormsComponent implements OnInit {\r\n\r\n  selectedComponent: string;\r\n\r\n  constructor(private contentService: ContentService, private portCallService: PortCallService, private shipService: ShipService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.shipData$.subscribe(\r\n      shipResult => {\r\n        this.shipService.setShipOverviewData(shipResult);\r\n      }\r\n    );\r\n    this.contentService.portCallFormName$.subscribe(\r\n      content => {\r\n        this.selectedComponent = content;\r\n      }\r\n    );\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/forms.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Crew, Passengers and Dimensions\\\" icon=\\\"crew.png\\\">\\r\\n  <form>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"number_of_crew\\\">Number of Crew</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input name=\\\"number_of_crew\\\" type=\\\"number\\\" #numberOfCrew=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter number of crew\\\"\\r\\n              integerValidator positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.numberOfCrew\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(numberOfCrew.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"numberOfCrew.hasError('notIntegerError')\\\">\\r\\n            <small>Number of crew must be an integer.</small>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"numberOfCrew.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Number of crew must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap col-sm-5 col-md-3 col-lg-5\\\" for=\\\"number_of_passengers\\\">Number of Passengers</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input name=\\\"number_of_passengers\\\" type=\\\"number\\\" #numberOfPassengers=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter number of passengers\\\"\\r\\n              integerValidator positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.numberOfPassengers\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(numberOfPassengers.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"numberOfPassengers.hasError('notIntegerError')\\\">\\r\\n            <small>Number of passengers must be an integer.</small>\\r\\n          </li>\\r\\n          <li *ngIf=\\\"numberOfPassengers.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Number of passengers must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"actual_draught\\\">Actual Draught</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input name=\\\"actual_draught\\\" type=\\\"number\\\" #actualDraught=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter actual draught\\\"\\r\\n              positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.actualDraught\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(actualDraught.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"actualDraught.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Actual draught must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"col-lg-6\\\">\\r\\n        <div class=\\\"form-group row\\\">\\r\\n          <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"air_draught\\\">Air Draught</label>\\r\\n          <div class=\\\"col my-auto\\\">\\r\\n            <input name=\\\"air_draught\\\" type=\\\"number\\\" #airDraught=\\\"ngModel\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter air draught\\\" \\r\\n              positiveNumberValidator (ngModelChange)=\\\"persistData()\\\" [(ngModel)]=\\\"crewPassengersAndDimensionsModel.airDraught\\\"\\r\\n            />\\r\\n          </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!isValid(airDraught.valid)\\\" class=\\\"alert alert-danger\\\">\\r\\n          <li *ngIf=\\\"airDraught.hasError('notPositiveNumberError')\\\">\\r\\n            <small>Air draught must be a positive number.</small>\\r\\n          </li>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n  </form>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.html\n// module chunks = main","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { PortCallService } from '../../../../../../../shared/services/port-call.service';\r\nimport { locateHostElement } from '@angular/core/src/render3/instructions';\r\nimport { CrewPassengersAndDimensionsModel } from './crewPassengersAndDimensionsModel';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-crew-passengers-dimensions',\r\n  templateUrl: './crew-passengers-dimensions.component.html',\r\n  styleUrls: ['./crew-passengers-dimensions.component.css']\r\n})\r\nexport class CrewPassengersDimensionsComponent implements OnInit {\r\n\r\n  @ViewChild(NgForm) form: NgForm;\r\n\r\n  crewPassengersAndDimensionsModel: CrewPassengersAndDimensionsModel = {\r\n    numberOfCrew: null,\r\n    numberOfPassengers: null,\r\n    actualDraught: null,\r\n    airDraught: null\r\n  };\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.crewPassengersAndDimensionsData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.crewPassengersAndDimensionsModel = data;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  persistData() {\r\n    console.log(this.crewPassengersAndDimensionsModel);\r\n    \r\n    this.portCallService.setCrewPassengersAndDimensionsData(this.crewPassengersAndDimensionsModel);\r\n  }\r\n\r\n  isValid(valid: boolean): boolean {\r\n    this.sendMetaData();\r\n    return valid;\r\n  }\r\n\r\n  private sendMetaData(): void {\r\n    this.portCallService.setCrewPassengersAndDimensionsMeta({ valid: this.form.valid });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/crew-passengers-dimensions/crew-passengers-dimensions.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-reporting></app-reporting>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-crew-passengers-dimensions></app-crew-passengers-dimensions>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-purpose></app-purpose>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-save-details></app-save-details>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from '../../../../../../shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-port-call-details',\r\n  templateUrl: './port-call-details.component.html',\r\n  styleUrls: ['./port-call-details.component.css']\r\n})\r\nexport class PortCallDetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n  \r\n  ngOnInit() { }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/port-call-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Port Call Purpose\\\" icon=\\\"target.png\\\">\\r\\n  <label for=\\\"purposes\\\">\\r\\n    <span class=\\\"no-wrap\\\">Select purposes for this</span>\\r\\n    <span class=\\\"no-wrap\\\">port call.</span>\\r\\n  </label>\\r\\n  <ng-select id=\\\"purposes\\\" [items]=\\\"purposeList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"name\\\" placeholder=\\\"Select purposes\\\"\\r\\n    [(ngModel)]=\\\"selectedPurposes\\\" (change)=\\\"purposeSelected()\\\">\\r\\n  </ng-select>\\r\\n\\r\\n  <div *ngIf=\\\"otherPurposeSelected\\\" class=\\\"form-group row mt-3\\\">\\r\\n    <label class=\\\"col-form-label-sm no-wrap col-sm-4 col-md-3 col-lg-4\\\" for=\\\"other_purpose\\\">Specify Other Purpose:</label>\\r\\n    <div class=\\\"col my-auto\\\">\\r\\n      <input [(ngModel)]=\\\"otherPurposeName\\\" name=\\\"other_purpose\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"other_purpose\\\"\\r\\n        placeholder=\\\"Enter other purpose\\\" (ngModelChange)=\\\"setOtherPurposeName()\\\" />\\r\\n    </div>\\r\\n  </div>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.html\n// module chunks = main","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\r\n// import { CommonModule } from '@angular/common';\r\nimport { PortCallService } from '../../../../../../../shared/services/port-call.service';\r\nimport { PurposeService } from '../../../../../../../shared/services/purpose.service';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nconst OTHER_PURPOSE_ID = 100249;\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'app-purpose',\r\n  templateUrl: './purpose.component.html',\r\n  styleUrls: ['./purpose.component.css'],\r\n  providers: [PurposeService]\r\n})\r\nexport class PurposeComponent implements OnInit {\r\n\r\n  selectedPurposes = [];\r\n  purposeList: any[] = [];\r\n  amountOfPurposes: number = 0;\r\n\r\n  otherPurposeSelected: boolean = false;\r\n  otherPurposeName: string = \"\";\r\n\r\n  constructor(private purposeService: PurposeService, private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.purposeService.getPurposes().subscribe(\r\n      data => {\r\n        this.purposeList = data;\r\n        this.amountOfPurposes = Object.keys(this.purposeList).length;\r\n      }\r\n    );\r\n    // this.selectedPurposes = this.portCallService.portCallPurposeData$;\r\n    this.portCallService.portCallPurposeData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.selectedPurposes = data;\r\n          this.otherPurposeSelected = (this.selectedPurposes.find(p => p.portCallPurposeId == OTHER_PURPOSE_ID) != null);\r\n        }\r\n      }\r\n    );\r\n    this.portCallService.otherPurposeName$.subscribe(\r\n      data => {\r\n        this.otherPurposeName = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  purposeSelected() {\r\n    this.portCallService.setPortCallPurposeData(this.selectedPurposes);\r\n    console.log(\"SELECTED: \", this.selectedPurposes);\r\n    if (this.otherPurposeSelected) {\r\n      this.setOtherPurposeName();\r\n    }\r\n  }\r\n\r\n  setOtherPurposeName() {\r\n    this.portCallService.setOtherPurposeName(this.otherPurposeName);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/purpose/purpose.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Reporting for this Port Call\\\" icon=\\\"verification-clipboard.png\\\">\\r\\n  <form class=\\\"form-inline\\\">\\r\\n    <div class=\\\"form-check mx-2\\\" *ngFor=\\\"let cb of checkboxes\\\">\\r\\n      <input class=\\\"form-check-input clickable\\\" type=\\\"checkbox\\\" id=\\\"{{cb.name}}\\\" [checked]=\\\"cb.checked\\\" (change)=\\\"checkboxChecked(cb)\\\">\\r\\n      <label class=\\\"form-check-label clickable\\\" for=\\\"{{cb.name}}\\\">\\r\\n        <img src=\\\"{{baseIconUrl}}{{cb.icon}}\\\" height=\\\"16px\\\">{{cb.name}}\\r\\n      </label>\\r\\n    </div>\\r\\n  </form>\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from '../../../../../../../shared/services/port-call.service';\r\nimport { ReportingModel } from '../../../../../../../shared/models/reporting-model';\r\nimport { PortCallDetailsModel } from '../../../../../../../shared/models/port-call-details-model';\r\n\r\n@Component({\r\n  selector: 'app-reporting',\r\n  templateUrl: './reporting.component.html',\r\n  styleUrls: ['./reporting.component.css']\r\n})\r\nexport class ReportingComponent implements OnInit {\r\n\r\n  baseIconUrl: string = \"assets/images/VoyageIcons/128x128/\";\r\n  reportingModel: {\r\n    reportingHazmat: boolean,\r\n    reportingBunkers: boolean,\r\n    reportingCargo: boolean,\r\n    reportingShipStores: boolean,\r\n    reportingCrew: boolean,\r\n    reportingPax: boolean,\r\n    reportingWaste: boolean\r\n  };\r\n  checkboxes: any = [];\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  checkboxChecked(checkboxModel) {\r\n    checkboxModel.checked = !checkboxModel.checked;\r\n    switch (checkboxModel.name) {\r\n      case \"Hazmat\":\r\n        this.reportingModel.reportingHazmat = checkboxModel.checked;\r\n        break;\r\n      case \"Bunkers\": \r\n        this.reportingModel.reportingBunkers = checkboxModel.checked;\r\n        break;\r\n      case \"Cargo\": \r\n        this.reportingModel.reportingCargo = checkboxModel.checked;\r\n        break;\r\n      case \"Ship Stores\":\r\n        this.reportingModel.reportingShipStores = checkboxModel.checked;\r\n        break;\r\n      case \"Crew\":\r\n        this.reportingModel.reportingCrew = checkboxModel.checked;\r\n        break;\r\n      case \"Pax\":\r\n        this.reportingModel.reportingPax = checkboxModel.checked;\r\n        break;\r\n      case \"Waste\":\r\n        this.reportingModel.reportingWaste = checkboxModel.checked;\r\n        break;\r\n      default:\r\n        console.log(\"Oops. Something went wrong with the checkboxes.\");\r\n    }\r\n    console.log(this.reportingModel);\r\n\r\n    this.portCallService.setReportingForThisPortCallData(this.reportingModel);\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.portCallService.reportingForThisPortCallData$.subscribe(data => {\r\n      if (data != null) {\r\n        this.reportingModel = data;\r\n        \r\n      } else {\r\n        this.reportingModel = {\r\n          reportingHazmat: null,\r\n          reportingBunkers: null,\r\n          reportingCargo: null,\r\n          reportingShipStores: null,\r\n          reportingCrew: null,\r\n          reportingPax: null,\r\n          reportingWaste: null\r\n        };\r\n      }\r\n      this.checkboxes = [\r\n        { name: \"Hazmat\", icon: \"hazard.png\", checked: this.reportingModel.reportingHazmat || false },\r\n        { name: \"Bunkers\", icon: \"barrel.png\", checked: this.reportingModel.reportingBunkers || false },\r\n        { name: \"Cargo\", icon: \"cargo.png\", checked: this.reportingModel.reportingCargo || false },\r\n        { name: \"Ship Stores\", icon: \"alcohol.png\", checked: this.reportingModel.reportingShipStores || false },\r\n        { name: \"Crew\", icon: \"crew.png\", checked: this.reportingModel.reportingCrew || false },\r\n        { name: \"Pax\", icon: \"pax.png\", checked: this.reportingModel.reportingPax || false },\r\n        { name: \"Waste\", icon: \"trash.png\", checked: this.reportingModel.reportingWaste || false }\r\n      ]; \r\n    });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/reporting/reporting.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Save Port Call Details\\\" icon=\\\"save.png\\\">\\r\\n  <div class=\\\"text-center\\\" *ngIf=\\\"!dataIsPristine\\\">\\r\\n    <div *ngIf=\\\"!crewPassengersAndDimensionsMeta.valid\\\">\\r\\n      <div class=\\\"alert alert-danger\\\">\\r\\n        <strong>You can't save port call details.</strong>\\r\\n        <li *ngIf=\\\"!crewPassengersAndDimensionsMeta.valid\\\">\\r\\n          <small>There are errors in \\\"Crew, Passengers and Dimensions\\\"</small>\\r\\n        </li>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-ssn\\\" disabled>\\r\\n        <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n        <span>Save Details</span>\\r\\n      </button>\\r\\n    </div>\\r\\n\\r\\n    <button class=\\\"btn btn-ssn\\\" (click)=\\\"saveDetails()\\\" *ngIf=\\\"crewPassengersAndDimensionsMeta.valid\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Details</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"text-center\\\" *ngIf=\\\"dataIsPristine\\\">\\r\\n    <span>The data in this form is unchanged.</span>\\r\\n    <br>\\r\\n    <button class=\\\"btn btn-ssn mt-2\\\" disabled>\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/save.png\\\" height=\\\"24px\\\">\\r\\n      <span>Save Details</span>\\r\\n    </button>\\r\\n  </div>\\r\\n\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { FormMetaData } from '../../../../../../../shared/models/form-meta-data.interface';\r\nimport { PortCallDetailsModel } from '../../../../../../../shared/models/port-call-details-model';\r\nimport { PortCallService } from '../../../../../../../shared/services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-save-details',\r\n  templateUrl: './save-details.component.html',\r\n  styleUrls: ['./save-details.component.css']\r\n})\r\nexport class SaveDetailsComponent implements OnInit {\r\n  detailsModel: PortCallDetailsModel = new PortCallDetailsModel();\r\n  reportingModel: any;\r\n  crewPassengersAndDimensionsModel: any;\r\n  purposeModel: any;\r\n  otherPurposeName: any;\r\n\r\n  reportingFound: boolean;\r\n  crewPassengersAndDimensionsFound: boolean;\r\n  purposeFound: boolean;\r\n\r\n  crewPassengersAndDimensionsMeta: FormMetaData = { valid: true };\r\n\r\n  dataIsPristine: boolean = true;\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.portCallService.detailsPristine$.subscribe(\r\n      detailsDataIsPristine => {\r\n        this.dataIsPristine = detailsDataIsPristine;\r\n      }\r\n    );\r\n    // Database Identification\r\n    this.portCallService.detailsIdentificationData$.subscribe(\r\n      identificationData => {\r\n        if (identificationData) {\r\n          this.detailsModel.portCallDetailsId = identificationData.portCallDetailsId;\r\n          this.detailsModel.portCallId = identificationData.portCallId;\r\n        }\r\n      }\r\n    )\r\n    // Reporting\r\n    this.portCallService.reportingForThisPortCallData$.subscribe(\r\n      reportingData => {\r\n        if (reportingData) {\r\n          this.detailsModel.reportingBunkers = reportingData.reportingBunkers;\r\n          this.detailsModel.reportingCargo = reportingData.reportingCargo;\r\n          this.detailsModel.reportingCrew = reportingData.reportingCrew;\r\n          this.detailsModel.reportingHazmat = reportingData.reportingHazmat;\r\n          this.detailsModel.reportingPax = reportingData.reportingPax;\r\n          this.detailsModel.reportingShipStores = reportingData.reportingShipStores;\r\n          this.detailsModel.reportingWaste = reportingData.reportingWaste;\r\n        }\r\n      }\r\n    );\r\n    // Crew, passengers, and dimensions\r\n    this.portCallService.crewPassengersAndDimensionsData$.subscribe(\r\n      cpadData => {\r\n        if (cpadData) {\r\n          this.crewPassengersAndDimensionsModel = cpadData;\r\n          this.detailsModel.numberOfCrew = cpadData.numberOfCrew;\r\n          this.detailsModel.numberOfPassengers = cpadData.numberOfPassengers;\r\n          this.detailsModel.airDraught = cpadData.airDraught;\r\n          this.detailsModel.actualDraught = cpadData.actualDraught;\r\n        }\r\n      }\r\n    );\r\n    // Purpose\r\n    this.portCallService.portCallPurposeData$.subscribe(\r\n      purposeData => {\r\n        if (purposeData) {\r\n          this.purposeFound = true;\r\n          this.purposeModel = purposeData;\r\n        }\r\n      }\r\n    );\r\n\r\n    this.portCallService.otherPurposeName$.subscribe(\r\n      otherNameData => {\r\n        this.otherPurposeName = otherNameData;\r\n      }\r\n    )\r\n\r\n    this.portCallService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      cpadMetaData => {\r\n        this.crewPassengersAndDimensionsMeta = cpadMetaData;\r\n      }\r\n    );\r\n  }\r\n\r\n  saveDetails() {\r\n    if (this.crewPassengersAndDimensionsMeta.valid) {\r\n      this.detailsModel.numberOfCrew = this.crewPassengersAndDimensionsModel.numberOfCrew;\r\n      this.detailsModel.numberOfPassengers = this.crewPassengersAndDimensionsModel.numberOfPassengers;\r\n      this.detailsModel.airDraught = this.crewPassengersAndDimensionsModel.airDraught;\r\n      this.detailsModel.actualDraught = this.crewPassengersAndDimensionsModel.actualDraught;\r\n      this.portCallService.saveDetails(this.detailsModel, this.purposeModel, this.otherPurposeName);\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/forms/port-call-details/save-details/save-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card card-ssn bg-ssn text-ssn\\\">\\r\\n  <div class=\\\"row px-3 py-1\\\">\\r\\n\\r\\n    <div *ngFor=\\\"let menuEntry of menuEntries\\\">\\r\\n      <div *ngIf=\\\"menuEntry.checked\\\" class=\\\"mx-1 my-1\\\">\\r\\n        <button class=\\\"btn btn-sm\\\" [ngClass]=\\\"{'btn-danger': menuEntry.hasError, 'btn-ssn': !menuEntry.hasError}\\\" (click)=\\\"setPortCallForm(menuEntry.name)\\\">\\r\\n          <img src=\\\"{{iconPath}}{{menuEntry.icon}}\\\" height=\\\"24px\\\" /> {{menuEntry.name}}\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { MenuEntry } from '../../../../../shared/models/menu-entry.interface';\r\nimport { ContentService } from '../../../../../shared/services/content.service';\r\nimport { PortCallService } from '../../../../../shared/services/port-call.service';\r\nimport { FormMetaData } from '../../../../../shared/models/form-meta-data.interface';\r\n\r\nconst PORT_CALL_DETAILS = \"Port Call Details\";\r\nconst CONFIRM_PORT_CALL = \"Confirm Port Call\";\r\n\r\nconst HAZMAT = \"Hazmat\";\r\nconst BUNKERS = \"Bunkers\";\r\nconst CARGO = \"Cargo\";\r\nconst SHIP_STORES = \"Ship Stores\";\r\nconst CREW = \"Crew\";\r\nconst PAX = \"Pax\";\r\nconst WASTE = \"Waste\";\r\n\r\n@Component({\r\n  selector: 'app-progress-bar',\r\n  templateUrl: './progress-bar.component.html',\r\n  styleUrls: ['./progress-bar.component.css']\r\n})\r\nexport class ProgressBarComponent implements OnInit {\r\n\r\n  iconPath = \"assets/images/VoyageIcons/128x128/white/\";\r\n  baseMenuEntries: any[] = [\r\n    { name: PORT_CALL_DETAILS, icon: \"verification-clipboard.png\", checked: true, hasError: false }\r\n  ];\r\n  finalMenuEntries: any[] = [\r\n    { name: CONFIRM_PORT_CALL, icon: \"checkmark.png\", checked: true, hasError: false }\r\n  ];\r\n\r\n  menuEntries: any[];\r\n\r\n  constructor(private portCallService: PortCallService, private contentService: ContentService) { }\r\n\r\n  ngOnInit() {    \r\n    this.menuEntries = this.baseMenuEntries.concat(this.finalMenuEntries);\r\n    this.portCallService.reportingForThisPortCallData$.subscribe((reportingData) => {\r\n      if (reportingData != null) {\r\n        let falForms = [\r\n          { name: HAZMAT, icon: \"hazard.png\", checked: reportingData.reportingHazmat || false, hasError: false },\r\n          { name: BUNKERS, icon: \"barrel.png\", checked: reportingData.reportingBunkers || false, hasError: false },\r\n          { name: CARGO, icon: \"cargo.png\", checked: reportingData.reportingCargo || false, hasError: false },\r\n          { name: SHIP_STORES, icon: \"alcohol.png\", checked: reportingData.reportingShipStores || false, hasError: false },\r\n          { name: CREW, icon: \"crew.png\", checked: reportingData.reportingCrew || false, hasError: false },\r\n          { name: PAX, icon: \"pax.png\", checked: reportingData.reportingPax || false, hasError: false },\r\n          { name: WASTE, icon: \"trash.png\", checked: reportingData.reportingWaste || false, hasError: false }\r\n        ];\r\n        this.menuEntries = this.baseMenuEntries.concat(falForms).concat(this.finalMenuEntries);\r\n      }\r\n    });    \r\n\r\n    this.portCallService.crewPassengersAndDimensionsMeta$.subscribe(\r\n      metaData => {\r\n        this.menuEntries.find(p => p.name == PORT_CALL_DETAILS).hasError = !metaData.valid;\r\n      }\r\n    );\r\n  }\r\n\r\n  setPortCallForm(contentName: string) {\r\n    this.contentService.setPortCallForm(contentName);\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/progress-bar/progress-bar.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/registration.component.css\n// module id = ./src/app/main-content/content-container/port-call/registration/registration.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light\\\">\\r\\n  <div class=\\\"row mb-3 text-center\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/portcall.png\\\" height=\\\"64px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <h3 class=\\\"text-ssn display-4\\\">REGISTER <span class=\\\"no-wrap\\\">PORT CALL</span></h3>\\r\\n      <h4 class=\\\"text-ssn no-wrap\\\">~ {{ selectedComponent }} ~</h4>\\r\\n    </div>\\r\\n  </div>\\r\\n  <app-forms></app-forms>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/registration/registration.component.html\n// module id = ./src/app/main-content/content-container/port-call/registration/registration.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContentService } from '../../../../shared/services/content.service';\r\n\r\n@Component({\r\n  selector: 'app-registration',\r\n  templateUrl: './registration.component.html',\r\n  styleUrls: ['./registration.component.css']\r\n})\r\nexport class RegistrationComponent implements OnInit {\r\n\r\n  selectedComponent: string;\r\n\r\n  constructor(private contentService: ContentService) { }\r\n\r\n  ngOnInit() {\r\n    this.contentService.portCallFormName$.subscribe(\r\n      content => {\r\n        this.selectedComponent = content;\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/registration/registration.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css\n// module id = ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron bg-ssn-light\\\">\\r\\n  <div class=\\\"row mb-3 text-center\\\">\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/eye.png\\\" height=\\\"64px\\\">\\r\\n    </div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <h3 class=\\\"text-ssn display-4\\\">VIEW\\r\\n        <span class=\\\"no-wrap\\\">PORT CALL</span>\\r\\n      </h3>\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <button class=\\\"btn btn-light\\\" (click)=\\\"goBack()\\\">\\r\\n        <img src=\\\"assets/images/VoyageIcons/128x128/left-arrow.png\\\" height=\\\"32px\\\">\\r\\n        <br>\\r\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-ship-info-table></app-ship-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-location-time-info-table></app-location-time-info-table>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-confirmation-view></app-confirmation-view>\\r\\n\\r\\n  <div class=\\\"row text-center\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <button class=\\\"btn btn-light\\\" (click)=\\\"goBack()\\\">\\r\\n        <img src=\\\"assets/images/VoyageIcons/128x128/left-arrow.png\\\" height=\\\"32px\\\">\\r\\n        <span class=\\\"no-wrap\\\"> GO BACK</span>\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html\n// module id = ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { CONTENT_NAMES } from '../../../../shared/constants/content-names';\r\nimport { ContentService } from '../../../../shared/services/content.service';\r\nimport { PortCallService } from '../../../../shared/services/port-call.service';\r\nimport { ShipService } from '../../../../shared/services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-view-port-call',\r\n  templateUrl: './view-port-call.component.html',\r\n  styleUrls: ['./view-port-call.component.css']\r\n})\r\nexport class ViewPortCallComponent implements OnInit {\r\n\r\n  constructor(private contentService: ContentService, private portCallService: PortCallService, private shipService: ShipService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.shipData$.subscribe(\r\n      shipResult => {\r\n        this.shipService.setShipOverviewData(shipResult);\r\n      }\r\n    );\r\n  }\r\n\r\n  goBack() {\r\n    this.contentService.setContent(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/content-container/port-call/view-port-call/view-port-call.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header.component.css\n// module id = ./src/app/main-content/header/header.component.css\n// module chunks = main","module.exports = \"<header>\\r\\n  <nav class=\\\"navbar navbar-dark bg-ssn\\\">\\r\\n\\r\\n    <button class=\\\"btn btn-sm btn-ssn mr-auto\\\" type=\\\"button\\\" (click)=\\\"menuIsCollapsed = !menuIsCollapsed\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n    </button>\\r\\n\\r\\n    <ul class=\\\"navbar-nav ml-auto\\\" *ngIf=\\\"loggedIn\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <form class=\\\"form-inline\\\">\\r\\n          <div class=\\\"btn-group\\\">\\r\\n            <button class=\\\"btn btn-light btn-sm\\\">{{userName}}</button>\\r\\n            <button class=\\\"btn btn-outline-light btn-sm\\\" (click)=\\\"logout()\\\">Log out</button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </li>\\r\\n    </ul>\\r\\n\\r\\n    <div class=\\\"collapse navbar-collapse\\\" [ngbCollapse]=\\\"menuIsCollapsed\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm mx-auto mt-2\\\" *ngFor=\\\"let menu_entry of user_menu_entries\\\">\\r\\n          <button class=\\\"btn btn-ssn btn-sm col\\\" (click)=\\\"setContent(menu_entry.menuName)\\\">\\r\\n            <img src=\\\"{{menu_entry.iconPath}}\\\" height=\\\"24px\\\" /> {{menu_entry.title}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n\\r\\n  </nav>\\r\\n</header>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/header/header.component.html\n// module id = ./src/app/main-content/header/header.component.html\n// module chunks = main","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { CONTENT_NAMES } from '../../shared/constants/content-names';\r\nimport { MenuClaims } from '../../shared/constants/menu-claims';\r\nimport { MenuEntry } from '../../shared/models/menu-entry.interface';\r\nimport { AccountService } from '../../shared/services/account.service';\r\nimport { ContentService } from '../../shared/services/content.service';\r\nimport { LoginService } from '../../shared/services/login.service';\r\nimport { MenuService } from './menu.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css'],\r\n  providers: [MenuService]\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n\r\n  menuIsCollapsed: boolean = true;\r\n  subscription: Subscription;\r\n  loggedIn: boolean;\r\n  roles: any = new Array();\r\n  user_menu_entries: MenuEntry[];\r\n  userName: string = \"default\";\r\n  userClaims: any;\r\n\r\n  icon_path = \"assets/images/VoyageIcons/128x128/white/\";\r\n  menu_entries: MenuEntry[] = [\r\n    { title: \"USERS\", iconPath: this.icon_path + \"user.png\", menuName: CONTENT_NAMES.REGISTER_USER },\r\n    { title: \"SHIPS\", iconPath: this.icon_path + \"ship.png\", menuName: CONTENT_NAMES.VIEW_SHIPS },\r\n    { title: 'LOCATIONS', iconPath: this.icon_path + 'location.png', menuName: CONTENT_NAMES.LOCATIONS },\r\n    { title: 'ORGANIZATIONS', iconPath: this.icon_path + 'pax.png', menuName: CONTENT_NAMES.VIEW_ORGANIZATIONS },\r\n    { title: 'PORT CALLS', iconPath: this.icon_path + 'portcall.png', menuName: CONTENT_NAMES.VIEW_PORT_CALLS }\r\n  ];\r\n\r\n\r\n  private generateMenu() {\r\n    this.setMenuEntries();\r\n  }\r\n\r\n  private getAllRoles() {\r\n    // Gets the roles of the logged in user\r\n    this.accountService.getAllRoles().subscribe(\r\n      data => {\r\n        this.roles = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  private setMenuEntries() {\r\n    // Populates the menu entry list with the entries the user has access to\r\n\r\n    this.user_menu_entries = [];\r\n    for (let menu_entry of this.menu_entries) {\r\n      let menuName = menu_entry.menuName;\r\n      if (this.permissions[menuName]) {\r\n        this.user_menu_entries\r\n          .push(this.menu_entries\r\n            .find(me => me.menuName == menuName)\r\n          );\r\n      }\r\n    }\r\n  }\r\n\r\n  constructor(\r\n    private loginService: LoginService,\r\n    private contentService: ContentService,\r\n    private accountService: AccountService,\r\n    private menuService: MenuService,\r\n    private router: Router\r\n  ) {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.loginService.logout();\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  setContent(contentName: string) {\r\n    // this.setMenuEntries();\r\n    this.contentService.setContent(contentName);\r\n  }\r\n\r\n  permissions = MenuClaims.PERMISSIONS;\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.loginService.authNavStatus$.subscribe(status => this.loggedIn = status);\r\n    this.contentService.contentName$.subscribe(() => this.menuIsCollapsed = true);\r\n\r\n    this.accountService.userClaimsData$\r\n      //.finally(() => this.generateMenu())\r\n      .subscribe(\r\n        userClaims => {\r\n          if (userClaims) {\r\n            let userClaimsTypeMenu = userClaims.filter(\r\n              claim => claim.type == MenuClaims.TYPE\r\n            );\r\n            var keys = Object.keys(this.permissions);\r\n            keys.forEach(key => {\r\n              this.permissions[key] = (userClaimsTypeMenu.some(\r\n                claim => claim.value == key\r\n              ))\r\n            });\r\n            this.generateMenu();\r\n          }\r\n        }\r\n      )\r\n\r\n    if (this.loggedIn) {\r\n      this.accountService.getUserName().subscribe(\r\n        result => {\r\n          if (result) {\r\n            this.userName = result;\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n  ngOnDestroy() {\r\n    // prevent memory leak by unsubscribing\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/header/header.component.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { ConfigService } from \"../../shared/utils/config.service\";\r\nimport { AuthRequest } from \"../../shared/services/auth.request.service\";\r\nimport { BaseRequest } from \"../../shared/utils/base.request\";\r\n\r\n@Injectable()\r\nexport class MenuService extends BaseRequest {\r\n    private menuBaseUrl : string;\r\n    private actionUrl: string;\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private authRequestService: AuthRequest,\r\n        configService: ConfigService\r\n    ) {\r\n        super(configService);\r\n        \r\n        this.menuBaseUrl = \"/menu\";\r\n        this.actionUrl = this.baseUrl + this.menuBaseUrl;\r\n    }\r\n\r\n    getMenuEntries() {\r\n        var auth_headers = this.authRequestService.GetHeaders();\r\n        let url : string = `${this.actionUrl}/entries`;\r\n        let options = new RequestOptions({ headers: auth_headers })\r\n        return this.http\r\n            .get(url, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/header/menu.service.ts","module.exports = \".page-content {\\r\\n    margin-bottom: -100px;\\r\\n}\\r\\n\\r\\n.footer-gap {\\r\\n    height: 100px;\\r\\n}\\r\\n\\r\\nfooter {\\r\\n    height: 100px;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\n.footer-section {\\r\\n    height: 100px;\\r\\n    display: -webkit-box;\\r\\n    display: -ms-flexbox;\\r\\n    display: flex;\\r\\n    -webkit-box-pack: center;\\r\\n        -ms-flex-pack: center;\\r\\n            justify-content: center;\\r\\n    -webkit-box-align: center;\\r\\n        -ms-flex-align: center;\\r\\n            align-items: center;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/main-content.component.css\n// module id = ./src/app/main-content/main-content.component.css\n// module chunks = main","module.exports = \"<div class=\\\"page-content\\\" [ngStyle]=\\\"{'min-height': clientHeight + 'px'}\\\">\\r\\n  <app-header></app-header>\\r\\n  <br>\\r\\n  <div class=\\\"mx-sm-auto mx-md-2 mx-lg-4\\\">\\r\\n      <app-content-container></app-content-container>\\r\\n  </div>\\r\\n  <div class=\\\"footer-gap\\\"></div>\\r\\n</div>\\r\\n\\r\\n<footer class=\\\"footer bg-ssn text-ssn text-center\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-4 footer-section\\\">\\r\\n          <h4>Maritime Single Window</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-4 footer-section\\\">\\r\\n          <img src=\\\"/assets/images/logo.png\\\" height=\\\"60px\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-4 footer-section\\\">\\r\\n          <img src=\\\"/assets/images/imo-logo.png\\\" height=\\\"80px\\\" />\\r\\n      </div>\\r\\n  </div>\\r\\n</footer>\\r\\n\\r\\n<router-outlet></router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main-content/main-content.component.html\n// module id = ./src/app/main-content/main-content.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { LoginService } from '../shared/services/login.service';\r\nimport { AccountService } from '../shared/services/account.service';\r\n\r\n@Component({\r\n  selector: 'app-main-content',\r\n  templateUrl: './main-content.component.html',\r\n  styleUrls: ['./main-content.component.css']\r\n})\r\nexport class MainContentComponent implements OnInit {\r\n\r\n  clientHeight: number;\r\n\r\n  constructor(private router: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    private loginService: LoginService,\r\n    private accountService: AccountService) { \r\n    this.clientHeight = window.innerHeight;\r\n  }\r\n\r\n  ngOnInit() {\r\n    var user_claims;\r\n    if(user_claims = localStorage.getItem(\"user-claims\")) {\r\n      this.accountService.setUserClaims(\r\n        JSON.parse(user_claims)\r\n      );\r\n    }\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main-content/main-content.component.ts","// import 'rxjs/Rx'; // adds ALL RxJS statics & operators to Observable\r\n\r\n// See node_module/rxjs/Rxjs.js\r\n// Import just the rxjs statics and operators we need for THIS app.\r\n\r\n// Statics\r\nimport 'rxjs/add/observable/throw';\r\n\r\n// Operators\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport 'rxjs/add/operator/switchMap';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/do';\r\nimport 'rxjs/add/operator/merge';\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/rxjs-operators.js\n// module id = ./src/app/rxjs-operators.js\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.css\n// module id = ./src/app/shared/components/confirmation-modal/confirmation-modal.component.css\n// module chunks = main","module.exports = \"<div class=\\\"modal-header\\\">\\r\\n  <h4 class=\\\"modal-title\\\">{{ headerText }}</h4>\\r\\n  <button type=\\\"button\\\" class=\\\"close\\\" aria-label=\\\"Close\\\" (click)=\\\"activeModal.dismiss('Cross click')\\\">\\r\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n  </button>\\r\\n</div>\\r\\n<div class=\\\"modal-body\\\">\\r\\n  {{ bodyText }}\\r\\n</div>\\r\\n<div class=\\\"modal-footer\\\">\\r\\n  <button type=\\\"button\\\" class=\\\"btn btn-ssn\\\" (click)=\\\"activeModal.close('Close click')\\\">Close</button>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.html\n// module id = ./src/app/shared/components/confirmation-modal/confirmation-modal.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\r\n\r\n@Component({\r\n  selector: 'confirmation-modal',\r\n  templateUrl: './confirmation-modal.component.html',\r\n  styleUrls: ['./confirmation-modal.component.css']\r\n})\r\nexport class ConfirmationModalComponent implements OnInit {\r\n\r\n  static TYPE_SUCCESS: string = \"SUCCESS\";\r\n  static TYPE_WARNING: string = \"WARNING\";\r\n  static TYPE_FAILURE: string = \"FAILURE\";\r\n\r\n  @Input()\r\n  headerText: string;\r\n\r\n  @Input()\r\n  bodyText: string;\r\n\r\n  @Input()\r\n  modalType: string;\r\n\r\n  constructor(public activeModal: NgbActiveModal) { }\r\n\r\n  ngOnInit() {\r\n    this.headerText = this.modalType;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-modal/confirmation-modal.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.css\n// module id = ./src/app/shared/components/confirmation-view/clearances/clearances.component.css\n// module chunks = main","module.exports = \"<table-card header=\\\"Clearances\\\" icon=\\\"stamp.png\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th>Type</th>\\r\\n      <th>Status</th>\\r\\n      <th>Remark</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let clearance of clearanceList\\\">\\r\\n      <td>{{ clearance.organization.name }}</td>\\r\\n      <td>\\r\\n        <div *ngIf=\\\"clearance.cleared\\\" class=\\\"alert alert-success mb-0\\\"><span>Cleared.</span></div>\\r\\n        <div *ngIf=\\\"clearance.cleared == null\\\" class=\\\"alert alert-warning mb-0\\\"><span>Not reviewed.</span></div>\\r\\n        <div *ngIf=\\\"clearance.cleared == false\\\" class=\\\"alert alert-danger mb-0\\\"><span>Rejected.</span></div>\\r\\n      </td>\\r\\n      <td>{{ clearance.remark }}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.html\n// module id = ./src/app/shared/components/confirmation-view/clearances/clearances.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from '../../../services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-clearances',\r\n  templateUrl: './clearances.component.html',\r\n  styleUrls: ['./clearances.component.css']\r\n})\r\nexport class ClearancesComponent implements OnInit {\r\n\r\n  clearanceList: any[] = [];\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.clearanceListData$.subscribe(\r\n      clearanceListData => {\r\n        if (clearanceListData) {\r\n          this.clearanceList = clearanceListData;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/clearances/clearances.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.css\n// module id = ./src/app/shared/components/confirmation-view/confirmation-view.component.css\n// module chunks = main","module.exports = \"<!-- Port Call Details -->\\r\\n<div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-port-call-details></app-port-call-details>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <!-- FAL forms -->\\r\\n  <div *ngFor=\\\"let entry of falForms\\\">\\r\\n    <div class=\\\"row mb-3\\\" *ngIf=\\\"entry.checked\\\">\\r\\n      <div class=\\\"col\\\">\\r\\n        <table-card header=\\\"{{entry.name}}\\\" icon=\\\"{{entry.icon}}\\\" collapsible=true>\\r\\n          <div [ngSwitch]=\\\"entry.name\\\">\\r\\n            <div *ngSwitchDefault class=\\\"text-center my-3\\\">\\r\\n              <img src=\\\"{{iconPath}}warning.png\\\" height=\\\"24px\\\" />\\r\\n              <span class=\\\"no-wrap\\\">{{ entry.name }} information</span>\\r\\n              <span class=\\\"no-wrap\\\">is marked for delivery,</span>\\r\\n              <span class=\\\"no-wrap\\\">but no information is provided.</span>\\r\\n            </div>\\r\\n          </div>\\r\\n        </table-card>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <!-- Clearance information -->\\r\\n  <div class=\\\"row mb-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <app-clearances></app-clearances>\\r\\n    </div>\\r\\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.html\n// module id = ./src/app/shared/components/confirmation-view/confirmation-view.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from '../../services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-confirmation-view',\r\n  templateUrl: './confirmation-view.component.html',\r\n  styleUrls: ['./confirmation-view.component.css']\r\n})\r\nexport class ConfirmationViewComponent implements OnInit {\r\n\r\n  iconPath = \"assets/images/VoyageIcons/128x128/white/\";\r\n  falForms: any;\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.reportingForThisPortCallData$.subscribe((reportingData) => {\r\n      if (reportingData != null) {\r\n        this.falForms = [\r\n          { name: \"Hazmat\", icon: \"hazard.png\", checked: reportingData.reportingHazmat || false },\r\n          { name: \"Bunkers\", icon: \"barrel.png\", checked: reportingData.reportingBunkers || false },\r\n          { name: \"Cargo\", icon: \"cargo.png\", checked: reportingData.reportingCargo || false },\r\n          { name: \"Ship Stores\", icon: \"alcohol.png\", checked: reportingData.reportingShipStores || false },\r\n          { name: \"Crew\", icon: \"crew.png\", checked: reportingData.reportingCrew || false },\r\n          { name: \"Pax\", icon: \"pax.png\", checked: reportingData.reportingPax || false },\r\n          { name: \"Waste\", icon: \"trash.png\", checked: reportingData.reportingWaste || false }\r\n        ];\r\n      }\r\n    });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/confirmation-view.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.css\n// module chunks = main","module.exports = \"<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <table-card header=\\\"Crew, Passengers and Dimensions\\\" icon=\\\"crew.png\\\" collapsible=true>\\r\\n      <tbody>\\r\\n        <tr>\\r\\n          <td *ngFor=\\\"let entry of portCallDetailsInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n            <tr>\\r\\n              <small>{{entry.description}}</small>\\r\\n            </tr>\\r\\n            <tr>\\r\\n              <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n              <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n            </tr>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </tbody>\\r\\n    </table-card>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"row mb-3\\\">\\r\\n  <div class=\\\"col\\\">\\r\\n    <app-selected-purposes></app-selected-purposes>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from '../../../services/port-call.service';\r\n\r\nconst NO_OF_CREW = \"No. of Crew\";\r\nconst NO_OF_PASSENGERS = \"No. of Passengers\";\r\nconst ACTUAL_DRAUGHT = \"Actual Draught\";\r\nconst AIR_DRAUGHT = \"Air Draught\";\r\n\r\n@Component({\r\n  selector: 'app-port-call-details',\r\n  templateUrl: './port-call-details.component.html',\r\n  styleUrls: ['./port-call-details.component.css']\r\n})\r\nexport class PortCallDetailsComponent implements OnInit {\r\n\r\n  portCallDetailsInfo: any[] = [\r\n    { description: NO_OF_CREW, data: null },\r\n    { description: NO_OF_PASSENGERS, data: null },\r\n    { description: ACTUAL_DRAUGHT, data: null },\r\n    { description: AIR_DRAUGHT, data: null }\r\n  ];\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.portCallService.crewPassengersAndDimensionsData$.subscribe(\r\n      data => {\r\n        if (data != null) {\r\n          this.portCallDetailsInfo.find(p => p.description == NO_OF_CREW).data = data.numberOfCrew;\r\n          this.portCallDetailsInfo.find(p => p.description == NO_OF_PASSENGERS).data = data.numberOfPassengers;\r\n          this.portCallDetailsInfo.find(p => p.description == ACTUAL_DRAUGHT).data = data.actualDraught;\r\n          this.portCallDetailsInfo.find(p => p.description == AIR_DRAUGHT).data = data.airDraught;\r\n        }\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/port-call-details/port-call-details.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.css\n// module chunks = main","module.exports = \"<table-card header=\\\"Selected Purposes\\\" icon=\\\"target.png\\\" collapsible=true>\\r\\n  <tbody class=\\\"border-top-0\\\">\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let purpose of selectedPurposes; let isFirst=first\\\" [ngClass]=\\\"{'border-left': !isFirst}\\\"> {{ getPurposeName(purpose.portCallPurposeId) }} </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html\n// module id = ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { PortCallService } from '../../../../services/port-call.service';\r\nimport { PurposeService } from '../../../../services/purpose.service';\r\n\r\nconst OTHER_PURPOSE_ID = \"100249\";\r\n\r\n@Component({\r\n  selector: 'app-selected-purposes',\r\n  templateUrl: './selected-purposes.component.html',\r\n  styleUrls: ['./selected-purposes.component.css'],\r\n  providers: [PurposeService]\r\n})\r\nexport class SelectedPurposesComponent implements OnInit {\r\n\r\n  selectedPurposes: any;\r\n  purposeList: any[];\r\n\r\n  otherPurposeName: string = \"\";\r\n\r\n  constructor(private purposeService: PurposeService, private portCallService: PortCallService) { }\r\n\r\n  ngOnInit() {\r\n    this.purposeService.getPurposes().subscribe(\r\n      data => {\r\n        this.purposeList = data;\r\n      }\r\n    );\r\n    this.portCallService.portCallPurposeData$.subscribe(\r\n      data => {\r\n        if (data != null) {\r\n          this.selectedPurposes = data; \r\n        }\r\n      }\r\n    );\r\n    this.portCallService.otherPurposeName$.subscribe(\r\n      data => {\r\n        this.otherPurposeName = data;\r\n      }\r\n    );\r\n  }\r\n\r\n  getPurposeName(id) {\r\n    if (this.purposeList != null) {\r\n      let purpose = this.purposeList.find(p => p.portCallPurposeId == id);\r\n      if (purpose.portCallPurposeId != OTHER_PURPOSE_ID) {\r\n        return purpose != null ? purpose.name : null;\r\n      } else {\r\n        return this.otherPurposeName == \"\" ? \"Other purpose is undefined\" : \"Other: \\\"\" + this.otherPurposeName + \"\\\"\";\r\n      }\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/contact-select/contact-select.component.css\n// module id = ./src/app/shared/components/contact-select/contact-select.component.css\n// module chunks = main","module.exports = \"<ssn-card header=\\\"Contact information\\\" icon=\\\"contact.png\\\">\\r\\n  <div class=\\\"text-center\\\">\\r\\n    <label for=\\\"contact_info\\\">Select contact information</label>\\r\\n  </div>\\r\\n  <ng-select id=\\\"contact_info\\\" [items]=\\\"contactList\\\" [multiple]=\\\"true\\\" [closeOnSelect]=\\\"true\\\" bindLabel=\\\"contactMedium.contactMediumType\\\"\\r\\n    placeholder=\\\"Select contact mediums\\\" [(ngModel)]=\\\"selectedContactModels\\\" (change)=\\\"contactMediumSelected()\\\">\\r\\n  </ng-select>\\r\\n\\r\\n  <div *ngFor=\\\"let contactMedium of selectedContactModels; let i = index\\\" class=\\\"form-group row mt-3\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div class=\\\"input-group input-group-sm\\\">\\r\\n\\r\\n        <div class=\\\"input-group-prepend\\\">\\r\\n          <span class=\\\"input-group-text bg-ssn text-white\\\">{{ contactMedium.contactMedium.contactMediumType }}</span>\\r\\n        </div>\\r\\n\\r\\n        <input id=\\\"contact_value\\\" name=\\\"contactValue\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" placeholder=\\\"Enter {{ contactMedium.contactMedium.contactMediumType }}\\\"\\r\\n          [(ngModel)]=\\\"selectedContactModels[i].contactValue\\\" (ngModelChange)=\\\"contactInfoChanged(contactMedium)\\\"\\r\\n        />\\r\\n\\r\\n        <div class=\\\"input-group-append\\\">\\r\\n          <div class=\\\"input-group-text bg-ssn text-white\\\">\\r\\n            <input type=\\\"radio\\\" id=\\\"{{i}}\\\" name=\\\"preferredRadios\\\" [value]=\\\"true\\\" [(ngModel)]=\\\"selectedContactModels[i].isPreferred\\\" \\r\\n              (ngModelChange)=\\\"preferredSet(selectedContactModels[i])\\\" [checked]=\\\"selectedContactModels[i].isPreferred\\\" >\\r\\n            <label class=\\\"form-check-label\\\" for=\\\"{{i}}\\\">Preferred</label>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</ssn-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/contact-select/contact-select.component.html\n// module id = ./src/app/shared/components/contact-select/contact-select.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContactModel } from '../../models/contact-model';\r\nimport { ConstantsService } from '../../services/constants.service';\r\nimport { ContactService } from '../../services/contact.service';\r\n\r\n@Component({\r\n  selector: 'app-contact-select',\r\n  templateUrl: './contact-select.component.html',\r\n  styleUrls: ['./contact-select.component.css'],\r\n  providers: [ConstantsService]\r\n})\r\nexport class ContactSelectComponent implements OnInit {\r\n\r\n  contactList: ContactModel[];\r\n\r\n  selectedContactModels: ContactModel[];\r\n\r\n  constructor(private constantsService: ConstantsService, private contactService: ContactService) { }\r\n\r\n  ngOnInit() {\r\n    this.constantsService.getContactMediumList().subscribe(\r\n      data => {\r\n        if (data) this.contactList = data.map(d => {\r\n          let contactModel = new ContactModel();\r\n          contactModel.contactMedium = d;\r\n          return contactModel;\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  preferredSet(selectedContactModel: ContactModel) {\r\n    let newUpdatedContactMediums = this.selectedContactModels.map(\r\n      oldContactModel => {\r\n        if (oldContactModel.contactMedium.contactMediumId === selectedContactModel.contactMedium.contactMediumId) return selectedContactModel;\r\n        let updatedContactModel = oldContactModel;\r\n        updatedContactModel.isPreferred = false;\r\n        return updatedContactModel\r\n      }\r\n    );\r\n  }\r\n\r\n  contactMediumSelected() {\r\n    this.contactService.setContactData(this.selectedContactModels);\r\n  }\r\n\r\n  contactInfoChanged(contactMedium: ContactModel) {\r\n    this.contactService.setContactData(this.selectedContactModels);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/contact-select/contact-select.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-info-table/location-info-table.component.css\n// module id = ./src/app/shared/components/location-info-table/location-info-table.component.css\n// module chunks = main","module.exports = \"<table-card header=\\\"Location Information\\\" icon=\\\"location.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"locationFlag\\\" src=\\\"assets/images/Flags/128x128/{{locationFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of locationInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <div *ngIf=\\\"entry.data\\\">{{ entry.data }}</div>\\r\\n          <div *ngIf=\\\"!entry.data\\\" class=\\\"font-italic\\\">Not provided.</div>\\r\\n        </tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-info-table/location-info-table.component.html\n// module id = ./src/app/shared/components/location-info-table/location-info-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LocationProperties } from '../../constants/location-properties';\r\nimport { LocationService } from '../../services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-location-info-table',\r\n  templateUrl: './location-info-table.component.html',\r\n  styleUrls: ['./location-info-table.component.css']\r\n})\r\nexport class LocationInfoTableComponent implements OnInit {\r\n\r\n  locationFlag: string;\r\n  locationProperties = LocationProperties.PROPERTIES;\r\n  locationInfo: any[] = [];\r\n\r\n  constructor(private locationService: LocationService) { }\r\n  ngOnInit() {\r\n    this.locationProperties = LocationProperties.PROPERTIES;\r\n    this.locationService.locationData$.subscribe(\r\n      locationResult => {\r\n        if (locationResult) {\r\n          this.locationFlag = (locationResult.country) ? locationResult.country.twoCharCode.toLowerCase() : null;\r\n          this.locationProperties.COUNTRY.data = (locationResult.country) ? locationResult.country.name : null;\r\n          this.locationProperties.LOCATION_TYPE.data = locationResult.location.locationType.name;\r\n          this.locationProperties.LOCATION_NAME.data = locationResult.location.name;\r\n          this.locationProperties.LOCATION_CODE.data = locationResult.location.locationCode;\r\n        }\r\n        this.locationInfo = Object.values(this.locationProperties);\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-info-table/location-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.css\n// module id = ./src/app/shared/components/location-time-info-table/location-time-info-table.component.css\n// module chunks = main","module.exports = \"<table-card header=\\\"Location Information\\\" icon=\\\"location.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"locationFlag\\\" src=\\\"assets/images/Flags/128x128/{{locationFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of locationTimeInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr *ngIf=\\\"entry.data\\\">\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.html\n// module id = ./src/app/shared/components/location-time-info-table/location-time-info-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { LocationTimeProperties } from '../../constants/location-time-properties';\r\nimport { PortCallService } from '../../services/port-call.service';\r\n\r\n@Component({\r\n  selector: 'app-location-time-info-table',\r\n  templateUrl: './location-time-info-table.component.html',\r\n  styleUrls: ['./location-time-info-table.component.css']\r\n})\r\nexport class LocationTimeInfoTableComponent implements OnInit {\r\n\r\n  locationFlag: string;\r\n  locationTimeProperties = LocationTimeProperties.PROPERTIES;\r\n  locationTimeInfo: any[] = [];\r\n\r\n  constructor(private portCallService: PortCallService) { }\r\n  ngOnInit() {\r\n    this.locationTimeProperties = LocationTimeProperties.PROPERTIES;\r\n    this.portCallService.locationData$.subscribe(\r\n      locationResult => {\r\n        if (locationResult) {\r\n          this.locationFlag = (locationResult.country) ? locationResult.country.twoCharCode.toLowerCase() : null;\r\n          this.locationTimeProperties.LOCATION_TYPE.data = locationResult.location.locationType.name;\r\n          this.locationTimeProperties.LOCATION_NAME.data = locationResult.location.name;\r\n          this.locationTimeProperties.LOCATION_CODE.data = locationResult.location.locationCode;\r\n\r\n          this.portCallService.etaEtdData$.subscribe(\r\n            timeResult => {\r\n              if (timeResult) {\r\n                this.locationTimeProperties.ETA.data = this.dateTimeFormat(timeResult.eta);\r\n                this.locationTimeProperties.ETD.data = this.dateTimeFormat(timeResult.etd);\r\n              }\r\n            }\r\n          );\r\n        }\r\n        this.locationTimeInfo = Object.values(this.locationTimeProperties);\r\n      }\r\n    );\r\n\r\n\r\n  }\r\n\r\n  private dateTimeFormat(time) {\r\n    return time.year + \"-\" + this.twoDigitFormat(time.month) + \"-\" + this.twoDigitFormat(time.day)\r\n      + \" \" + this.twoDigitFormat(time.hour) + \":\" + this.twoDigitFormat(time.minute);\r\n  }\r\n\r\n  private twoDigitFormat(number: number) {\r\n    if (number <= 9) {\r\n      return \"0\" + number;\r\n    } else {\r\n      return number;\r\n    }\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/location-time-info-table/location-time-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-harbour/search-harbour.component.css\n// module id = ./src/app/shared/components/search-harbour/search-harbour.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img src=\\\"assets/images/Flags/128x128/{{r.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.location.name\\\">Name: </strong> {{ r.location.name }}\\r\\n  <strong *ngIf=\\\"r.location.locationCode\\\">Code: </strong> {{ r.location.locationCode }}\\r\\n</ng-template>\\r\\n\\r\\n<div *ngIf=\\\"!locationSelected\\\" class=\\\"text-center\\\">\\r\\n  <label for=\\\"search-location\\\">Search using location name or UN/LOCODE code</label>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input id=\\\"search-location\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"locationModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n        [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectLocation($event)\\\" placeholder=\\\"Enter search here...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <div *ngIf=\\\"searching\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/location.gif\\\" height=\\\"32px\\\">\\r\\n        <p>Searching</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searchFailed\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n        <p>No results</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-harbour/search-harbour.component.html\n// module id = ./src/app/shared/components/search-harbour/search-harbour.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { LocationService } from '../../services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-search-harbour',\r\n  templateUrl: './search-harbour.component.html',\r\n  styleUrls: ['./search-harbour.component.css']\r\n})\r\nexport class SearchHarbourComponent implements OnInit {\r\n\r\n  locationModel: any;\r\n  locationSelected = false;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);\r\n\r\n  constructor(private locationService: LocationService) { }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap((term) => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2)\r\n      }),\r\n      switchMap(term =>\r\n        this.locationService.searchHarbour(term).pipe(\r\n          tap(() => this.searchFailed = false),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ),\r\n      tap((res) => {\r\n        this.searching = false;\r\n        this.searchFailed = (this.locationModel.length >= 2 && res.length === 0);\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    );\r\n  formatter = (x: { locationId: string }) => x.locationId;\r\n\r\n  selectLocation($event) {\r\n    this.locationSelected = true;\r\n    this.locationModel = $event.item;\r\n    this.locationService.setLocationData(this.locationModel);\r\n  }\r\n\r\n  deselectLocation() {\r\n    this.locationSelected = false;\r\n    this.locationService.setLocationData(null);\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.locationService.setLocationData(null);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-harbour/search-harbour.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-location/search-location.component.css\n// module id = ./src/app/shared/components/search-location/search-location.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img src=\\\"assets/images/Flags/128x128/{{r.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.location.name\\\">Name: </strong> {{ r.location.name }}\\r\\n  <strong *ngIf=\\\"r.location.locationCode\\\">Code: </strong> {{ r.location.locationCode }}\\r\\n</ng-template>\\r\\n\\r\\n<div *ngIf=\\\"!locationSelected\\\" class=\\\"text-center\\\">\\r\\n  <label for=\\\"search-location\\\">Search using location name or UN/LOCODE code</label>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input id=\\\"search-location\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"locationModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n        [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectLocation($event)\\\" placeholder=\\\"Enter search here...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <div *ngIf=\\\"searching\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/location.gif\\\" height=\\\"32px\\\">\\r\\n        <p>Searching</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searchFailed\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n        <p>No results</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-location/search-location.component.html\n// module id = ./src/app/shared/components/search-location/search-location.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { LocationService } from '../../services/location.service';\r\n\r\n@Component({\r\n  selector: 'app-search-location',\r\n  templateUrl: './search-location.component.html',\r\n  styleUrls: ['./search-location.component.css']\r\n})\r\nexport class SearchLocationComponent implements OnInit {\r\n\r\n  locationModel: any;\r\n  locationSelected = false;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);\r\n\r\n  constructor(private locationService: LocationService) { }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap((term) => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2)\r\n      }),\r\n      switchMap(term =>\r\n        this.locationService.search(term).pipe(\r\n          tap(() => this.searchFailed = false),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ),\r\n      tap((res) => {\r\n        this.searching = false;\r\n        this.searchFailed = (this.locationModel.length >= 2 && res.length === 0);\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    );\r\n  formatter = (x: { locationId: string }) => x.locationId;\r\n\r\n  selectLocation($event) {\r\n    this.locationSelected = true;\r\n    this.locationModel = $event.item;\r\n    this.locationService.setLocationData(this.locationModel);\r\n  }\r\n\r\n  deselectLocation() {\r\n    this.locationSelected = false;\r\n    this.locationService.setLocationData(null);\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.locationService.setLocationData(null);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-location/search-location.component.ts","module.exports = \"::-webkit-input-placeholder { \\r\\n    font-style: italic; \\r\\n } \\r\\n :-moz-placeholder { \\r\\n    font-style: italic;   \\r\\n } \\r\\n ::-moz-placeholder { \\r\\n    font-style: italic;   \\r\\n } \\r\\n :-ms-input-placeholder {   \\r\\n    font-style: italic;  \\r\\n }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-organization/search-organization.component.css\n// module id = ./src/app/shared/components/search-organization/search-organization.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card-body\\\">\\r\\n  <ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n    <strong *ngIf=\\\"r.name\\\">Name: </strong> {{ r.name }}\\r\\n    <strong *ngIf=\\\"r.organizationNo\\\">Org.no.: </strong> {{ r.organizationNo }}\\r\\n  </ng-template>\\r\\n\\r\\n  <div *ngIf=\\\"!organizationSelected\\\" class=\\\"text-center\\\">\\r\\n    <label for=\\\"search-organization\\\">Search using organization name or organization number</label>\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\"></div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <input id=\\\"search-organization\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"organizationModel\\\"\\r\\n          [ngbTypeahead]=\\\"search\\\" [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectOrganization($event)\\\"\\r\\n          placeholder=\\\"Enter search here...\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <div *ngIf=\\\"searching\\\">\\r\\n          <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/pax.gif\\\" height=\\\"32px\\\">\\r\\n          <p>Searching</p>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"searchFailed\\\">\\r\\n          <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n          <p>No results</p>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-organization/search-organization.component.html\n// module id = ./src/app/shared/components/search-organization/search-organization.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\nimport 'rxjs/add/operator/map';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { OrganizationService } from '../../services/organization.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-search-organization',\r\n  templateUrl: './search-organization.component.html',\r\n  styleUrls: ['./search-organization.component.css'],\r\n})\r\nexport class SearchOrganizationComponent implements OnInit {\r\n\r\n  organizationModel: any;\r\n  organizationSelected = false;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);\r\n\r\n  constructor(private organizationService: OrganizationService) { }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap((term) => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2)\r\n      }),\r\n      switchMap(term =>\r\n        this.organizationService.search(term).pipe(\r\n          tap(() => this.searchFailed = false),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ),\r\n      tap((res) => {\r\n        this.searching = false;\r\n        this.searchFailed = (this.organizationModel.length >= 2 && res.length === 0);\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    );\r\n\r\n  formatter = (x: { organizationId: string }) => x.organizationId;\r\n\r\n  selectOrganization($event) {\r\n    this.organizationSelected = true;\r\n    this.organizationModel = $event.item;\r\n    this.organizationService.setOrganizationData(this.organizationModel);\r\n  }\r\n\r\n  deselectOrganization() {\r\n    this.organizationSelected = false;\r\n    this.organizationService.setOrganizationData(null);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.organizationService.setOrganizationData(null);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-organization/search-organization.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship/search-ship.component.css\n// module id = ./src/app/shared/components/search-ship/search-ship.component.css\n// module chunks = main","module.exports = \"<ng-template #rt let-r=\\\"result\\\" let-t=\\\"term\\\">\\r\\n  <img src=\\\"assets/images/Flags/128x128/{{r.country.twoCharCode.toLowerCase()}}.png\\\" height=\\\"16px\\\" />\\r\\n  <strong *ngIf=\\\"r.ship.name\\\">Name: </strong> {{ r.ship.name }}\\r\\n  <strong *ngIf=\\\"r.ship.callSign\\\"> Call sign: </strong> {{ r.ship.callSign }}\\r\\n  <strong *ngIf=\\\"r.ship.imoNo\\\"> IMO number: </strong> {{ r.ship.imoNo }}\\r\\n  <strong *ngIf=\\\"r.ship.mmsiNo\\\"> MMSI number: </strong> {{ r.ship.mmsiNo }}\\r\\n</ng-template>\\r\\n\\r\\n<div *ngIf=\\\"!shipSelected\\\" class=\\\"text-center\\\">\\r\\n  <label for=\\\"search-ship\\\">Search using ship name, call sign, IMO number or MMSI number</label>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <div class=\\\"col-8\\\">\\r\\n      <input id=\\\"search-ship\\\" type=\\\"text\\\" class=\\\"form-control form-control-sm mx-auto\\\" [(ngModel)]=\\\"shipModel\\\" [ngbTypeahead]=\\\"search\\\"\\r\\n        [resultTemplate]=\\\"rt\\\" [inputFormatter]=\\\"formatter\\\" (selectItem)=\\\"selectShip($event)\\\" placeholder=\\\"Enter search here...\\\"\\r\\n      />\\r\\n    </div>\\r\\n    <div class=\\\"col-2\\\">\\r\\n      <div *ngIf=\\\"searching\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/animations/ship.gif\\\" height=\\\"32px\\\">\\r\\n        <p>Searching</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"searchFailed\\\">\\r\\n        <img class=\\\"mx-auto\\\" src=\\\"assets/images/VoyageIcons/128x128/cancel.png\\\" height=\\\"32px\\\">\\r\\n        <p>No results</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/search-ship/search-ship.component.html\n// module id = ./src/app/shared/components/search-ship/search-ship.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, debounceTime, distinctUntilChanged, merge, switchMap, tap } from 'rxjs/operators';\r\nimport { ShipService } from '../../services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-search-ship',\r\n  templateUrl: './search-ship.component.html',\r\n  styleUrls: ['./search-ship.component.css']\r\n})\r\nexport class SearchShipComponent implements OnInit {\r\n\r\n  shipModel: any;\r\n  shipSelected = false;\r\n\r\n  searching = false;\r\n  searchFailed = false;\r\n  hideSearchingWhenUnsubscribed = new Observable(() => () => this.searching = false);\r\n\r\n  constructor(private shipService: ShipService) { }\r\n\r\n  search = (text$: Observable<string>) =>\r\n    text$.pipe(\r\n      debounceTime(150),\r\n      distinctUntilChanged(),\r\n      tap((term) => {\r\n        this.searchFailed = false;\r\n        this.searching = (term.length >= 2)\r\n      }),\r\n      switchMap(term =>\r\n        this.shipService.search(term).pipe(\r\n          tap(() => this.searchFailed = false),\r\n          catchError(() => {\r\n            this.searchFailed = true;\r\n            return of([]);\r\n          }))\r\n      ),\r\n      tap((res) => {\r\n        this.searching = false;\r\n        this.searchFailed = (this.shipModel.length >= 2 && res.length === 0);\r\n      }),\r\n      merge(this.hideSearchingWhenUnsubscribed)\r\n    );\r\n  formatter = (x: { shipId: string }) => x.shipId;\r\n\r\n  selectShip($event) {\r\n    this.shipSelected = true;\r\n    this.shipModel = $event.item;\r\n    this.shipService.setShipOverviewData(this.shipModel);\r\n  }\r\n\r\n  deselectShip() {\r\n    this.shipSelected = false;\r\n    this.shipService.setShipOverviewData(null);\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n    this.shipService.setShipOverviewData(null);\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/search-ship/search-ship.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css\n// module id = ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.css\n// module chunks = main","module.exports = \"<div class=\\\"table-responsive\\\">\\r\\n  <table class=\\\"table table-bordered\\\">\\r\\n    <thead>\\r\\n      <tr class=\\\"bg-ssn text-ssn\\\">\\r\\n        <th colspan=3>Selected Contact Mediums</th>\\r\\n      </tr>\\r\\n    </thead>\\r\\n    <tbody class=\\\"text-left\\\">\\r\\n      <tr *ngFor=\\\"let contactModel of selectedContactModels\\\">\\r\\n        <td class=\\\"bg-ssn text-ssn\\\">{{ contactModel.contactMedium.contactMediumType }}</td>\\r\\n        <td [attr.colspan]=\\\"!contactModel.isPreferred ? 2 : null\\\">{{ contactModel.contactValue ? contactModel.contactValue : 'Value not set' }}</td>\\r\\n        <td *ngIf=\\\"contactModel.isPreferred\\\">Preferred</td>\\r\\n      </tr>\\r\\n    </tbody>\\r\\n  </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html\n// module id = ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ContactModel } from '../../models/contact-model';\r\nimport { ContactService } from '../../services/contact.service';\r\n\r\n@Component({\r\n  selector: 'app-selected-contact-mediums',\r\n  templateUrl: './selected-contact-mediums.component.html',\r\n  styleUrls: ['./selected-contact-mediums.component.css']\r\n})\r\nexport class SelectedContactMediumsComponent implements OnInit {\r\n  \r\n  selectedContactModels: ContactModel[];\r\n\r\n  constructor(private contactService: ContactService) { }\r\n\r\n  ngOnInit() {\r\n    this.contactService.contactData$.subscribe(\r\n      data => {\r\n        if (data) {\r\n          this.selectedContactModels = data;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/selected-contact-mediums/selected-contact-mediums.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.css\n// module id = ./src/app/shared/components/ship-info-table/ship-info-table.component.css\n// module chunks = main","module.exports = \"<table-card header=\\\"Ship Information\\\" icon=\\\"ship.png\\\">\\r\\n  <tbody>\\r\\n    <tr>\\r\\n      <td>\\r\\n        <img *ngIf=\\\"shipFlag\\\" src=\\\"assets/images/Flags/128x128/{{shipFlag | lowercase}}.png\\\" class=\\\"my-2\\\" height=\\\"32px\\\">\\r\\n      </td>\\r\\n      <td *ngFor=\\\"let entry of shipInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}:</small>\\r\\n        </tr>\\r\\n        <tr *ngIf=\\\"entry.data\\\">{{ entry.data }}</tr>\\r\\n        <tr *ngIf=\\\"!entry.data\\\">\\r\\n          <div class=\\\"font-italic\\\">Not provided.</div>\\r\\n        </tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table-card>\\r\\n<table-card header=\\\"Ship Contact Information\\\" icon=\\\"contact.png\\\" collapsible=true>\\r\\n  <tbody *ngIf=\\\"shipHasContactInfo\\\">\\r\\n    <tr>\\r\\n      <td *ngFor=\\\"let entry of shipContactInfo\\\" class=\\\"no-wrap px-1 mx-1\\\">\\r\\n        <tr>\\r\\n          <small>{{ entry.description }}\\r\\n            <span *ngIf=\\\"entry.isPreferred\\\"> (preferred)</span>\\r\\n          </small>\\r\\n        </tr>\\r\\n        <tr>{{ entry.data }}</tr>\\r\\n      </td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n  <tbody class=\\\"text-center\\\" *ngIf=\\\"!shipHasContactInfo\\\">\\r\\n    <div class=\\\"my-3\\\">\\r\\n      <img src=\\\"assets/images/VoyageIcons/128x128/white/warning.png\\\" height=\\\"24px\\\">\\r\\n      <span>No contact information for this ship has been provided.</span>\\r\\n    </div>\\r\\n  </tbody>\\r\\n</table-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.html\n// module id = ./src/app/shared/components/ship-info-table/ship-info-table.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\r\nimport { ShipProperties } from '../../constants/ship-properties';\r\nimport { ConstantsService } from '../../services/constants.service';\r\nimport { ShipService } from '../../services/ship.service';\r\n\r\n@Component({\r\n  selector: 'app-ship-info-table',\r\n  templateUrl: './ship-info-table.component.html',\r\n  styleUrls: ['./ship-info-table.component.css']\r\n})\r\nexport class ShipInfoTableComponent implements OnInit {\r\n\r\n  shipFlag: string;\r\n  contactMediumList: any;\r\n  shipHasContactInfo: boolean;\r\n  shipContactInfo: any[] = [];\r\n\r\n  shipProperties: any = ShipProperties.PROPERTIES;\r\n  shipInfo: any[];\r\n\r\n  constructor(private shipService: ShipService, private constantsService: ConstantsService) { }\r\n\r\n  ngOnInit() {\r\n    this.shipHasContactInfo = false;\r\n    this.shipService.shipOverviewData$.subscribe(\r\n      shipResult => {\r\n        if (shipResult) {\r\n          if (shipResult.country) this.shipFlag = shipResult.country.twoCharCode.toLowerCase();\r\n          if (shipResult.shipType) this.shipProperties.SHIP_TYPE.data = shipResult.shipType.name;\r\n          if (shipResult.shipStatus) this.shipProperties.SHIP_STATUS.data = shipResult.shipStatus.name;\r\n          this.shipProperties.SHIP_NAME.data = shipResult.ship.name;\r\n          this.shipProperties.CALL_SIGN.data = shipResult.ship.callSign;\r\n          this.shipProperties.IMO_NO.data = shipResult.ship.imoNo;\r\n          this.shipProperties.MMSI_NO.data = shipResult.ship.mmsiNo;\r\n          this.shipProperties.GROSS_TONNAGE.data = shipResult.ship.grossTonnage;\r\n          this.shipProperties.LENGTH.data = shipResult.ship.length;\r\n\r\n          this.constantsService.getContactMediumList().subscribe(\r\n            contactResult => {\r\n              if (contactResult) {\r\n                this.contactMediumList = contactResult;\r\n                if (contactResult && shipResult.contactList != null && shipResult.contactList.length > 0) {\r\n                  this.shipHasContactInfo = true;\r\n                  this.contactMediumList.forEach(contactMedium => {\r\n                    let value = shipResult.contactList.find(shipCM => shipCM.contactMediumId == contactMedium.contactMediumId);\r\n                    if (value) {\r\n                      this.shipContactInfo.push({ description: contactMedium.contactMediumType + \":\", data: value.contactValue, isPreferred: value.isPreferred })\r\n                    }\r\n                  });\r\n                }\r\n              }\r\n            }\r\n          );\r\n        } else {\r\n          this.shipFlag = null;\r\n          this.shipProperties = ShipProperties.PROPERTIES;\r\n        }\r\n        this.shipInfo = Object.values(this.shipProperties);\r\n      }\r\n    );\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ship-info-table/ship-info-table.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-card/ssn-card.component.css\n// module id = ./src/app/shared/components/ssn-card/ssn-card.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card ssn-card text-center my-2\\\">\\r\\n  <div class=\\\"card-header bg-ssn text-ssn\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-2\\\">\\r\\n        <img *ngIf=\\\"icon\\\" src=\\\"{{iconPath}}{{icon}}\\\" height=\\\"32px\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"col-8\\\">\\r\\n        <h4>{{header}}</h4>\\r\\n      </div>\\r\\n      <div class=\\\"col-2\\\" *ngIf=\\\"collapsible\\\">\\r\\n        <button class=\\\"btn btn-sm btn-outline-light\\\" (click)=\\\"changeState()\\\">\\r\\n          <img src=\\\"{{iconPath}}{{collapsedIcon}}\\\" height=\\\"24px\\\" class=\\\"clickable\\\">\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"card-body text-left\\\" *ngIf=\\\"!collapsed\\\">\\r\\n    <ng-content></ng-content>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/ssn-card/ssn-card.component.html\n// module id = ./src/app/shared/components/ssn-card/ssn-card.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ssn-card',\r\n  templateUrl: './ssn-card.component.html',\r\n  styleUrls: ['./ssn-card.component.css']\r\n})\r\nexport class SsnCardComponent implements OnInit {\r\n\r\n  iconPath = \"assets/images/VoyageIcons/128x128/white/\";\r\n\r\n  @Input()\r\n  icon: string;\r\n\r\n  @Input()\r\n  header: string;\r\n\r\n  @Input()\r\n  collapsible: boolean;\r\n\r\n  collapsed: boolean = false;\r\n  collapsedIcon: string = \"arrowhead-down.png\"\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  changeState() {\r\n    this.collapsed = !this.collapsed;\r\n    this.collapsedIcon = this.collapsed ? \"arrowhead-left.png\" : \"arrowhead-down.png\";\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/ssn-card/ssn-card.component.ts","module.exports = \".table-card-header-bg {\\r\\n    background-color: #344d6e;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/table-card/table-card.component.css\n// module id = ./src/app/shared/components/table-card/table-card.component.css\n// module chunks = main","module.exports = \"<div class=\\\"border border-white table-card-header-bg p-1\\\">\\r\\n  <div class=\\\"row text-center text-white px-4\\\" [ngClass]=\\\"{clickable: collapsible}\\\" (click)=\\\"collapsible ? changeState() : null\\\">\\r\\n    <div class=\\\"d-table-cell mr-auto\\\">\\r\\n      <img *ngIf=\\\"icon\\\" src=\\\"{{iconPath}}{{icon}}\\\" height=\\\"24px\\\" />\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell m-auto\\\">\\r\\n      <span>{{ header }}</span>\\r\\n    </div>\\r\\n    <div class=\\\"d-table-cell ml-auto\\\">\\r\\n      <button *ngIf=\\\"collapsible\\\" class=\\\"btn btn-sm btn-outline-light\\\">\\r\\n        <img src=\\\"{{iconPath}}{{collapsedIcon}}\\\" height=\\\"16px\\\">\\r\\n      </button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"!collapsed\\\" class=\\\"table-responsive border-bottom border-left border-right border-white text-white\\\">\\r\\n  <table class=\\\"table mb-0\\\">\\r\\n    <ng-content></ng-content>\\r\\n  </table>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/shared/components/table-card/table-card.component.html\n// module id = ./src/app/shared/components/table-card/table-card.component.html\n// module chunks = main","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'table-card',\r\n  templateUrl: './table-card.component.html',\r\n  styleUrls: ['./table-card.component.css']\r\n})\r\nexport class TableCardComponent implements OnInit {\r\n\r\n  iconPath = \"assets/images/VoyageIcons/128x128/white/\";\r\n\r\n  @Input()\r\n  icon: string;\r\n\r\n  @Input()\r\n  header: string;\r\n\r\n  @Input()\r\n  collapsible: boolean;\r\n\r\n  @Input()\r\n  collapsed: boolean;\r\n\r\n  collapsedIcon: string;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    if (this.collapsed == null) {\r\n      this.collapsed = false;\r\n    }\r\n    this.collapsedIcon = this.collapsed ? \"arrowhead-left.png\" : \"arrowhead-down.png\";\r\n  }\r\n\r\n  changeState() {\r\n    this.collapsed = !this.collapsed;\r\n    this.collapsedIcon = this.collapsed ? \"arrowhead-left.png\" : \"arrowhead-down.png\";\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/components/table-card/table-card.component.ts","const CONTENT_NAMES = {\r\n    REGISTER_USER: \"USERS\",\r\n    VIEW_SHIPS: \"SHIPS\",\r\n    REGISTER_SHIP: \"Register Ship\",\r\n    LOCATIONS: \"LOCATIONS\",\r\n    REGISTER_LOCATION: \"Register Location\",\r\n    VIEW_ORGANIZATIONS: \"ORGANIZATIONS\",\r\n    REGISTER_ORGANIZATION: \"Register Organization\",\r\n\r\n    VIEW_PORT_CALLS: \"PORT CALL\",\r\n    REGISTER_PORT_CALL_DRAFT: \"Register Port Call Draft\",\r\n    REGISTER_PORT_CALL: \"Register Port Call\",\r\n    VIEW_PORT_CALL: \"View Port Call\",\r\n    PORT_CALL_CLEARANCE: \"Port Call Clearance\"\r\n}\r\n\r\nexport { CONTENT_NAMES };\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/content-names.ts","export class LocationProperties {\r\n    static PROPERTIES = {\r\n        COUNTRY: { description: \"Country\", data: null },\r\n        LOCATION_NAME: { description: \"Name\", data: null },\r\n        LOCATION_CODE: { description: \"Location Code\", data: null },\r\n        LOCATION_TYPE: { description: \"Type\", data: null },\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/location-properties.ts","export class LocationTimeProperties {\r\n    static PROPERTIES = {\r\n        LOCATION_NAME: { description: \"Location Name\", data: null },\r\n        LOCATION_CODE: { description: \"Location Code\", data: null },\r\n        LOCATION_TYPE: { description: \"Location Type\", data: null },\r\n        ETA: { description: \"ETA\", data: null },\r\n        ETD: { description: \"ETD\", data: null }\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/location-time-properties.ts","export class MenuClaims {\r\n    static TYPE = \"Menu\";\r\n    static PERMISSIONS = {\r\n        \"PORT CALL\": false,\r\n        \"USERS\": false,\r\n        \"SHIPS\": false,\r\n        \"ORGANIZATIONS\": false,\r\n        \"LOCATIONS\": false\r\n    };\r\n    static PORT_CALL = \"PORT CALL\";\r\n    static USERS = \"USERS\";\r\n    static SHIPS = \"SHIPS\";\r\n    static ORGANIZATIONS = \"ORGANIZATIONS\";\r\n    static LOCATIONS = \"LOCATIONS\";\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/menu-claims.ts","export class OrganizationProperties {\r\n    static PROPERTIES = {\r\n        ORGANIZATION_NAME: { description: \"Organization Name\", data: null },\r\n        ORGANIZATION_NO: { description: \"Organization No.\", data: null },\r\n        ORGANIZATION_TYPE: { description: \"Type\", data: null },\r\n        ORGANIZATION_DESCRIPTION: { description: \"Description\", data: null },\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/organization-properties.ts","export class OrganizationTypes {\r\n    static GOVERNMENT_AGENCY_STRING = \"Government Agency\";\r\n    static COMPANY_STRING = \"Company\";\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/organization-types.ts","export class PortCallClaims {\r\n    static TYPE = \"Port Call\";\r\n    static buttonRowPermissions = {\r\n        view: false,\r\n        edit: false,\r\n        clearance: false,\r\n        cancel: false,\r\n        delete: false\r\n    }\r\n    static portCallPermissions = {\r\n        register: false,\r\n        edit: false,\r\n        clearance: false\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/port-call-claims.ts","export class PortCallStatusTypes {\r\n    static ACTIVE = \"Active\";\r\n    static DRAFT = \"Draft\";\r\n    static CANCELLED = \"Cancelled\";\r\n    static COMPLETED = \"Completed\";\r\n\r\n    static DRAFT_ID = 100235;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/port-call-status-types.ts","export class ShipProperties {\r\n    static PROPERTIES = {\r\n        SHIP_NAME: { description: \"Ship Name\", data: null },\r\n        CALL_SIGN: { description: \"Call Sign\", data: null },\r\n        IMO_NO: { description: \"IMO no.\", data: null },\r\n        MMSI_NO: { description: \"MMSI no.\", data: null },\r\n        GROSS_TONNAGE: { description: \"Gross Tonnage\", data: null },\r\n        LENGTH: { description: \"Length\", data: null },\r\n        SHIP_TYPE: { description: \"Ship Type\", data: null },\r\n        SHIP_STATUS: { description: \"Ship Status\", data: null },\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/constants/ship-properties.ts","export class ClearanceModel {\r\n    organizationPortCallId: number;\r\n    organizationId: number;\r\n    portCallId: number;\r\n    remark: string;\r\n    cleared: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/clearance-model.ts","import { ContactMediumModel } from \"./contact-medium-model\";\r\n\r\nexport class ContactModel {\r\n    // class properties\r\n    contactMediumId: number;\r\n    contactValue: string;\r\n    isPreferred: boolean;\r\n    comments: string;\r\n    \r\n    // internal models\r\n    contactMedium: ContactMediumModel;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/contact-model.ts","export class LocationModel {\r\n    locationId: number;\r\n    locationInLocationId: number;\r\n    countryId: number;\r\n    locationTypeId: number;\r\n    locationSourceId: number;\r\n    municipalityId: number;\r\n    locationCode: string;\r\n    locationNo: number;\r\n    postCode: string;\r\n    name: string;\r\n    country: any;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/location-model.ts","export class OrganizationModel {\r\n    organizationId: number;\r\n    name: string;\r\n    invoiceReceiverNo: number;\r\n    organizationNo: string;\r\n    description: string;\r\n    isActive: boolean;\r\n    organizationTypeId: number;\r\n    imoCompanyNumber: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/organization-model.ts","export class PortCallDetailsModel {\r\n    portCallDetailsId: number;\r\n    portCallId: number;\r\n    numberOfCrew: number;\r\n    numberOfPassengers: number;\r\n    actualDraught: number;\r\n    airDraught: number;\r\n    reportingHazmat: boolean;\r\n    reportingBunkers: boolean;\r\n    reportingCargo: boolean;\r\n    reportingShipStores: boolean;\r\n    reportingCrew: boolean;\r\n    reportingPax: boolean;\r\n    reportingWaste: boolean;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-details-model.ts","import { EtaEtdDateTime } from './eta-etd-interface';\r\nimport { EtaEtdModel } from './eta-etd-model';\r\nimport { DatePipe } from '@angular/common';\r\n\r\nexport class PortCallModel {\r\n    portCallId: number;\r\n    nextLocationId: number;\r\n    previousLocationId: number;\r\n    locationId: number;\r\n    shipId: number;\r\n    portCallStatusId: number;\r\n    remark: string;\r\n    previousLocationEtd: Date;\r\n    previousLocationAtd: Date;\r\n    locationEtd: Date;\r\n    locationAtd: Date;\r\n    locationEta: Date;\r\n    locationAta: Date;\r\n    nextLocationEta: Date;\r\n    nextLocationAta: Date;\r\n    userId: number;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/port-call-model.ts","import { ContactModel } from \"./contact-model\";\r\nimport { ShipModel } from \"./ship-model\";\r\n\r\nexport class ShipContactModel {\r\n    shipContactId: number;\r\n    contactMediumId: number;\r\n    shipId: number;\r\n    contactValue: string;\r\n    isPreferred: boolean;\r\n    comments: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-contact-model.ts","export class ShipModel {\r\n    shipId: number;\r\n    shipHullTypeId: number;\r\n    shipStatusId: number;\r\n    shipPowerTypeId: number;\r\n    shipBreadthTypeId: number;\r\n    shipLengthTypeId: number;\r\n    shipSourceId: number;\r\n    shipFlagCodeId: number;\r\n    organizationId: number;\r\n    shipTypeId: number;\r\n    imoNo: number;\r\n    yearOfBuild: number;\r\n    mmsiNo: number;\r\n    name: string;\r\n    callSign: string;\r\n    deadweightTonnage: number;\r\n    grossTonnage: number;\r\n    length: number;\r\n    breadth: number;\r\n    power: number;\r\n    height: number;\r\n    draught: number;\r\n    hasSideThrusters: boolean;\r\n    hasSideThrustersFront: boolean;\r\n    hasSideThrustersBack: boolean;\r\n    remark: string;\r\n    certificateOfRegistryId: number;\r\n    inmarsatCallNumber: string;\r\n    dateOfKeelLaying: Date;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/ship-model.ts","export class UserModel {\r\n    email: string;\r\n    phoneNumber: string;\r\n    firstName: string;\r\n    lastName: string;\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/models/user-model.ts","import { Injectable } from \"@angular/core\";\r\nimport { Headers, Http, RequestOptions } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { UserModelWithPassword } from \"../models/UserModelWithPassword\";\r\nimport { UserModel } from \"../models/user-model\";\r\nimport { BaseRequest } from \"../utils/base.request\";\r\nimport { ConfigService } from \"../utils/config.service\";\r\nimport { AuthRequest } from \"./auth.request.service\";\r\n\r\n\r\n@Injectable()\r\nexport class AccountService extends BaseRequest {\r\n    // URLs\r\n    private accountBaseUrl = \"/account\";\r\n    private actionUrl: string;\r\n    private registerUserUrl: string;\r\n    private userUrl: string;\r\n    private rolesUrl: string;\r\n    private organizationForUserUrl: string;\r\n    // Request headers & options\r\n    private authorizationHeaders: Headers;\r\n    private requestOptions: RequestOptions;\r\n    // Subjects & observables\r\n    private userClaimsDataSource = new BehaviorSubject<any>(null);\r\n    userClaimsData$ = this.userClaimsDataSource.asObservable();\r\n\r\n    private userOrganizationDataSource = new BehaviorSubject<any>(null);\r\n    userOrganizationData$ = this.userOrganizationDataSource.asObservable();\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private authRequestService: AuthRequest,\r\n        configService: ConfigService\r\n    ) {\r\n        super(configService);\r\n\r\n        this.actionUrl = this.baseUrl + this.accountBaseUrl;\r\n        this.userUrl = this.actionUrl + \"/user\";\r\n\r\n        this.rolesUrl = this.actionUrl + \"/roles\";\r\n    }\r\n\r\n    getAllRoles() {\r\n        var auth_headers = this.authRequestService.GetHeaders();\r\n        let options = new RequestOptions({ headers: auth_headers })\r\n        return this.http.get(this.rolesUrl, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getUserRole() {\r\n        var auth_headers = this.authRequestService.GetHeaders();\r\n        let options = new RequestOptions({ headers: auth_headers });\r\n        return this.http.get(this.userUrl + \"/role\")\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getRoles() {\r\n        var auth_headers = this.authRequestService.GetHeaders();\r\n        let options = new RequestOptions({ headers: auth_headers })\r\n        return this.http\r\n            .get(this.rolesUrl, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    setUserOrganization(data) {\r\n        this.userOrganizationDataSource.next(data);\r\n    }\r\n\r\n    getUserClaims() {\r\n        const auth_header = this.authRequestService.GetHeaders();\r\n        const options = new RequestOptions({ headers: auth_header });\r\n        return this.http.get(this.userUrl + \"/claims\", options)\r\n            .map(res => res.json());\r\n    }\r\n    setUserClaims(data) {\r\n        this.userClaimsDataSource.next(data);\r\n    }\r\n\r\n    registerUser(newUser: UserModel) {\r\n        const auth_header = this.authRequestService.GetHeaders();\r\n        const options = new RequestOptions({ headers: auth_header });\r\n        return this.http.post(this.userUrl, newUser, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    registerUserWithPassword(newUser: UserModelWithPassword) {\r\n        const auth_header = this.authRequestService.GetHeaders();\r\n        const options = new RequestOptions({ headers: auth_header });\r\n        return this.http.post(this.userUrl + \"/withpw\", newUser, options);\r\n    }\r\n\r\n    getUserName() {\r\n        const auth_header = this.authRequestService.GetHeaders();\r\n        const options = new RequestOptions({ headers: auth_header });\r\n        return this.http\r\n            .get(this.actionUrl + \"/user/name\", options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getUserByEmail(email: string) {\r\n        const auth_header = this.authRequestService.GetHeaders();\r\n        const options = new RequestOptions({ headers: auth_header });\r\n        return this.http\r\n            .get(this.actionUrl + \"/user/\" + email, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    userExistsByEmail(email: string) {\r\n        const auth_header = this.authRequestService.GetHeaders();\r\n        const options = new RequestOptions({ headers: auth_header });\r\n        return this.http\r\n            .get(this.actionUrl + \"/user/\" + email + \"/exists\", options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    addToRole(userName: string, roleName: string) {\r\n        /* Not yet implemented\r\n        return this.http.post(url,body)\r\n            .map(res => res.json());\r\n         */\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/account.service.ts","import { Injectable } from '@angular/core';\r\nimport { AuthRequest } from './auth.request.service';\r\nimport { BaseRequest } from '../utils/base.request';\r\nimport { ConfigService } from '../utils/config.service';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { Observable } from 'rxjs/Rx';\r\n\r\n@Injectable()\r\nexport class AuthService extends BaseRequest {\r\n\r\n  private authBaseUrl = \"/auth\";\r\n  private actionUrl;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private authService: AuthRequest,\r\n    configService: ConfigService\r\n  ) {\r\n    super(configService);\r\n    this.actionUrl = this.baseUrl + this.authBaseUrl;\r\n   }\r\n\r\n   isAdmin() : Observable<boolean> {\r\n    let auth_header = this.authService.GetHeaders();\r\n    let options = new RequestOptions({ headers: auth_header });\r\n        return this.http\r\n            .get(this.actionUrl + \"/admin\", options)\r\n            .map(res => res.json());\r\n   }\r\n\r\n   canSetClearance(): Observable<any> {\r\n    let auth_header = this.authService.GetHeaders();\r\n    let options = new RequestOptions({ headers: auth_header });\r\n    return this.http\r\n      //.get(this.actionUrl + \"/canSetPortCallClearance\", options);\r\n      .get(\"api/test/canSetPortCallClearance\", options)\r\n      .map(res => res.json());\r\n   }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/auth-service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { BaseRequest } from \"../utils/base.request\";\r\nimport { ConfigService } from \"../utils/config.service\";\r\n\r\n@Injectable()\r\nexport class AuthRequest {\r\n\r\n    constructor(\r\n        private http: Http\r\n    ) {\r\n    }\r\n\r\n    GetHeaders() {\r\n        let headers = new Headers();\r\n        headers.append('Authorization', 'Bearer ' + localStorage.getItem('auth_token'));\r\n        return headers;\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/auth.request.service.ts","import { Observable } from 'rxjs/Rx';\r\n\r\nexport abstract class BaseService {  \r\n    \r\n    constructor() { }\r\n    protected handleError(error: any) {\r\n    var applicationError = error.headers.get('Application-Error');\r\n\r\n    // either applicationError in header or model error in body\r\n    if (applicationError) {\r\n      return Observable.throw(applicationError);\r\n    }\r\n\r\n    var modelStateErrors: string = '';\r\n    var serverError = error.json();\r\n\r\n    if (!serverError.type) {\r\n      for (var key in serverError) {\r\n        if (serverError[key])\r\n          modelStateErrors += serverError[key] + '\\n';\r\n      }\r\n    }\r\n\r\n    modelStateErrors = modelStateErrors = '' ? null : modelStateErrors;\r\n    return Observable.throw(modelStateErrors || 'Server error');\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/base.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class ConstantsService {\r\n    \r\n    private getContactMediumListUrl: string;\r\n    private getClaimListUrl: string;\r\n    private getPortCallClaimListUrl: string;\r\n    private getMenuClaimListUrl: string;\r\n\r\n    constructor(private http: Http) {\r\n        this.getContactMediumListUrl = 'api/contactmedium/getall';\r\n        this.getClaimListUrl = 'api/claim/getall';\r\n        this.getPortCallClaimListUrl = 'api/claim/type/portcall';\r\n        this.getMenuClaimListUrl = 'api/claim/type/menu';\r\n    }\r\n    \r\n    getContactMediumList() {\r\n        return this.http.get(this.getContactMediumListUrl)\r\n                .map(res => res.json());\r\n    }\r\n\r\n    getClaimList() {\r\n        return this.http.get(this.getClaimListUrl)\r\n                .map(res => res.json());\r\n    }\r\n\r\n    GetPortCallClaimList() {\r\n        return this.http.get(this.getPortCallClaimListUrl)\r\n                .map(res => res.json());\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/constants.service.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Http } from '@angular/http';\r\nimport { ShipModel } from '../models/ship-model';\r\nimport { ContactModel } from '../models/contact-model';\r\nimport { BehaviorSubject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ContactService {\r\n    \r\n    constructor() {}\r\n\r\n    wipeServiceData() {\r\n        this.contactDataSource.next(null);\r\n    }\r\n\r\n    private contactDataSource = new BehaviorSubject<any>(null);\r\n    contactData$ = this.contactDataSource.asObservable();\r\n    \r\n    setContactData(data: ContactModel[]) {\r\n        this.contactDataSource.next(data);\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/contact.service.ts","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AccountService } from './account.service';\r\nimport { BaseService } from './base.service';\r\nimport { CONTENT_NAMES } from '../constants/content-names';\r\n\r\n@Injectable()\r\nexport class ContentService extends BaseService {\r\n    private contentSource = new BehaviorSubject<string>(CONTENT_NAMES.VIEW_PORT_CALLS);\r\n    contentName$ = this.contentSource.asObservable();\r\n\r\n    private portCallFormSource = new BehaviorSubject<string>('Port Call Details');\r\n    portCallFormName$ = this.portCallFormSource.asObservable();\r\n\r\n    constructor(private accountService: AccountService) {\r\n        super();\r\n    }\r\n\r\n    setContent(contentName: string) {\r\n        this.contentSource.next(contentName);\r\n    }\r\n\r\n    setPortCallForm(contentName: string) {\r\n        this.portCallFormSource.next(contentName);\r\n    }\r\n    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/content.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, RequestOptions } from \"@angular/http\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { LocationModel } from \"../models/location-model\";\r\nimport { AuthRequest } from \"./auth.request.service\";\r\nimport { SearchService } from \"./search.service\";\r\n\r\n@Injectable()\r\nexport class LocationService {\r\n\r\n    private searchService: SearchService;\r\n    private searchUrl: string;\r\n    private searchHarbourUrl: string;\r\n    private registerLocationUrl: string;\r\n    private getLocationTypesUrl: string;\r\n    private getCountriesUrl: string;\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private authRequest: AuthRequest\r\n    ) {\r\n        this.searchService = new SearchService(http);\r\n        this.searchUrl = 'api/location/search';\r\n        this.searchHarbourUrl = 'api/location/searchharbour';\r\n        this.registerLocationUrl = 'api/location/register';\r\n        this.getLocationTypesUrl = 'api/locationtype/getall';\r\n        this.getCountriesUrl = 'api/country/getall';\r\n    }\r\n\r\n    private locationDataSource = new BehaviorSubject<any>(null);\r\n    locationData$ = this.locationDataSource.asObservable();\r\n\r\n    setLocationData(data) {\r\n        this.locationDataSource.next(data);\r\n    }\r\n\r\n    public search(term: string) {\r\n        if (term.length < 2) {\r\n            return Observable.of([]);\r\n        }\r\n        return this.searchService.search(this.searchUrl, term);\r\n    }\r\n\r\n    public searchHarbour(term: string) {\r\n        if (term.length < 2) {\r\n            return Observable.of([]);\r\n        }\r\n        return this.searchService.search(this.searchHarbourUrl, term);\r\n    }\r\n\r\n    public registerLocation(newLocation: LocationModel) {\r\n        var auth_headers = this.authRequest.GetHeaders();\r\n        let options = new RequestOptions({ headers: auth_headers });\r\n        return this.http\r\n            .post(this.registerLocationUrl, newLocation, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    public getLocationTypes() {\r\n        return this.http.get(this.getLocationTypesUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    public getCountries() {\r\n        return this.http.get(this.getCountriesUrl)\r\n            .map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/location.service.ts","// Based on https://github.com/mmacneil/AngularASPNETCore2WebApiAuth/blob/master/src/src/app/shared/services/user.service.ts\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\r\nimport { ConfigService } from '../utils/config.service';\r\n\r\nimport { BaseService } from \"./base.service\";\r\n\r\nimport { Observable } from 'rxjs/Rx';\r\nimport { BehaviorSubject } from 'rxjs/Rx'; \r\nimport { JwtHelperService } from '@auth0/angular-jwt';\r\n\r\n// Add the RxJS Observable operators we need in this app.\r\nimport '../../rxjs-operators';\r\nimport { AccountService } from './account.service';\r\n\r\n@Injectable()\r\n\r\nexport class LoginService extends BaseService {\r\n\r\n  baseUrl: string = '';\r\n\r\n  // Observable navItem source\r\n  private _authNavStatusSource = new BehaviorSubject<boolean>(false);\r\n  // Observable navItem stream\r\n  authNavStatus$ = this._authNavStatusSource.asObservable();\r\n\r\n  private _loggedInSource = new BehaviorSubject<boolean>(false);\r\n  loggedIn$ = this._loggedInSource.asObservable();\r\n  private loggedIn = false;\r\n  private jwtHelper: any;\r\n\r\n  constructor(\r\n    private http: Http,\r\n    private configService: ConfigService,\r\n    private accountService: AccountService,\r\n    private jwtHelperService: JwtHelperService\r\n    ) {\r\n\r\n    super();\r\n    this.loggedIn = !!localStorage.getItem('auth_token');\r\n    // ?? not sure if this the best way to broadcast the status but seems to resolve issue on page refresh where auth status is lost in\r\n    // header component resulting in authed user nav links disappearing despite the fact user is still logged in\r\n    this._authNavStatusSource.next(this.loggedIn);\r\n    this.baseUrl = configService.getApiURI();\r\n    this.jwtHelperService = new JwtHelperService({\r\n      tokenGetter: () => { return localStorage.getItem(\"\"); }\r\n    });\r\n  }\r\n\r\n   login(userName, password) {\r\n    let headers = new Headers();\r\n    headers.append('Content-Type', 'application/json');\r\n\r\n    return this.http\r\n      .post(\r\n      this.baseUrl + '/auth/login',\r\n      JSON.stringify({ userName, password }),{ headers }\r\n      )\r\n      .map(res => res.json())\r\n      .map(res => {\r\n        if(res) {\r\n          localStorage.setItem('auth_token', res.auth_token);\r\n          this.loggedIn = true;\r\n          this._loggedInSource.next(true);\r\n          this._authNavStatusSource.next(true);\r\n          return true;\r\n        }\r\n        this._loggedInSource.next(false);\r\n        this._authNavStatusSource.next(false);\r\n        return false;\r\n        \r\n      })\r\n      .catch(this.handleError);\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('auth_token');\r\n    localStorage.removeItem('user-claims');\r\n    this.loggedIn = false;\r\n    this._loggedInSource.next(false);\r\n    this._authNavStatusSource.next(false);\r\n  }\r\n\r\n  // Tips from https://ryanchenkie.com/angular-authentication-using-route-guards\r\n  isLoggedIn() {\r\n    // Get token from localStorage\r\n    const token = localStorage.getItem(\"auth_token\");\r\n    // Check whether the token is expired\r\n    let isExpired = this.jwtHelperService.isTokenExpired(token);\r\n    \r\n    return !isExpired;\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/login.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, RequestOptions } from \"@angular/http\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { OrganizationModel } from \"../models/organization-model\";\r\nimport { AuthRequest } from \"./auth.request.service\";\r\nimport { SearchService } from \"./search.service\";\r\n\r\n@Injectable()\r\nexport class OrganizationService {\r\n    private searchService: SearchService;\r\n    private organizationSearch: string;\r\n    private registerOrganizationUrl: string;\r\n    private getOrganizationTypesUrl: string;\r\n    private getOrganizationForUserUrl: string;\r\n\r\n    constructor(private http: Http, private authRequestService: AuthRequest) {\r\n        this.searchService = new SearchService(http);\r\n        this.organizationSearch = 'api/organization/search';\r\n        this.registerOrganizationUrl = 'api/organization/register';\r\n        this.getOrganizationTypesUrl = 'api/organizationtype/getall';\r\n        this.getOrganizationForUserUrl = 'api/organization/foruser';\r\n    }\r\n\r\n\r\n    private organizationDataSource = new BehaviorSubject<any>(null);\r\n    organizationData$ = this.organizationDataSource.asObservable();\r\n\r\n    setOrganizationData(data) {\r\n        this.organizationDataSource.next(data);\r\n    }\r\n\r\n    public registerOrganization(newOrganization: OrganizationModel) {\r\n        var auth_headers = this.authRequestService.GetHeaders();\r\n        let options = new RequestOptions({ headers: auth_headers });\r\n        return this.http.post(this.registerOrganizationUrl, newOrganization, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    public search(term: string) {\r\n        if (term.length < 2) {\r\n            return Observable.of([]);\r\n        }\r\n        return this.searchService.search(this.organizationSearch, term);\r\n    }\r\n\r\n    public getOrganizationTypes() {\r\n        return this.http.get(this.getOrganizationTypesUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    public getOrganizationForUser() {\r\n        let auth_headers = this.authRequestService.GetHeaders();\r\n        let options = new RequestOptions({ headers: auth_headers });\r\n        let uri: string = this.getOrganizationForUserUrl;\r\n        return this.http.get(uri, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/organization.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { AuthRequest } from './auth.request.service';\r\n\r\n@Injectable()\r\nexport class PortCallOverviewService {\r\n    constructor(private http: Http, private authRequestService: AuthRequest) {\r\n        this.getOverviewUrl = 'api/portcall/overview';\r\n        this.getPortCallsUrl = 'api/portcall/get';\r\n        this.getPortCallsForUserUrl = 'api/portcall/foruser';\r\n    }\r\n    private getPortCallsUrl: string;\r\n    private getPortCallsForUserUrl: string;\r\n    private getOverviewUrl: string;\r\n\r\n    private overviewDataSource = new BehaviorSubject<any>(null);\r\n    overviewData$ = this.overviewDataSource.asObservable();\r\n    setOverviewData(data) {\r\n        this.overviewDataSource.next(data);\r\n    }\r\n\r\n    private draftOverviewDataSource = new BehaviorSubject<any>(null);\r\n    draftOverviewData$ = this.draftOverviewDataSource.asObservable();\r\n    setDraftData(data) {\r\n        this.draftOverviewDataSource.next(data);\r\n    }\r\n\r\n    private clearedByUserAgencyDataSource = new BehaviorSubject<any>(null);\r\n    clearedByUserAgencyOverviewData$ = this.clearedByUserAgencyDataSource.asObservable();\r\n    setClearedData(data) {\r\n        this.clearedByUserAgencyDataSource.next(data);\r\n    }\r\n\r\n    private portCallDataSource = new BehaviorSubject<any>(null);\r\n    portCallData$ = this.portCallDataSource.asObservable();\r\n\r\n    getOverview(portCallId: number) {\r\n        let uri: string = [this.getOverviewUrl, portCallId].join('/');\r\n        return this.http.get(uri)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    setPortCallData(data) {\r\n        this.portCallDataSource.next(data);\r\n    }\r\n\r\n    getPortCalls() {\r\n        let auth_headers = this.authRequestService.GetHeaders();\r\n        let options = new RequestOptions({ headers: auth_headers });\r\n        let uri: string = this.getPortCallsForUserUrl;\r\n        return this.http.get(uri, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getOverviews() {\r\n        let uri: string = this.getOverviewUrl;\r\n        return this.http.get(uri)\r\n            .map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call-overview.service.ts","import { Injectable } from '@angular/core';\r\nimport { Http, RequestOptions } from '@angular/http';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { FormMetaData } from '../models/form-meta-data.interface';\r\nimport { PortCallDetailsModel } from '../models/port-call-details-model';\r\nimport { PortCallModel } from '../models/port-call-model';\r\nimport { PortCallOverviewModel } from '../models/port-call-overview-model';\r\nimport { AuthRequest } from './auth.request.service';\r\n\r\n@Injectable()\r\nexport class PortCallService {\r\n\r\n  // Global overview\r\n  private getPortCallsByLocationUrl: string;\r\n  // Global port call\r\n  private getPortCallUrl: string;\r\n  private registerNewPortCallUrl: string;\r\n  private getPortCallsByUserIdUrl: string;\r\n  private updatePortCallUrl: string;\r\n  private updatePortCallStatusActiveUrl: string;\r\n  private updatePortCallStatusCancelledUrl: string;\r\n  private deletePortCallUrl: string;\r\n  // Global purpose\r\n  private getPurposeUrl: string;\r\n  private getOtherNameUrl: string;\r\n  private setPurposeForPortCallUrl: string;\r\n  private removePurposeForPortCallUrl: string;\r\n  // Global details\r\n  private saveDetailsUrl: string;\r\n  private getDetailsByPortCallIdUrl: string;\r\n  // Global clearance\r\n  private getClearanceUrl: string;\r\n  private saveClearanceUrl: string;\r\n  private getClearanceListByPortCallUrl: string;\r\n  private registerClearanceAgenciesForPortCallUrl: string;\r\n  // Subjects\r\n  private detailsPristine = new BehaviorSubject<boolean>(true);\r\n  detailsPristine$ = this.detailsPristine.asObservable();\r\n\r\n  constructor(private http: Http, private authRequestService: AuthRequest) {\r\n    // Port call\r\n    this.getPortCallUrl = \"api/portcall/get\";\r\n    this.registerNewPortCallUrl = \"api/portcall/register\";\r\n    this.getPortCallsByUserIdUrl = \"api/portcall/user\";\r\n    this.updatePortCallUrl = \"api/portcall/update\";\r\n    this.updatePortCallStatusActiveUrl = \"api/portcall/updatestatus/active\"\r\n    this.updatePortCallStatusCancelledUrl = 'api/portcall/updatestatus/cancelled';\r\n    this.deletePortCallUrl = 'api/portcall/delete';\r\n    // Purpose\r\n    this.getPurposeUrl = \"api/purpose/portcall\";\r\n    this.getOtherNameUrl = \"api/purpose/getothername\";\r\n    this.setPurposeForPortCallUrl = \"api/purpose/setpurposeforportcall\";\r\n    this.removePurposeForPortCallUrl = \"api/purpose/removepurposeforportcall\";\r\n    // Details\r\n    this.saveDetailsUrl = \"api/portcalldetails/register\";\r\n    this.getDetailsByPortCallIdUrl = \"api/portcalldetails/portcall\";\r\n    // Overview\r\n    this.getPortCallsByLocationUrl = 'api/portcall/location';\r\n    // Clearance\r\n    this.saveClearanceUrl = \"api/organizationportcall/save\";\r\n    this.getClearanceListByPortCallUrl = \"api/organizationportcall/portcall\";\r\n    this.registerClearanceAgenciesForPortCallUrl = \"api/organizationportcall/register\";\r\n  }\r\n\r\n\r\n\r\n  // Helper method for ETA/ETD formatting\r\n  etaEtdDataFormat(arrival, departure) {\r\n    let etaData = new Date(arrival);\r\n    let etdData = new Date(departure);\r\n    return {\r\n      eta: {\r\n        year: etaData.getFullYear(), month: etaData.getMonth() + 1, day: etaData.getDate(),\r\n        hour: etaData.getHours(), minute: etaData.getMinutes()\r\n      },\r\n      etd: {\r\n        year: etdData.getFullYear(), month: etdData.getMonth() + 1, day: etdData.getDate(),\r\n        hour: etdData.getHours(), minute: etdData.getMinutes()\r\n      }\r\n    };\r\n  }\r\n\r\n  private updateOverviewSource = new BehaviorSubject<any>(null);\r\n  updateOverview$ = this.updateOverviewSource.asObservable();\r\n  setUpdateOverview(data) {\r\n    this.updateOverviewSource.next(data);\r\n  }\r\n\r\n  /* * * * * * * * * * * * *\r\n   *                       *\r\n   *  == NEW PORT CALL ==  *\r\n   *                       *\r\n   * * * * * * * * * * * * */\r\n  // setPortCall: sets values for: Ship, Location, ETA/ETD, and Clearance list\r\n  setPortCall(overview: PortCallOverviewModel) {\r\n    // Ship Location Time\r\n    this.setShipData(overview.shipOverview);\r\n    this.setLocationData(overview.locationOverview);\r\n    var etaEtd = this.etaEtdDataFormat(overview.portCall.locationEta, overview.portCall.locationEtd);\r\n    this.setEtaEtdData(etaEtd);\r\n    // Clearance list\r\n    this.setClearanceListData(overview.clearanceList);\r\n    this.setPortCallStatus(overview.status);\r\n  }\r\n\r\n  updatePortCall(portCall: PortCallModel) {\r\n    console.log(\"Updating port call...\");\r\n    let authHeaders = this.authRequestService.GetHeaders();\r\n    let options = new RequestOptions({ headers: authHeaders });\r\n    this.http.post(this.registerNewPortCallUrl, portCall, options)\r\n      .map(res => res.json()).subscribe(\r\n        data => {\r\n          console.log(\"Success\");\r\n          console.log(data);\r\n        }\r\n      )\r\n  }\r\n  private shipDataSource = new BehaviorSubject<any>(null);\r\n  shipData$ = this.shipDataSource.asObservable();\r\n  setShipData(data) {\r\n    this.shipDataSource.next(data);\r\n  }\r\n  // Location\r\n  private locationDataSource = new BehaviorSubject<any>(null);\r\n  locationData$ = this.locationDataSource.asObservable();\r\n  setLocationData(data) {  // NEW\r\n    this.locationDataSource.next(data);\r\n  }\r\n  // ETA / ETD\r\n  private etaEtdDataSource = new BehaviorSubject<any>(null);\r\n  etaEtdData$ = this.etaEtdDataSource.asObservable();\r\n  setEtaEtdData(data) {  // NEW\r\n    this.etaEtdDataSource.next(data);\r\n  }\r\n  // Status\r\n  private portCallStatusSource = new BehaviorSubject<any>(null);\r\n  portCallStatusData$ = this.portCallStatusSource.asObservable();\r\n  setPortCallStatus(data) {\r\n    this.portCallStatusSource.next(data);\r\n  }\r\n\r\n  // REGISTER NEW PORT CALL\r\n  registerNewPortCall(portCall: PortCallModel) {  // NEW\r\n    console.log(\"Registering new port call...\");\r\n    let authHeaders = this.authRequestService.GetHeaders();\r\n    let options = new RequestOptions({ headers: authHeaders });\r\n    let uri: string = this.registerNewPortCallUrl;\r\n    this.setPortCallStatus(\"Draft\");\r\n    return this.http.post(uri, portCall, options).map(res => res.json());\r\n  }\r\n  // Set port call status to actual\r\n  updatePortCallStatusActive(portCallId: number) {\r\n    let uri = [this.updatePortCallStatusActiveUrl, portCallId].join('/');\r\n    console.log(\"Updating port call status to active...\");\r\n    return this.http.post(uri, null).map(res => res.json());\r\n  }\r\n  // Set port call status to cancelled\r\n  updatePortCallStatusCancelled(portCallId: number) {\r\n    let uri = [this.updatePortCallStatusCancelledUrl, portCallId].join('/');\r\n    console.log(\"Updating port call status to cancelled...\");\r\n    this.http.post(uri, null).map(res => res.json()).subscribe(\r\n      updateStatusResponse => {\r\n        console.log(\"Port call successfully cancelled.\");\r\n      }\r\n    );\r\n  }\r\n  // Delete port call draft\r\n  deletePortCallDraft(portCall: PortCallModel) {\r\n    console.log(\"Deleting port call...\");\r\n    let authHeaders = this.authRequestService.GetHeaders();\r\n    let options = new RequestOptions({ headers: authHeaders });\r\n    let uri: string = this.deletePortCallUrl;\r\n\r\n    return this.http.post(uri, portCall, options).map(res => res.json());\r\n  }\r\n  // Get methods\r\n  getPortCallById(portCallId: number) {\r\n    let uri: string = [this.getPortCallUrl, portCallId].join('/');\r\n\r\n    return this.http.get(uri)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  getPortCallsByUserId(userId: number) {\r\n    let uri: string = [this.getPortCallsByUserIdUrl, userId].join('/');\r\n    return this.http.get(uri)\r\n      .map(res => res.json());\r\n  }\r\n\r\n\r\n  /* * * * * * * * * * * * * * * \r\n   *                           *\r\n   * == PORT CALL DETAILS ==   *\r\n   *                           *\r\n   * * * * * * * * * * * * * * */\r\n  setDetails(details: PortCallDetailsModel) {  // NEW\r\n    this.setCrewPassengersAndDimensionsData(details);\r\n    this.setReportingForThisPortCallData(details);\r\n    this.setDetailsIdentificationData(details);\r\n    this.detailsPristine.next(true);\r\n  }\r\n  private detailsIdentificationSource = new BehaviorSubject<any>(null);\r\n  detailsIdentificationData$ = this.detailsIdentificationSource.asObservable();\r\n  setDetailsIdentificationData(data) {\r\n    this.detailsPristine.next(false);\r\n    this.detailsIdentificationSource.next(data);\r\n  }\r\n  // Crew, passengers and dimensions\r\n  private crewPassengersAndDimensionsSource = new BehaviorSubject<any>(null);\r\n  crewPassengersAndDimensionsData$ = this.crewPassengersAndDimensionsSource.asObservable();\r\n  setCrewPassengersAndDimensionsData(data) { // NEW\r\n    this.detailsPristine.next(false);\r\n    this.crewPassengersAndDimensionsSource.next(data);\r\n  }\r\n  private crewPassengersAndDimensionsMeta = new BehaviorSubject<FormMetaData>({ valid: true });\r\n  crewPassengersAndDimensionsMeta$ = this.crewPassengersAndDimensionsMeta.asObservable();\r\n  setCrewPassengersAndDimensionsMeta(metaData: FormMetaData) {\r\n    this.crewPassengersAndDimensionsMeta.next(metaData);\r\n  }\r\n  // Reporting\r\n  // This is a list of checkboxes that specify which FAL forms to include in this port call registration \r\n  private reportingForThisPortCallSource = new BehaviorSubject<any>(null);\r\n  reportingForThisPortCallData$ = this.reportingForThisPortCallSource.asObservable();\r\n  setReportingForThisPortCallData(data) {  // NEW\r\n    this.detailsPristine.next(false);\r\n    this.reportingForThisPortCallSource.next(data);\r\n  }\r\n  // Purpose\r\n  private portCallPurposeDataSource = new BehaviorSubject<any>(null);\r\n  portCallPurposeData$ = this.portCallPurposeDataSource.asObservable();\r\n  setPortCallPurposeData(data) { // NEW\r\n    this.detailsPristine.next(false);\r\n    this.portCallPurposeDataSource.next(data);\r\n  }\r\n  // User-specified purpose of type \"Other\"\r\n  private otherPurposeNameSource = new BehaviorSubject<string>(\"\");\r\n  otherPurposeName$ = this.otherPurposeNameSource.asObservable();\r\n  setOtherPurposeName(data) {\r\n    this.detailsPristine.next(false);\r\n    this.otherPurposeNameSource.next(data);\r\n  }\r\n  // Not used yet:\r\n  private otherPurposeDataSource = new BehaviorSubject<any>(null);\r\n  otherPurposeData$ = this.otherPurposeDataSource.asObservable();\r\n  setOtherPurposeData(data) { // NEW - try to use otherpurpose object instead of just name string, for easier id handling etc.\r\n    this.otherPurposeDataSource.next(data);\r\n  }\r\n  // SAVE DETAILS\r\n  saveDetails(details: any, purposes: any, otherName: string) { // NEW\r\n    details.portCallDetailsId = details.portCallId; // To ensure one-to-one in DB\r\n    console.log(\"Saving port call details...\");\r\n    this.http.post(this.saveDetailsUrl, details).map(res => res.json()).subscribe(\r\n      detailsResponse => {\r\n        console.log(\"Successfully saved port call details.\");\r\n        this.savePurposesForPortCall(details.portCallId, purposes, otherName);\r\n      }\r\n    );\r\n  }\r\n  savePurposesForPortCall(pcId: number, purposes: any, otherName: string) { // NEW\r\n    if (purposes.length === 0) {\r\n      let uri = [this.removePurposeForPortCallUrl, pcId.toString()].join('/');\r\n      this.http.post(uri, null).map(res => res.json()).subscribe(\r\n        removePurposeResponse => {\r\n          if (removePurposeResponse) this.detailsPristine.next(true);\r\n        }\r\n      );\r\n    } else {\r\n      var pcHasPurposeList = purposes.map(p => {\r\n        return {\r\n          portCallId: pcId,\r\n          portCallPurposeId: p.portCallPurposeId,\r\n          purposeIfUnknown: (p.name == \"Other\") ? otherName : null\r\n        }\r\n      });\r\n      console.log(\"Saving port call purposes to database...\");\r\n      this.http.post(this.setPurposeForPortCallUrl, pcHasPurposeList).map(res => res.json()).subscribe(\r\n        purposeResponse => {\r\n          if (purposeResponse) this.detailsPristine.next(true);\r\n          console.log(\"Purposes successfully saved.\");\r\n        }\r\n      );\r\n    }\r\n\r\n  }\r\n\r\n  // Get methods\r\n  getDetailsByPortCallId(portCallId: number) {\r\n    let uri: string = [this.getDetailsByPortCallIdUrl, portCallId].join('/');\r\n    return this.http.get(uri).map(res => {\r\n      if (res && res.ok) {\r\n        return res.json();\r\n      } else {\r\n        return res.status;\r\n      }\r\n    }).catch(e => {\r\n      return Observable.of(e);\r\n    });\r\n  }\r\n\r\n  getPurposeByPortCallId(portCallId: number) {\r\n    let uri: string = [this.getPurposeUrl, portCallId].join('/');\r\n    return this.http.get(uri).map(res => {\r\n      return res.json();\r\n    }).catch(e => {\r\n      console.log(e);\r\n      return Observable.of(e);\r\n    });\r\n  }\r\n\r\n  getOtherName(portCallId: number) {\r\n    let uri: string = [this.getOtherNameUrl, portCallId].join('/');\r\n    return this.http.get(uri).map(res => {\r\n      return res.json();\r\n    }).catch(e => {\r\n      console.log(e);\r\n      return Observable.of(e);\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /* * * * * * * * * * *  \r\n   *                   *\r\n   *  == CLEARANCE ==  *\r\n   *                   *\r\n   * * * * * * * * * * */\r\n  private clearanceDataSource = new BehaviorSubject<any>(null);\r\n  clearanceData$ = this.clearanceDataSource.asObservable();\r\n  setClearance(data) {\r\n    this.clearanceDataSource.next(data);\r\n  }\r\n\r\n  // Clearance agencies list\r\n  private clearanceListDataSource = new BehaviorSubject<any>(null);\r\n  clearanceListData$ = this.clearanceListDataSource.asObservable();\r\n  setClearanceListData(data) {  // NEW\r\n    this.clearanceListDataSource.next(data);\r\n  }\r\n\r\n  saveClearance(clearanceModel: any) {\r\n    console.log('Saving clearance to database...');\r\n    this.http.post(this.saveClearanceUrl, clearanceModel).map(res => res.json()).subscribe(\r\n      data => {\r\n        console.log(\"Clearance saved successfully.\");\r\n      },\r\n      error => {\r\n        console.log(\"ERROR: \", error);\r\n      }\r\n    );\r\n  }\r\n\r\n  getClearanceListForPortCall(portCallId: number) {\r\n    let uri: string = [this.getClearanceListByPortCallUrl, portCallId].join('/');\r\n\r\n    return this.http.get(uri).map(\r\n      res => res.json().catch(\r\n        error => {\r\n          return Observable.of(error);\r\n        }\r\n      )\r\n    );\r\n  }\r\n\r\n  // REGISTER CLEARANCE AGENCIES FOR NEW PORT CALL\r\n  registerClearanceAgenciesForPortCall(portCall: PortCallModel) { // NEW\r\n    this.http.post(this.registerClearanceAgenciesForPortCallUrl, portCall).map(res => res.json()).subscribe(\r\n      clearanceData => {\r\n        console.log(\"Clearance agency information successfully added to port call.\");\r\n        this.clearanceListDataSource.next(clearanceData);\r\n      }\r\n    )\r\n  }\r\n\r\n\r\n\r\n  // Wipe methods\r\n  wipeServiceData() {\r\n    this.shipDataSource.next(null);\r\n    this.locationDataSource.next(null);\r\n    this.etaEtdDataSource.next(null);\r\n    this.clearanceListDataSource.next(null);\r\n    // Details\r\n    this.wipeDetailsData();\r\n  }\r\n\r\n\r\n  wipeDetailsData() {\r\n    this.reportingForThisPortCallSource.next(null);\r\n    this.crewPassengersAndDimensionsSource.next(null);\r\n    this.portCallPurposeDataSource.next(null);\r\n    this.otherPurposeNameSource.next(\"\");\r\n    this.detailsPristine.next(true);\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/port-call.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class PurposeService {\r\n    private purposeUrl = \"api/purpose/all\";\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    getPurposes() {        \r\n        return this.http.get(this.purposeUrl)\r\n            .map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/purpose.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\n\r\n@Injectable()\r\nexport class SearchService {\r\n\r\n    constructor(private http: Http) { }\r\n\r\n    public search(baseUrl: string, term: string) {\r\n\r\n        let encoded_term: string = encodeURIComponent(term);\r\n        let uri: string = [baseUrl, encoded_term].join('/');\r\n\r\n        return this.http.get(uri).map(res => res.json());\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/search.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http } from \"@angular/http\";\r\nimport { Observable } from \"rxjs\";\r\nimport { SearchService } from \"./search.service\";\r\n\r\n@Injectable()\r\nexport class ShipFlagCodeService {\r\n    constructor(private http: Http) {\r\n        this.searchService = new SearchService(http);\r\n        this.actionUrl = 'api/shipflagcode/search';\r\n    }\r\n\r\n    private searchService: SearchService;\r\n    private actionUrl: string;\r\n\r\n    public search(term: string) {\r\n        if (term.length < 1) {\r\n            return Observable.of([]);\r\n        }\r\n        return this.searchService.search(this.actionUrl, term);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/ship-flag-code.service.ts","import { Injectable } from \"@angular/core\";\r\nimport { Http, RequestOptions } from \"@angular/http\";\r\nimport { BehaviorSubject, Observable } from \"rxjs\";\r\nimport { ShipContactModel } from \"../models/ship-contact-model\";\r\nimport { AuthRequest } from \"./auth.request.service\";\r\nimport { SearchService } from \"./search.service\";\r\n\r\n@Injectable()\r\nexport class ShipService {\r\n\r\n    private searchService: SearchService;\r\n    private shipSearchUrl: string;\r\n    private shipTypeUrl: string;\r\n    private hullTypeUrl: string;\r\n    private lengthTypeUrl: string;\r\n    private breadthTypeUrl: string;\r\n    private powerTypeUrl: string;\r\n    private shipSourceUrl: string;\r\n    private shipStatusListUrl: string;\r\n    private registerShipUrl: string;\r\n    private flagCodeSearchUrl: string;\r\n    private getContactListForShipUrl: string;\r\n    private saveShipContactListUrl: string;\r\n\r\n    constructor(\r\n        private http: Http,\r\n        private authRequest: AuthRequest\r\n    ) {\r\n        this.searchService = new SearchService(http);\r\n        this.shipSearchUrl = 'api/ship/search';\r\n        this.shipTypeUrl = 'api/shiptype/getall';\r\n        this.hullTypeUrl = 'api/shiphulltype/getall';\r\n        this.lengthTypeUrl = 'api/shiplengthtype/getall';\r\n        this.breadthTypeUrl = 'api/shipbreadthtype/getall';\r\n        this.powerTypeUrl = 'api/shippowertype/getall';\r\n        this.shipSourceUrl = 'api/shipsource/getall';\r\n        this.shipStatusListUrl = 'api/shipstatus/getall';\r\n        this.registerShipUrl = 'api/ship/register';\r\n        this.flagCodeSearchUrl = 'api/shipflagcode/search';\r\n        this.getContactListForShipUrl = 'api/shipcontact/ship';\r\n        this.saveShipContactListUrl = 'api/shipcontact/savelist'\r\n    }\r\n\r\n\r\n\r\n    private organizationDataSource = new BehaviorSubject<any>(null);\r\n    organizationData$ = this.organizationDataSource.asObservable();\r\n\r\n    private countryDataSource = new BehaviorSubject<any>(null);\r\n    countryData$ = this.countryDataSource.asObservable();\r\n\r\n    private shipFlagCodeDataSource = new BehaviorSubject<any>(null);\r\n    shipFlagCodeData$ = this.shipFlagCodeDataSource.asObservable();\r\n\r\n    private shipOverviewDataSource = new BehaviorSubject<any>(null);\r\n    shipOverviewData$ = this.shipOverviewDataSource.asObservable();\r\n\r\n    setShipOverviewData(data) {\r\n        this.shipOverviewDataSource.next(data);\r\n    }\r\n\r\n    registerShip(newShip: any) {\r\n        const auth_header = this.authRequest.GetHeaders();\r\n        const options = new RequestOptions({ headers: auth_header });\r\n        return this.http.post(this.registerShipUrl, newShip, options)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    saveShipContactList(shipContactList: ShipContactModel[]) {\r\n        return this.http.post(this.saveShipContactListUrl, shipContactList)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    setOrganizationData(data) {\r\n        this.organizationDataSource.next(data);\r\n    }\r\n\r\n    setCountryData(data) {\r\n        this.countryDataSource.next(data);\r\n    }\r\n\r\n    setShipFlagCodeData(data) {\r\n        this.shipFlagCodeDataSource.next(data);\r\n    }\r\n\r\n    search(term: string) {\r\n        if (term.length < 2) {\r\n            return Observable.of([]);\r\n        }\r\n        return this.searchService.search(this.shipSearchUrl, term);\r\n    }\r\n\r\n    searchFlagCode(term: string) {\r\n        if (term.length < 1) {\r\n            return Observable.of([]);\r\n        }\r\n        return this.searchService.search(this.flagCodeSearchUrl, term);\r\n    }\r\n\r\n    getShipTypes() {\r\n        return this.http.get(this.shipTypeUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getHullTypes() {\r\n        return this.http.get(this.hullTypeUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getLengthTypes() {\r\n        return this.http.get(this.lengthTypeUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getBreadthTypes() {\r\n        return this.http.get(this.breadthTypeUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getPowerTypes() {\r\n        return this.http.get(this.powerTypeUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getShipSources() {\r\n        return this.http.get(this.shipSourceUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getShipStatusList() {\r\n        return this.http.get(this.shipStatusListUrl)\r\n            .map(res => res.json());\r\n    }\r\n\r\n    getContactList(shipId: number) {\r\n        let uri: string = [this.getContactListForShipUrl, shipId].join('/');\r\n        return this.http.get(uri)\r\n            .map(res => res.json());\r\n    }\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/services/ship.service.ts","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgSelectModule } from '@ng-select/ng-select';\r\nimport { ConfirmationModalComponent } from './components/confirmation-modal/confirmation-modal.component';\r\nimport { ClearancesComponent } from './components/confirmation-view/clearances/clearances.component';\r\nimport { ConfirmationViewComponent } from './components/confirmation-view/confirmation-view.component';\r\nimport { PortCallDetailsComponent } from './components/confirmation-view/port-call-details/port-call-details.component';\r\nimport { SelectedPurposesComponent } from './components/confirmation-view/port-call-details/selected-purposes/selected-purposes.component';\r\nimport { ContactSelectComponent } from './components/contact-select/contact-select.component';\r\nimport { LocationInfoTableComponent } from './components/location-info-table/location-info-table.component';\r\nimport { LocationTimeInfoTableComponent } from './components/location-time-info-table/location-time-info-table.component';\r\nimport { SearchHarbourComponent } from './components/search-harbour/search-harbour.component';\r\nimport { SearchLocationComponent } from './components/search-location/search-location.component';\r\nimport { SearchOrganizationComponent } from './components/search-organization/search-organization.component';\r\nimport { SearchShipComponent } from './components/search-ship/search-ship.component';\r\nimport { SelectedContactMediumsComponent } from './components/selected-contact-mediums/selected-contact-mediums.component';\r\nimport { ShipInfoTableComponent } from './components/ship-info-table/ship-info-table.component';\r\nimport { SsnCardComponent } from './components/ssn-card/ssn-card.component';\r\nimport { TableCardComponent } from './components/table-card/table-card.component';\r\nimport { ContactService } from './services/contact.service';\r\nimport { LocationService } from './services/location.service';\r\nimport { OrganizationService } from './services/organization.service';\r\nimport { ShipService } from './services/ship.service';\r\nimport { IntegerValidator } from './utils/custom-validators/integer-validator.directive';\r\nimport { NumberValidator } from './utils/custom-validators/number-validator.directive';\r\nimport { PositiveNumberValidator } from './utils/custom-validators/positive-number-validator.directive';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule, FormsModule, NgSelectModule, NgbModule\r\n  ],\r\n  declarations: [\r\n    SsnCardComponent,\r\n    TableCardComponent,\r\n    ConfirmationViewComponent,\r\n    SelectedPurposesComponent,\r\n    PortCallDetailsComponent,\r\n    ClearancesComponent,\r\n    PositiveNumberValidator,\r\n    NumberValidator,\r\n    IntegerValidator,\r\n    ContactSelectComponent,\r\n    SelectedContactMediumsComponent,\r\n    ConfirmationModalComponent,\r\n    SearchOrganizationComponent,\r\n    SearchShipComponent,\r\n    ShipInfoTableComponent,\r\n    LocationTimeInfoTableComponent,\r\n    LocationInfoTableComponent,\r\n    SearchLocationComponent,\r\n    SearchHarbourComponent,\r\n  ],\r\n  exports: [\r\n    SsnCardComponent,\r\n    TableCardComponent,\r\n    ConfirmationViewComponent,\r\n    PositiveNumberValidator,\r\n    NumberValidator,\r\n    IntegerValidator,\r\n    ContactSelectComponent,\r\n    SelectedContactMediumsComponent,\r\n    ConfirmationModalComponent,\r\n    SearchOrganizationComponent,\r\n    SearchShipComponent,\r\n    ShipInfoTableComponent,\r\n    LocationTimeInfoTableComponent,\r\n    LocationInfoTableComponent,\r\n    SearchLocationComponent,\r\n    SearchHarbourComponent\r\n  ],\r\n  providers: [\r\n    ContactService, OrganizationService, ShipService, LocationService\r\n  ],\r\n  entryComponents: [\r\n    ConfirmationModalComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","import { ConfigService } from \"./config.service\";\r\nimport { BaseService } from \"../services/base.service\";\r\n\r\nexport abstract class BaseRequest extends BaseService {\r\n\r\n    protected baseUrl: string;\r\n    \r\n    constructor(private configService: ConfigService) {\r\n        super();\r\n        this.baseUrl = this.configService.getApiURI();\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/base.request.ts","import { Injectable } from '@angular/core';\r\n \r\n@Injectable()\r\nexport class ConfigService {\r\n     \r\n    _apiURI : string;\r\n \r\n    constructor() {\r\n        this._apiURI = 'http://localhost:5000/api';\r\n     }\r\n \r\n     getApiURI() {\r\n         return this._apiURI;\r\n     }    \r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/config.service.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[integerValidator][formControlName],[integerValidator][formControl],[integerValidator][ngModel]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: forwardRef(() => IntegerValidator), multi: true }\r\n  ]\r\n})\r\nexport class IntegerValidator implements Validator {\r\n\r\n  constructor() { }\r\n  \r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (c.value !== undefined && (isNaN(c.value) || (c.value - Math.floor(c.value)) !== 0 )) {\r\n      return { 'notIntegerError': true }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/integer-validator.directive.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[numberValidator][formControlName],[numberValidator][formControl],[numberValidator][ngModel]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: forwardRef(() => NumberValidator), multi: true }\r\n  ]\r\n})\r\nexport class NumberValidator implements Validator {\r\n\r\n  constructor() { }\r\n  \r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n\r\n    if (c.value !== undefined && c.value === null) {\r\n      return { 'notNumberError': true }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/number-validator.directive.ts","import { Directive, forwardRef, Attribute } from '@angular/core';\r\nimport { Validator, NG_VALIDATORS, AbstractControl } from '@angular/forms';\r\n\r\n@Directive({\r\n  selector: '[positiveNumberValidator][formControlName],[positiveNumberValidator][formControl],[positiveNumberValidator][ngModel]',\r\n  providers: [\r\n    { provide: NG_VALIDATORS, useExisting: forwardRef(() => PositiveNumberValidator), multi: true }\r\n  ]\r\n})\r\nexport class PositiveNumberValidator implements Validator {\r\n\r\n  constructor() { }\r\n  \r\n  validate(c: AbstractControl): { [key: string]: any } {\r\n    if (c.value !== undefined && (isNaN(c.value) || c.value < 0 )) {\r\n      return { 'notPositiveNumberError': true }\r\n    }\r\n    \r\n    return null;\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/utils/custom-validators/positive-number-validator.directive.ts","import { Request, XHRBackend, BrowserXhr, ResponseOptions, XSRFStrategy, Response } from '@angular/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/catch';\r\nimport 'rxjs/add/observable/throw';\r\nimport { Injectable } from '@angular/core';\r\n\r\n// sweet global way to handle 401s - works in tandem with existing AuthGuard route checks\r\n// http://stackoverflow.com/questions/34934009/handling-401s-globally-with-angular-2\r\n@Injectable()\r\nexport class AuthenticateXHRBackend extends XHRBackend {\r\n\r\n    constructor(_browserXhr: BrowserXhr, _baseResponseOptions: ResponseOptions, _xsrfStrategy: XSRFStrategy) {\r\n        super(_browserXhr, _baseResponseOptions, _xsrfStrategy);\r\n    }\r\n\r\n    createConnection(request: Request) {\r\n        let xhrConnection = super.createConnection(request);\r\n        xhrConnection.response = xhrConnection.response.catch((error: Response) => {\r\n            if ((error.status === 401 || error.status === 403) && (window.location.href.match(/\\?/g) || []).length < 2) {\r\n                \r\n                console.log('The authentication session expired or the user is not authorized. Force refresh of the current page.');\r\n                /* Great solution for bundling with Auth Guard! \r\n                1. Auth Guard checks authorized user (e.g. by looking into LocalStorage). \r\n                2. On 401/403 response you clean authorized user for the Guard (e.g. by removing coresponding parameters in LocalStorage). \r\n                3. As at this early stage you can't access the Router for forwarding to the login page,\r\n                4. refreshing the same page will trigger the Guard checks, which will forward you to the login screen */\r\n                localStorage.removeItem('auth_token');\r\n                window.location.href = window.location.href + 'login';\r\n                //window.location.href = window.location.href + '?' + new Date().getMilliseconds();             \r\n            }\r\n            return Observable.throw(error);\r\n        });\r\n        return xhrConnection;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/authenticate-xhr.backend.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}